Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Unused terminals:

    ALTSTRING
    ASSUME
    GLOBAL_INTERPRETATION
    HAVE
    INTERPRET
    LATIN
    LETTER
    LONG_IDENT
    OUTER_COMMENT
    SHORT_IDENT
    SHOW
    STRING
    SUBLOCALE
    SUBSCRIPT
    SYM_FLOAT
    SYM_IDENT
    TERM_VAR
    THEN
    TYPE_IDENT
    TYPE_VAR
    VERBATIM

Grammar

Rule 0     S' -> theory_file
Rule 1     theory_file -> theory
Rule 2     theory_file -> section_block theory_file
Rule 3     theory_file -> text_block theory_file
Rule 4     theory -> THEORY ID imports_opt BEGIN content END
Rule 5     imports_opt -> IMPORTS import_list
Rule 6     imports_opt -> empty
Rule 7     import_list -> ID import_list
Rule 8     import_list -> QUOTED_STRING import_list
Rule 9     import_list -> ID
Rule 10    content -> statement content
Rule 11    content -> empty
Rule 12    statement -> axiomatization_block
Rule 13    statement -> fun_block
Rule 14    statement -> interpretation_block
Rule 15    statement -> lemma_block
Rule 16    statement -> locale_block
Rule 17    statement -> method_block
Rule 18    statement -> section_block
Rule 19    statement -> text_block
Rule 20    statement -> type_synonym
Rule 21    statement -> typedecl
Rule 22    method_block -> METHOD method_name EQUALS instruction
Rule 23    method_name -> ID
Rule 24    instruction -> single_instruction
Rule 25    instruction -> single_instruction instruction_modifier
Rule 26    instruction -> single_instruction instruction_modifier COMMA instruction
Rule 27    instruction -> single_instruction SEMICOLON instruction
Rule 28    instruction -> single_instruction COMMA instruction
Rule 29    instruction -> LEFT_PAREN instruction RIGHT_PAREN
Rule 30    instruction -> LEFT_PAREN instruction RIGHT_PAREN instruction_modifier
Rule 31    instruction_modifier -> PLUS
Rule 32    instruction_modifier -> QUESTION_MARK
Rule 33    single_instruction -> ID
Rule 34    single_instruction -> ID method_args
Rule 35    single_instruction -> LEFT_PAREN ID method_args RIGHT_PAREN
Rule 36    single_instruction -> LEFT_PAREN ID method_args RIGHT_PAREN instruction_modifier
Rule 37    method_args -> ID COLON method_arg method_args
Rule 38    method_args -> method_arg method_args
Rule 39    method_args -> empty
Rule 40    method_arg -> ID
Rule 41    method_arg -> ID LEFT_PAREN NAT RIGHT_PAREN
Rule 42    method_arg -> ID DOT ID
Rule 43    method_arg -> ID DOT ID LEFT_PAREN NAT RIGHT_PAREN
Rule 44    method_arg -> QUOTED_STRING
Rule 45    lemma_block -> LEMMA ID COLON assumes_block shows_clause lemma_proof_block
Rule 46    lemma_proof_block -> PROOF apply_block
Rule 47    lemma_proof_block -> apply_block
Rule 48    lemma_proof_block -> empty
Rule 49    assumes_block -> ASSUMES assumptions_list
Rule 50    assumptions_list -> assumption AND assumptions_list
Rule 51    assumptions_list -> assumption
Rule 52    assumption -> QUOTED_STRING
Rule 53    assumption -> NAT COLON QUOTED_STRING
Rule 54    shows_clause -> SHOWS QUOTED_STRING
Rule 55    apply_block -> single_apply apply_block
Rule 56    apply_block -> subgoal apply_block
Rule 57    apply_block -> empty
Rule 58    single_apply -> APPLY instruction
Rule 59    single_apply -> APPLY LEFT_PAREN instruction RIGHT_PAREN
Rule 60    single_apply -> USING using_block APPLY DASH
Rule 61    single_apply -> USING using_block APPLY instruction
Rule 62    single_apply -> USING using_block APPLY LEFT_PAREN instruction RIGHT_PAREN
Rule 63    single_apply -> BY instruction
Rule 64    single_apply -> BY LEFT_PAREN instruction RIGHT_PAREN
Rule 65    single_apply -> USING using_block BY instruction
Rule 66    single_apply -> USING using_block BY LEFT_PAREN instruction RIGHT_PAREN
Rule 67    single_apply -> DONE
Rule 68    single_apply -> SORRY
Rule 69    using_block -> ASSMS using_block
Rule 70    using_block -> ASSMS LEFT_PAREN NAT RIGHT_PAREN using_block
Rule 71    using_block -> ASSMS LEFT_PAREN NAT COMMA NAT RIGHT_PAREN using_block
Rule 72    using_block -> ASSMS LEFT_PAREN NAT DASH NAT RIGHT_PAREN using_block
Rule 73    using_block -> empty
Rule 74    subgoals -> subgoal subgoals
Rule 75    subgoals -> subgoal
Rule 76    subgoal -> SUBGOAL QUOTED_STRING apply_block
Rule 77    typespec -> ID
Rule 78    typespec -> typeargs ID
Rule 79    typearg -> ID
Rule 80    typearg -> ID COLON COLON ID
Rule 81    typeargs -> typearg
Rule 82    typeargs -> typearg COMMA typeargs
Rule 83    typeargs -> LEFT_PAREN typeargs RIGHT_PAREN
Rule 84    vars -> var
Rule 85    vars -> var AND vars
Rule 86    var -> names
Rule 87    var -> ID COLON COLON ID
Rule 88    var -> GREEK COLON COLON ID
Rule 89    var -> ID COLON COLON QUOTED_STRING
Rule 90    var -> GREEK COLON COLON QUOTED_STRING
Rule 91    var -> names COLON COLON ID
Rule 92    var -> names COLON COLON QUOTED_STRING
Rule 93    var -> ID mixfix
Rule 94    var -> ID COLON COLON ID mixfix
Rule 95    var -> GREEK COLON COLON ID mixfix
Rule 96    var -> ID COLON COLON QUOTED_STRING mixfix
Rule 97    var -> GREEK COLON COLON QUOTED_STRING mixfix
Rule 98    names -> ID
Rule 99    names -> ID AND names
Rule 100   names_list -> ID
Rule 101   names_list -> ID names
Rule 102   prop_pat -> LEFT_PAREN prop_pat_terms RIGHT_PAREN
Rule 103   prop_pat_terms -> prop_pat_term
Rule 104   prop_pat_terms -> prop_pat_term prop_pat_terms
Rule 105   prop_pat_term -> IS ID
Rule 106   prop_pat_term -> IS QUOTED_STRING
Rule 107   thmdecl -> thmbind COLON
Rule 108   thmdef -> thmbind EQ
Rule 109   thm -> ID attributes
Rule 110   thm -> ID
Rule 111   thm -> attributes
Rule 112   thms -> thm
Rule 113   thms -> thm thms
Rule 114   thmbind -> ID
Rule 115   thmbind -> ID attributes
Rule 116   thmbind -> attributes
Rule 117   attributes -> LEFT_BRACKET attributes_list RIGHT_BRACKET
Rule 118   attributes_list -> empty
Rule 119   attributes_list -> attribute
Rule 120   attributes_list -> attribute COMMA attributes_list
Rule 121   attribute -> ID args
Rule 122   args -> empty
Rule 123   args -> arg
Rule 124   args -> arg args
Rule 125   arg -> ID
Rule 126   arg -> LEFT_PAREN args RIGHT_PAREN
Rule 127   arg -> LEFT_BRACKET args RIGHT_BRACKET
Rule 128   for_fixes -> FOR vars
Rule 129   multi_specs -> structured_spec
Rule 130   multi_specs -> structured_spec PIPE multi_specs
Rule 131   structured_spec -> ID spec_prems
Rule 132   structured_spec -> ID spec_prems for_fixes
Rule 133   structured_spec -> QUOTED_STRING spec_prems
Rule 134   structured_spec -> QUOTED_STRING spec_prems for_fixes
Rule 135   structured_spec -> thmdecl ID spec_prems for_fixes
Rule 136   structured_spec -> thmdecl QUOTED_STRING spec_prems for_fixes
Rule 137   spec_prems -> empty
Rule 138   spec_prems -> IF prop_list
Rule 139   prop_list -> ID
Rule 140   prop_list -> ID prop_list
Rule 141   prop_list -> ID AND prop_list
Rule 142   specification -> vars WHERE multi_specs
Rule 143   opening -> OPENING names_list
Rule 144   axiomatization_block -> AXIOMATIZATION
Rule 145   axiomatization_block -> AXIOMATIZATION vars
Rule 146   axiomatization_block -> AXIOMATIZATION WHERE axiomatization
Rule 147   axiomatization_block -> AXIOMATIZATION vars WHERE axiomatization
Rule 148   axiomatization -> axiomatization_header spec_prems for_fixes
Rule 149   axiomatization_header -> thmdecl ID
Rule 150   axiomatization_header -> thmdecl QUOTED_STRING
Rule 151   axiomatization_header -> thmdecl ID AND axiomatization_header
Rule 152   axiomatization_header -> thmdecl QUOTED_STRING AND axiomatization_header
Rule 153   locale_expr -> instance_list
Rule 154   locale_expr -> instance_list for_fixes
Rule 155   instance_list -> instance
Rule 156   instance_list -> instance PLUS instance_list
Rule 157   instance -> ID
Rule 158   instance -> ID pos_insts
Rule 159   instance -> ID name_insts
Rule 160   instance -> qualifier COLON ID pos_insts
Rule 161   instance -> qualifier COLON ID name_insts
Rule 162   qualifier -> ID
Rule 163   qualifier -> QUOTED_STRING
Rule 164   qualifier -> ID QUESTION_MARK
Rule 165   qualifier -> QUOTED_STRING QUESTION_MARK
Rule 166   pos_insts -> UNDERSCORE
Rule 167   pos_insts -> DOT
Rule 168   pos_insts -> ID
Rule 169   pos_insts -> QUOTED_STRING
Rule 170   pos_insts -> GREEK
Rule 171   pos_insts -> UNDERSCORE pos_insts
Rule 172   pos_insts -> DOT pos_insts
Rule 173   pos_insts -> ID pos_insts
Rule 174   pos_insts -> QUOTED_STRING pos_insts
Rule 175   pos_insts -> GREEK pos_insts
Rule 176   name_insts -> WHERE name_insts_list
Rule 177   name_insts_list -> ID EQUALS ID
Rule 178   name_insts_list -> ID EQUALS QUOTED_STRING
Rule 179   name_insts_list -> ID EQUALS ID name_insts_list
Rule 180   name_insts_list -> ID EQUALS QUOTED_STRING name_insts_list
Rule 181   locale_block -> LOCALE ID
Rule 182   locale_block -> LOCALE ID BEGIN content END
Rule 183   locale_block -> LOCALE ID comment_block BEGIN content END
Rule 184   locale_block -> LOCALE ID EQ locale
Rule 185   locale_block -> LOCALE ID EQ locale BEGIN content END
Rule 186   locale -> context_elem_list
Rule 187   locale -> opening
Rule 188   locale -> opening PLUS context_elem_list
Rule 189   locale -> locale_expr
Rule 190   locale -> locale opening
Rule 191   locale -> locale opening PLUS context_elem_list
Rule 192   locale -> locale_expr opening PLUS context_elem_list
Rule 193   context_elem_list -> context_elem
Rule 194   context_elem_list -> context_elem context_elem_list
Rule 195   context_elem -> FIXES vars
Rule 196   context_elem -> CONSTRAINS name_type_list
Rule 197   context_elem -> ASSUMES prop_list
Rule 198   context_elem -> DEFINES defines_list
Rule 199   context_elem -> NOTES notes_list
Rule 200   name_type_list -> ID COLON COLON ID
Rule 201   name_type_list -> ID COLON COLON ID AND name_type_list
Rule 202   defines_list -> defines_list_element
Rule 203   defines_list -> defines_list_element AND defines_list
Rule 204   defines_list_element -> ID
Rule 205   defines_list_element -> QUOTED_STRING
Rule 206   defines_list_element -> thmdecl ID
Rule 207   defines_list_element -> thmdecl QUOTED_STRING
Rule 208   defines_list_element -> ID prop_pat
Rule 209   defines_list_element -> QUOTED_STRING prop_pat
Rule 210   defines_list_element -> thmdecl ID prop_pat
Rule 211   defines_list_element -> thmdecl QUOTED_STRING prop_pat
Rule 212   notes_list -> notes_list_element
Rule 213   notes_list -> notes_list_element AND notes_list
Rule 214   notes_list_element -> thmdef thms
Rule 215   notes_list_element -> thms
Rule 216   interpretation_block -> INTERPRETATION locale_expr
Rule 217   typedecl -> TYPEDECL typespec
Rule 218   typedecl -> TYPEDECL typespec mixfix
Rule 219   type_synonym -> TYPE_SYNONYM typespec EQUALS ID
Rule 220   type_synonym -> TYPE_SYNONYM typespec EQUALS ID mixfix
Rule 221   mixfix -> LEFT_PAREN template RIGHT_PAREN
Rule 222   mixfix -> LEFT_PAREN template prios RIGHT_PAREN
Rule 223   mixfix -> LEFT_PAREN template NAT RIGHT_PAREN
Rule 224   mixfix -> LEFT_PAREN template prios NAT RIGHT_PAREN
Rule 225   mixfix -> LEFT_PAREN INFIX template NAT RIGHT_PAREN
Rule 226   mixfix -> LEFT_PAREN INFIXL template NAT RIGHT_PAREN
Rule 227   mixfix -> LEFT_PAREN INFIXR template NAT RIGHT_PAREN
Rule 228   mixfix -> BINDER template NAT RIGHT_PAREN
Rule 229   mixfix -> BINDER template prio NAT RIGHT_PAREN
Rule 230   mixfix -> STRUCTURE
Rule 231   template -> QUOTED_STRING
Rule 232   template -> CARTOUCHE
Rule 233   prios -> LEFT_BRACKET nat_list RIGHT_BRACKET
Rule 234   prio -> LEFT_BRACKET NAT RIGHT_BRACKET
Rule 235   nat_list -> NAT
Rule 236   nat_list -> NAT COMMA nat_list
Rule 237   primrec_block -> PRIMREC specification
Rule 238   fun_block -> FUN specification
Rule 239   fun_block -> FUNCTION specification
Rule 240   fun_block -> FUN opts specification
Rule 241   fun_block -> FUNCTION opts specification
Rule 242   opts -> LEFT_PAREN opt_list RIGHT_PAREN
Rule 243   opt_list -> sequential
Rule 244   opt_list -> domintros
Rule 245   opt_list -> sequential COMMA opt_list
Rule 246   opt_list -> domintros COMMA opt_list
Rule 247   sequential -> ID
Rule 248   sequential -> QUOTED_STRING
Rule 249   domintros -> ID
Rule 250   domintros -> QUOTED_STRING
Rule 251   section_block -> SECTION CARTOUCHE
Rule 252   text_block -> TEXT CARTOUCHE
Rule 253   comment_block -> COMMENT_CARTOUCHE CARTOUCHE
Rule 254   symbol -> BANG
Rule 255   symbol -> STAR
Rule 256   symbol -> BACKSLASH
Rule 257   symbol -> LT
Rule 258   symbol -> HAT
Rule 259   symbol -> GT
Rule 260   symbol -> PLUS
Rule 261   empty -> <empty>

Terminals, with rules where they appear

ALTSTRING            : 
AND                  : 50 85 99 141 151 152 201 203 213
APPLY                : 58 59 60 61 62
ASSMS                : 69 70 71 72
ASSUME               : 
ASSUMES              : 49 197
AXIOMATIZATION       : 144 145 146 147
BACKSLASH            : 256
BANG                 : 254
BEGIN                : 4 182 183 185
BINDER               : 228 229
BY                   : 63 64 65 66
CARTOUCHE            : 232 251 252 253
COLON                : 37 45 53 80 80 87 87 88 88 89 89 90 90 91 91 92 92 94 94 95 95 96 96 97 97 107 160 161 200 200 201 201
COMMA                : 26 28 71 82 120 236 245 246
COMMENT_CARTOUCHE    : 253
CONSTRAINS           : 196
DASH                 : 60 72
DEFINES              : 198
DONE                 : 67
DOT                  : 42 43 167 172
END                  : 4 182 183 185
EQ                   : 108 184 185
EQUALS               : 22 177 178 179 180 219 220
FIXES                : 195
FOR                  : 128
FUN                  : 238 240
FUNCTION             : 239 241
GLOBAL_INTERPRETATION : 
GREEK                : 88 90 95 97 170 175
GT                   : 259
HAT                  : 258
HAVE                 : 
ID                   : 4 7 9 23 33 34 35 36 37 40 41 42 42 43 43 45 77 78 79 80 80 87 87 88 89 91 93 94 94 95 96 98 99 100 101 105 109 110 114 115 121 125 131 132 135 139 140 141 149 151 157 158 159 160 161 162 164 168 173 177 177 178 179 179 180 181 182 183 184 185 200 200 201 201 204 206 208 210 219 220 247 249
IF                   : 138
IMPORTS              : 5
INFIX                : 225
INFIXL               : 226
INFIXR               : 227
INTERPRET            : 
INTERPRETATION       : 216
IS                   : 105 106
LATIN                : 
LEFT_BRACKET         : 117 127 233 234
LEFT_PAREN           : 29 30 35 36 41 43 59 62 64 66 70 71 72 83 102 126 221 222 223 224 225 226 227 242
LEMMA                : 45
LETTER               : 
LOCALE               : 181 182 183 184 185
LONG_IDENT           : 
LT                   : 257
METHOD               : 22
NAT                  : 41 43 53 70 71 71 72 72 223 224 225 226 227 228 229 234 235 236
NOTES                : 199
OPENING              : 143
OUTER_COMMENT        : 
PIPE                 : 130
PLUS                 : 31 156 188 191 192 260
PRIMREC              : 237
PROOF                : 46
QUESTION_MARK        : 32 164 165
QUOTED_STRING        : 8 44 52 53 54 76 89 90 92 96 97 106 133 134 136 150 152 163 165 169 174 178 180 205 207 209 211 231 248 250
RIGHT_BRACKET        : 117 127 233 234
RIGHT_PAREN          : 29 30 35 36 41 43 59 62 64 66 70 71 72 83 102 126 221 222 223 224 225 226 227 228 229 242
SECTION              : 251
SEMICOLON            : 27
SHORT_IDENT          : 
SHOW                 : 
SHOWS                : 54
SORRY                : 68
STAR                 : 255
STRING               : 
STRUCTURE            : 230
SUBGOAL              : 76
SUBLOCALE            : 
SUBSCRIPT            : 
SYM_FLOAT            : 
SYM_IDENT            : 
TERM_VAR             : 
TEXT                 : 252
THEN                 : 
THEORY               : 4
TYPEDECL             : 217 218
TYPE_IDENT           : 
TYPE_SYNONYM         : 219 220
TYPE_VAR             : 
UNDERSCORE           : 166 171
USING                : 60 61 62 65 66
VERBATIM             : 
WHERE                : 142 146 147 176
error                : 

Nonterminals, with rules where they appear

apply_block          : 46 47 55 56 76
arg                  : 123 124
args                 : 121 124 126 127
assumes_block        : 45
assumption           : 50 51
assumptions_list     : 49 50
attribute            : 119 120
attributes           : 109 111 115 116
attributes_list      : 117 120
axiomatization       : 146 147
axiomatization_block : 12
axiomatization_header : 148 151 152
comment_block        : 183
content              : 4 10 182 183 185
context_elem         : 193 194
context_elem_list    : 186 188 191 192 194
defines_list         : 198 203
defines_list_element : 202 203
domintros            : 244 246
empty                : 6 11 39 48 57 73 118 122 137
for_fixes            : 132 134 135 136 148 154
fun_block            : 13
import_list          : 5 7 8
imports_opt          : 4
instance             : 155 156
instance_list        : 153 154 156
instruction          : 22 26 27 28 29 30 58 59 61 62 63 64 65 66
instruction_modifier : 25 26 30 36
interpretation_block : 14
lemma_block          : 15
lemma_proof_block    : 45
locale               : 184 185 190 191
locale_block         : 16
locale_expr          : 189 192 216
method_arg           : 37 38
method_args          : 34 35 36 37 38
method_block         : 17
method_name          : 22
mixfix               : 93 94 95 96 97 218 220
multi_specs          : 130 142
name_insts           : 159 161
name_insts_list      : 176 179 180
name_type_list       : 196 201
names                : 86 91 92 99 101
names_list           : 143
nat_list             : 233 236
notes_list           : 199 213
notes_list_element   : 212 213
opening              : 187 188 190 191 192
opt_list             : 242 245 246
opts                 : 240 241
pos_insts            : 158 160 171 172 173 174 175
primrec_block        : 
prio                 : 229
prios                : 222 224
prop_list            : 138 140 141 197
prop_pat             : 208 209 210 211
prop_pat_term        : 103 104
prop_pat_terms       : 102 104
qualifier            : 160 161
section_block        : 2 18
sequential           : 243 245
shows_clause         : 45
single_apply         : 55
single_instruction   : 24 25 26 27 28
spec_prems           : 131 132 133 134 135 136 148
specification        : 237 238 239 240 241
statement            : 10
structured_spec      : 129 130
subgoal              : 56 74 75
subgoals             : 74
symbol               : 
template             : 221 222 223 224 225 226 227 228 229
text_block           : 3 19
theory               : 1
theory_file          : 2 3 0
thm                  : 112 113
thmbind              : 107 108
thmdecl              : 135 136 149 150 151 152 206 207 210 211
thmdef               : 214
thms                 : 113 214 215
type_synonym         : 20
typearg              : 81 82
typeargs             : 78 82 83
typedecl             : 21
typespec             : 217 218 219 220
using_block          : 60 61 62 65 66 69 70 71 72
var                  : 84 85
vars                 : 85 128 142 145 147 195

Parsing method: LALR

state 0

    (0) S' -> . theory_file
    (1) theory_file -> . theory
    (2) theory_file -> . section_block theory_file
    (3) theory_file -> . text_block theory_file
    (4) theory -> . THEORY ID imports_opt BEGIN content END
    (251) section_block -> . SECTION CARTOUCHE
    (252) text_block -> . TEXT CARTOUCHE

    THEORY          shift and go to state 5
    SECTION         shift and go to state 6
    TEXT            shift and go to state 7

    theory_file                    shift and go to state 1
    theory                         shift and go to state 2
    section_block                  shift and go to state 3
    text_block                     shift and go to state 4

state 1

    (0) S' -> theory_file .



state 2

    (1) theory_file -> theory .

    $end            reduce using rule 1 (theory_file -> theory .)


state 3

    (2) theory_file -> section_block . theory_file
    (1) theory_file -> . theory
    (2) theory_file -> . section_block theory_file
    (3) theory_file -> . text_block theory_file
    (4) theory -> . THEORY ID imports_opt BEGIN content END
    (251) section_block -> . SECTION CARTOUCHE
    (252) text_block -> . TEXT CARTOUCHE

    THEORY          shift and go to state 5
    SECTION         shift and go to state 6
    TEXT            shift and go to state 7

    section_block                  shift and go to state 3
    theory_file                    shift and go to state 8
    theory                         shift and go to state 2
    text_block                     shift and go to state 4

state 4

    (3) theory_file -> text_block . theory_file
    (1) theory_file -> . theory
    (2) theory_file -> . section_block theory_file
    (3) theory_file -> . text_block theory_file
    (4) theory -> . THEORY ID imports_opt BEGIN content END
    (251) section_block -> . SECTION CARTOUCHE
    (252) text_block -> . TEXT CARTOUCHE

    THEORY          shift and go to state 5
    SECTION         shift and go to state 6
    TEXT            shift and go to state 7

    text_block                     shift and go to state 4
    theory_file                    shift and go to state 9
    theory                         shift and go to state 2
    section_block                  shift and go to state 3

state 5

    (4) theory -> THEORY . ID imports_opt BEGIN content END

    ID              shift and go to state 10


state 6

    (251) section_block -> SECTION . CARTOUCHE

    CARTOUCHE       shift and go to state 11


state 7

    (252) text_block -> TEXT . CARTOUCHE

    CARTOUCHE       shift and go to state 12


state 8

    (2) theory_file -> section_block theory_file .

    $end            reduce using rule 2 (theory_file -> section_block theory_file .)


state 9

    (3) theory_file -> text_block theory_file .

    $end            reduce using rule 3 (theory_file -> text_block theory_file .)


state 10

    (4) theory -> THEORY ID . imports_opt BEGIN content END
    (5) imports_opt -> . IMPORTS import_list
    (6) imports_opt -> . empty
    (261) empty -> .

    IMPORTS         shift and go to state 14
    BEGIN           reduce using rule 261 (empty -> .)

    imports_opt                    shift and go to state 13
    empty                          shift and go to state 15

state 11

    (251) section_block -> SECTION CARTOUCHE .

    THEORY          reduce using rule 251 (section_block -> SECTION CARTOUCHE .)
    SECTION         reduce using rule 251 (section_block -> SECTION CARTOUCHE .)
    TEXT            reduce using rule 251 (section_block -> SECTION CARTOUCHE .)
    AXIOMATIZATION  reduce using rule 251 (section_block -> SECTION CARTOUCHE .)
    FUN             reduce using rule 251 (section_block -> SECTION CARTOUCHE .)
    FUNCTION        reduce using rule 251 (section_block -> SECTION CARTOUCHE .)
    INTERPRETATION  reduce using rule 251 (section_block -> SECTION CARTOUCHE .)
    LEMMA           reduce using rule 251 (section_block -> SECTION CARTOUCHE .)
    LOCALE          reduce using rule 251 (section_block -> SECTION CARTOUCHE .)
    METHOD          reduce using rule 251 (section_block -> SECTION CARTOUCHE .)
    TYPE_SYNONYM    reduce using rule 251 (section_block -> SECTION CARTOUCHE .)
    TYPEDECL        reduce using rule 251 (section_block -> SECTION CARTOUCHE .)
    END             reduce using rule 251 (section_block -> SECTION CARTOUCHE .)


state 12

    (252) text_block -> TEXT CARTOUCHE .

    THEORY          reduce using rule 252 (text_block -> TEXT CARTOUCHE .)
    SECTION         reduce using rule 252 (text_block -> TEXT CARTOUCHE .)
    TEXT            reduce using rule 252 (text_block -> TEXT CARTOUCHE .)
    AXIOMATIZATION  reduce using rule 252 (text_block -> TEXT CARTOUCHE .)
    FUN             reduce using rule 252 (text_block -> TEXT CARTOUCHE .)
    FUNCTION        reduce using rule 252 (text_block -> TEXT CARTOUCHE .)
    INTERPRETATION  reduce using rule 252 (text_block -> TEXT CARTOUCHE .)
    LEMMA           reduce using rule 252 (text_block -> TEXT CARTOUCHE .)
    LOCALE          reduce using rule 252 (text_block -> TEXT CARTOUCHE .)
    METHOD          reduce using rule 252 (text_block -> TEXT CARTOUCHE .)
    TYPE_SYNONYM    reduce using rule 252 (text_block -> TEXT CARTOUCHE .)
    TYPEDECL        reduce using rule 252 (text_block -> TEXT CARTOUCHE .)
    END             reduce using rule 252 (text_block -> TEXT CARTOUCHE .)


state 13

    (4) theory -> THEORY ID imports_opt . BEGIN content END

    BEGIN           shift and go to state 16


state 14

    (5) imports_opt -> IMPORTS . import_list
    (7) import_list -> . ID import_list
    (8) import_list -> . QUOTED_STRING import_list
    (9) import_list -> . ID

    ID              shift and go to state 18
    QUOTED_STRING   shift and go to state 19

    import_list                    shift and go to state 17

state 15

    (6) imports_opt -> empty .

    BEGIN           reduce using rule 6 (imports_opt -> empty .)


state 16

    (4) theory -> THEORY ID imports_opt BEGIN . content END
    (10) content -> . statement content
    (11) content -> . empty
    (12) statement -> . axiomatization_block
    (13) statement -> . fun_block
    (14) statement -> . interpretation_block
    (15) statement -> . lemma_block
    (16) statement -> . locale_block
    (17) statement -> . method_block
    (18) statement -> . section_block
    (19) statement -> . text_block
    (20) statement -> . type_synonym
    (21) statement -> . typedecl
    (261) empty -> .
    (144) axiomatization_block -> . AXIOMATIZATION
    (145) axiomatization_block -> . AXIOMATIZATION vars
    (146) axiomatization_block -> . AXIOMATIZATION WHERE axiomatization
    (147) axiomatization_block -> . AXIOMATIZATION vars WHERE axiomatization
    (238) fun_block -> . FUN specification
    (239) fun_block -> . FUNCTION specification
    (240) fun_block -> . FUN opts specification
    (241) fun_block -> . FUNCTION opts specification
    (216) interpretation_block -> . INTERPRETATION locale_expr
    (45) lemma_block -> . LEMMA ID COLON assumes_block shows_clause lemma_proof_block
    (181) locale_block -> . LOCALE ID
    (182) locale_block -> . LOCALE ID BEGIN content END
    (183) locale_block -> . LOCALE ID comment_block BEGIN content END
    (184) locale_block -> . LOCALE ID EQ locale
    (185) locale_block -> . LOCALE ID EQ locale BEGIN content END
    (22) method_block -> . METHOD method_name EQUALS instruction
    (251) section_block -> . SECTION CARTOUCHE
    (252) text_block -> . TEXT CARTOUCHE
    (219) type_synonym -> . TYPE_SYNONYM typespec EQUALS ID
    (220) type_synonym -> . TYPE_SYNONYM typespec EQUALS ID mixfix
    (217) typedecl -> . TYPEDECL typespec
    (218) typedecl -> . TYPEDECL typespec mixfix

    END             reduce using rule 261 (empty -> .)
    AXIOMATIZATION  shift and go to state 33
    FUN             shift and go to state 34
    FUNCTION        shift and go to state 35
    INTERPRETATION  shift and go to state 36
    LEMMA           shift and go to state 37
    LOCALE          shift and go to state 38
    METHOD          shift and go to state 39
    SECTION         shift and go to state 6
    TEXT            shift and go to state 7
    TYPE_SYNONYM    shift and go to state 40
    TYPEDECL        shift and go to state 41

    content                        shift and go to state 20
    statement                      shift and go to state 21
    empty                          shift and go to state 22
    axiomatization_block           shift and go to state 23
    fun_block                      shift and go to state 24
    interpretation_block           shift and go to state 25
    lemma_block                    shift and go to state 26
    locale_block                   shift and go to state 27
    method_block                   shift and go to state 28
    section_block                  shift and go to state 29
    text_block                     shift and go to state 30
    type_synonym                   shift and go to state 31
    typedecl                       shift and go to state 32

state 17

    (5) imports_opt -> IMPORTS import_list .

    BEGIN           reduce using rule 5 (imports_opt -> IMPORTS import_list .)


state 18

    (7) import_list -> ID . import_list
    (9) import_list -> ID .
    (7) import_list -> . ID import_list
    (8) import_list -> . QUOTED_STRING import_list
    (9) import_list -> . ID

    BEGIN           reduce using rule 9 (import_list -> ID .)
    ID              shift and go to state 18
    QUOTED_STRING   shift and go to state 19

    import_list                    shift and go to state 42

state 19

    (8) import_list -> QUOTED_STRING . import_list
    (7) import_list -> . ID import_list
    (8) import_list -> . QUOTED_STRING import_list
    (9) import_list -> . ID

    ID              shift and go to state 18
    QUOTED_STRING   shift and go to state 19

    import_list                    shift and go to state 43

state 20

    (4) theory -> THEORY ID imports_opt BEGIN content . END

    END             shift and go to state 44


state 21

    (10) content -> statement . content
    (10) content -> . statement content
    (11) content -> . empty
    (12) statement -> . axiomatization_block
    (13) statement -> . fun_block
    (14) statement -> . interpretation_block
    (15) statement -> . lemma_block
    (16) statement -> . locale_block
    (17) statement -> . method_block
    (18) statement -> . section_block
    (19) statement -> . text_block
    (20) statement -> . type_synonym
    (21) statement -> . typedecl
    (261) empty -> .
    (144) axiomatization_block -> . AXIOMATIZATION
    (145) axiomatization_block -> . AXIOMATIZATION vars
    (146) axiomatization_block -> . AXIOMATIZATION WHERE axiomatization
    (147) axiomatization_block -> . AXIOMATIZATION vars WHERE axiomatization
    (238) fun_block -> . FUN specification
    (239) fun_block -> . FUNCTION specification
    (240) fun_block -> . FUN opts specification
    (241) fun_block -> . FUNCTION opts specification
    (216) interpretation_block -> . INTERPRETATION locale_expr
    (45) lemma_block -> . LEMMA ID COLON assumes_block shows_clause lemma_proof_block
    (181) locale_block -> . LOCALE ID
    (182) locale_block -> . LOCALE ID BEGIN content END
    (183) locale_block -> . LOCALE ID comment_block BEGIN content END
    (184) locale_block -> . LOCALE ID EQ locale
    (185) locale_block -> . LOCALE ID EQ locale BEGIN content END
    (22) method_block -> . METHOD method_name EQUALS instruction
    (251) section_block -> . SECTION CARTOUCHE
    (252) text_block -> . TEXT CARTOUCHE
    (219) type_synonym -> . TYPE_SYNONYM typespec EQUALS ID
    (220) type_synonym -> . TYPE_SYNONYM typespec EQUALS ID mixfix
    (217) typedecl -> . TYPEDECL typespec
    (218) typedecl -> . TYPEDECL typespec mixfix

    END             reduce using rule 261 (empty -> .)
    AXIOMATIZATION  shift and go to state 33
    FUN             shift and go to state 34
    FUNCTION        shift and go to state 35
    INTERPRETATION  shift and go to state 36
    LEMMA           shift and go to state 37
    LOCALE          shift and go to state 38
    METHOD          shift and go to state 39
    SECTION         shift and go to state 6
    TEXT            shift and go to state 7
    TYPE_SYNONYM    shift and go to state 40
    TYPEDECL        shift and go to state 41

    statement                      shift and go to state 21
    content                        shift and go to state 45
    empty                          shift and go to state 22
    axiomatization_block           shift and go to state 23
    fun_block                      shift and go to state 24
    interpretation_block           shift and go to state 25
    lemma_block                    shift and go to state 26
    locale_block                   shift and go to state 27
    method_block                   shift and go to state 28
    section_block                  shift and go to state 29
    text_block                     shift and go to state 30
    type_synonym                   shift and go to state 31
    typedecl                       shift and go to state 32

state 22

    (11) content -> empty .

    END             reduce using rule 11 (content -> empty .)


state 23

    (12) statement -> axiomatization_block .

    AXIOMATIZATION  reduce using rule 12 (statement -> axiomatization_block .)
    FUN             reduce using rule 12 (statement -> axiomatization_block .)
    FUNCTION        reduce using rule 12 (statement -> axiomatization_block .)
    INTERPRETATION  reduce using rule 12 (statement -> axiomatization_block .)
    LEMMA           reduce using rule 12 (statement -> axiomatization_block .)
    LOCALE          reduce using rule 12 (statement -> axiomatization_block .)
    METHOD          reduce using rule 12 (statement -> axiomatization_block .)
    SECTION         reduce using rule 12 (statement -> axiomatization_block .)
    TEXT            reduce using rule 12 (statement -> axiomatization_block .)
    TYPE_SYNONYM    reduce using rule 12 (statement -> axiomatization_block .)
    TYPEDECL        reduce using rule 12 (statement -> axiomatization_block .)
    END             reduce using rule 12 (statement -> axiomatization_block .)


state 24

    (13) statement -> fun_block .

    AXIOMATIZATION  reduce using rule 13 (statement -> fun_block .)
    FUN             reduce using rule 13 (statement -> fun_block .)
    FUNCTION        reduce using rule 13 (statement -> fun_block .)
    INTERPRETATION  reduce using rule 13 (statement -> fun_block .)
    LEMMA           reduce using rule 13 (statement -> fun_block .)
    LOCALE          reduce using rule 13 (statement -> fun_block .)
    METHOD          reduce using rule 13 (statement -> fun_block .)
    SECTION         reduce using rule 13 (statement -> fun_block .)
    TEXT            reduce using rule 13 (statement -> fun_block .)
    TYPE_SYNONYM    reduce using rule 13 (statement -> fun_block .)
    TYPEDECL        reduce using rule 13 (statement -> fun_block .)
    END             reduce using rule 13 (statement -> fun_block .)


state 25

    (14) statement -> interpretation_block .

    AXIOMATIZATION  reduce using rule 14 (statement -> interpretation_block .)
    FUN             reduce using rule 14 (statement -> interpretation_block .)
    FUNCTION        reduce using rule 14 (statement -> interpretation_block .)
    INTERPRETATION  reduce using rule 14 (statement -> interpretation_block .)
    LEMMA           reduce using rule 14 (statement -> interpretation_block .)
    LOCALE          reduce using rule 14 (statement -> interpretation_block .)
    METHOD          reduce using rule 14 (statement -> interpretation_block .)
    SECTION         reduce using rule 14 (statement -> interpretation_block .)
    TEXT            reduce using rule 14 (statement -> interpretation_block .)
    TYPE_SYNONYM    reduce using rule 14 (statement -> interpretation_block .)
    TYPEDECL        reduce using rule 14 (statement -> interpretation_block .)
    END             reduce using rule 14 (statement -> interpretation_block .)


state 26

    (15) statement -> lemma_block .

    AXIOMATIZATION  reduce using rule 15 (statement -> lemma_block .)
    FUN             reduce using rule 15 (statement -> lemma_block .)
    FUNCTION        reduce using rule 15 (statement -> lemma_block .)
    INTERPRETATION  reduce using rule 15 (statement -> lemma_block .)
    LEMMA           reduce using rule 15 (statement -> lemma_block .)
    LOCALE          reduce using rule 15 (statement -> lemma_block .)
    METHOD          reduce using rule 15 (statement -> lemma_block .)
    SECTION         reduce using rule 15 (statement -> lemma_block .)
    TEXT            reduce using rule 15 (statement -> lemma_block .)
    TYPE_SYNONYM    reduce using rule 15 (statement -> lemma_block .)
    TYPEDECL        reduce using rule 15 (statement -> lemma_block .)
    END             reduce using rule 15 (statement -> lemma_block .)


state 27

    (16) statement -> locale_block .

    AXIOMATIZATION  reduce using rule 16 (statement -> locale_block .)
    FUN             reduce using rule 16 (statement -> locale_block .)
    FUNCTION        reduce using rule 16 (statement -> locale_block .)
    INTERPRETATION  reduce using rule 16 (statement -> locale_block .)
    LEMMA           reduce using rule 16 (statement -> locale_block .)
    LOCALE          reduce using rule 16 (statement -> locale_block .)
    METHOD          reduce using rule 16 (statement -> locale_block .)
    SECTION         reduce using rule 16 (statement -> locale_block .)
    TEXT            reduce using rule 16 (statement -> locale_block .)
    TYPE_SYNONYM    reduce using rule 16 (statement -> locale_block .)
    TYPEDECL        reduce using rule 16 (statement -> locale_block .)
    END             reduce using rule 16 (statement -> locale_block .)


state 28

    (17) statement -> method_block .

    AXIOMATIZATION  reduce using rule 17 (statement -> method_block .)
    FUN             reduce using rule 17 (statement -> method_block .)
    FUNCTION        reduce using rule 17 (statement -> method_block .)
    INTERPRETATION  reduce using rule 17 (statement -> method_block .)
    LEMMA           reduce using rule 17 (statement -> method_block .)
    LOCALE          reduce using rule 17 (statement -> method_block .)
    METHOD          reduce using rule 17 (statement -> method_block .)
    SECTION         reduce using rule 17 (statement -> method_block .)
    TEXT            reduce using rule 17 (statement -> method_block .)
    TYPE_SYNONYM    reduce using rule 17 (statement -> method_block .)
    TYPEDECL        reduce using rule 17 (statement -> method_block .)
    END             reduce using rule 17 (statement -> method_block .)


state 29

    (18) statement -> section_block .

    AXIOMATIZATION  reduce using rule 18 (statement -> section_block .)
    FUN             reduce using rule 18 (statement -> section_block .)
    FUNCTION        reduce using rule 18 (statement -> section_block .)
    INTERPRETATION  reduce using rule 18 (statement -> section_block .)
    LEMMA           reduce using rule 18 (statement -> section_block .)
    LOCALE          reduce using rule 18 (statement -> section_block .)
    METHOD          reduce using rule 18 (statement -> section_block .)
    SECTION         reduce using rule 18 (statement -> section_block .)
    TEXT            reduce using rule 18 (statement -> section_block .)
    TYPE_SYNONYM    reduce using rule 18 (statement -> section_block .)
    TYPEDECL        reduce using rule 18 (statement -> section_block .)
    END             reduce using rule 18 (statement -> section_block .)


state 30

    (19) statement -> text_block .

    AXIOMATIZATION  reduce using rule 19 (statement -> text_block .)
    FUN             reduce using rule 19 (statement -> text_block .)
    FUNCTION        reduce using rule 19 (statement -> text_block .)
    INTERPRETATION  reduce using rule 19 (statement -> text_block .)
    LEMMA           reduce using rule 19 (statement -> text_block .)
    LOCALE          reduce using rule 19 (statement -> text_block .)
    METHOD          reduce using rule 19 (statement -> text_block .)
    SECTION         reduce using rule 19 (statement -> text_block .)
    TEXT            reduce using rule 19 (statement -> text_block .)
    TYPE_SYNONYM    reduce using rule 19 (statement -> text_block .)
    TYPEDECL        reduce using rule 19 (statement -> text_block .)
    END             reduce using rule 19 (statement -> text_block .)


state 31

    (20) statement -> type_synonym .

    AXIOMATIZATION  reduce using rule 20 (statement -> type_synonym .)
    FUN             reduce using rule 20 (statement -> type_synonym .)
    FUNCTION        reduce using rule 20 (statement -> type_synonym .)
    INTERPRETATION  reduce using rule 20 (statement -> type_synonym .)
    LEMMA           reduce using rule 20 (statement -> type_synonym .)
    LOCALE          reduce using rule 20 (statement -> type_synonym .)
    METHOD          reduce using rule 20 (statement -> type_synonym .)
    SECTION         reduce using rule 20 (statement -> type_synonym .)
    TEXT            reduce using rule 20 (statement -> type_synonym .)
    TYPE_SYNONYM    reduce using rule 20 (statement -> type_synonym .)
    TYPEDECL        reduce using rule 20 (statement -> type_synonym .)
    END             reduce using rule 20 (statement -> type_synonym .)


state 32

    (21) statement -> typedecl .

    AXIOMATIZATION  reduce using rule 21 (statement -> typedecl .)
    FUN             reduce using rule 21 (statement -> typedecl .)
    FUNCTION        reduce using rule 21 (statement -> typedecl .)
    INTERPRETATION  reduce using rule 21 (statement -> typedecl .)
    LEMMA           reduce using rule 21 (statement -> typedecl .)
    LOCALE          reduce using rule 21 (statement -> typedecl .)
    METHOD          reduce using rule 21 (statement -> typedecl .)
    SECTION         reduce using rule 21 (statement -> typedecl .)
    TEXT            reduce using rule 21 (statement -> typedecl .)
    TYPE_SYNONYM    reduce using rule 21 (statement -> typedecl .)
    TYPEDECL        reduce using rule 21 (statement -> typedecl .)
    END             reduce using rule 21 (statement -> typedecl .)


state 33

    (144) axiomatization_block -> AXIOMATIZATION .
    (145) axiomatization_block -> AXIOMATIZATION . vars
    (146) axiomatization_block -> AXIOMATIZATION . WHERE axiomatization
    (147) axiomatization_block -> AXIOMATIZATION . vars WHERE axiomatization
    (84) vars -> . var
    (85) vars -> . var AND vars
    (86) var -> . names
    (87) var -> . ID COLON COLON ID
    (88) var -> . GREEK COLON COLON ID
    (89) var -> . ID COLON COLON QUOTED_STRING
    (90) var -> . GREEK COLON COLON QUOTED_STRING
    (91) var -> . names COLON COLON ID
    (92) var -> . names COLON COLON QUOTED_STRING
    (93) var -> . ID mixfix
    (94) var -> . ID COLON COLON ID mixfix
    (95) var -> . GREEK COLON COLON ID mixfix
    (96) var -> . ID COLON COLON QUOTED_STRING mixfix
    (97) var -> . GREEK COLON COLON QUOTED_STRING mixfix
    (98) names -> . ID
    (99) names -> . ID AND names

    AXIOMATIZATION  reduce using rule 144 (axiomatization_block -> AXIOMATIZATION .)
    FUN             reduce using rule 144 (axiomatization_block -> AXIOMATIZATION .)
    FUNCTION        reduce using rule 144 (axiomatization_block -> AXIOMATIZATION .)
    INTERPRETATION  reduce using rule 144 (axiomatization_block -> AXIOMATIZATION .)
    LEMMA           reduce using rule 144 (axiomatization_block -> AXIOMATIZATION .)
    LOCALE          reduce using rule 144 (axiomatization_block -> AXIOMATIZATION .)
    METHOD          reduce using rule 144 (axiomatization_block -> AXIOMATIZATION .)
    SECTION         reduce using rule 144 (axiomatization_block -> AXIOMATIZATION .)
    TEXT            reduce using rule 144 (axiomatization_block -> AXIOMATIZATION .)
    TYPE_SYNONYM    reduce using rule 144 (axiomatization_block -> AXIOMATIZATION .)
    TYPEDECL        reduce using rule 144 (axiomatization_block -> AXIOMATIZATION .)
    END             reduce using rule 144 (axiomatization_block -> AXIOMATIZATION .)
    WHERE           shift and go to state 47
    ID              shift and go to state 50
    GREEK           shift and go to state 51

    vars                           shift and go to state 46
    var                            shift and go to state 48
    names                          shift and go to state 49

state 34

    (238) fun_block -> FUN . specification
    (240) fun_block -> FUN . opts specification
    (142) specification -> . vars WHERE multi_specs
    (242) opts -> . LEFT_PAREN opt_list RIGHT_PAREN
    (84) vars -> . var
    (85) vars -> . var AND vars
    (86) var -> . names
    (87) var -> . ID COLON COLON ID
    (88) var -> . GREEK COLON COLON ID
    (89) var -> . ID COLON COLON QUOTED_STRING
    (90) var -> . GREEK COLON COLON QUOTED_STRING
    (91) var -> . names COLON COLON ID
    (92) var -> . names COLON COLON QUOTED_STRING
    (93) var -> . ID mixfix
    (94) var -> . ID COLON COLON ID mixfix
    (95) var -> . GREEK COLON COLON ID mixfix
    (96) var -> . ID COLON COLON QUOTED_STRING mixfix
    (97) var -> . GREEK COLON COLON QUOTED_STRING mixfix
    (98) names -> . ID
    (99) names -> . ID AND names

    LEFT_PAREN      shift and go to state 55
    ID              shift and go to state 50
    GREEK           shift and go to state 51

    specification                  shift and go to state 52
    opts                           shift and go to state 53
    vars                           shift and go to state 54
    var                            shift and go to state 48
    names                          shift and go to state 49

state 35

    (239) fun_block -> FUNCTION . specification
    (241) fun_block -> FUNCTION . opts specification
    (142) specification -> . vars WHERE multi_specs
    (242) opts -> . LEFT_PAREN opt_list RIGHT_PAREN
    (84) vars -> . var
    (85) vars -> . var AND vars
    (86) var -> . names
    (87) var -> . ID COLON COLON ID
    (88) var -> . GREEK COLON COLON ID
    (89) var -> . ID COLON COLON QUOTED_STRING
    (90) var -> . GREEK COLON COLON QUOTED_STRING
    (91) var -> . names COLON COLON ID
    (92) var -> . names COLON COLON QUOTED_STRING
    (93) var -> . ID mixfix
    (94) var -> . ID COLON COLON ID mixfix
    (95) var -> . GREEK COLON COLON ID mixfix
    (96) var -> . ID COLON COLON QUOTED_STRING mixfix
    (97) var -> . GREEK COLON COLON QUOTED_STRING mixfix
    (98) names -> . ID
    (99) names -> . ID AND names

    LEFT_PAREN      shift and go to state 55
    ID              shift and go to state 50
    GREEK           shift and go to state 51

    specification                  shift and go to state 56
    opts                           shift and go to state 57
    vars                           shift and go to state 54
    var                            shift and go to state 48
    names                          shift and go to state 49

state 36

    (216) interpretation_block -> INTERPRETATION . locale_expr
    (153) locale_expr -> . instance_list
    (154) locale_expr -> . instance_list for_fixes
    (155) instance_list -> . instance
    (156) instance_list -> . instance PLUS instance_list
    (157) instance -> . ID
    (158) instance -> . ID pos_insts
    (159) instance -> . ID name_insts
    (160) instance -> . qualifier COLON ID pos_insts
    (161) instance -> . qualifier COLON ID name_insts
    (162) qualifier -> . ID
    (163) qualifier -> . QUOTED_STRING
    (164) qualifier -> . ID QUESTION_MARK
    (165) qualifier -> . QUOTED_STRING QUESTION_MARK

    ID              shift and go to state 61
    QUOTED_STRING   shift and go to state 63

    locale_expr                    shift and go to state 58
    instance_list                  shift and go to state 59
    instance                       shift and go to state 60
    qualifier                      shift and go to state 62

state 37

    (45) lemma_block -> LEMMA . ID COLON assumes_block shows_clause lemma_proof_block

    ID              shift and go to state 64


state 38

    (181) locale_block -> LOCALE . ID
    (182) locale_block -> LOCALE . ID BEGIN content END
    (183) locale_block -> LOCALE . ID comment_block BEGIN content END
    (184) locale_block -> LOCALE . ID EQ locale
    (185) locale_block -> LOCALE . ID EQ locale BEGIN content END

    ID              shift and go to state 65


state 39

    (22) method_block -> METHOD . method_name EQUALS instruction
    (23) method_name -> . ID

    ID              shift and go to state 67

    method_name                    shift and go to state 66

state 40

    (219) type_synonym -> TYPE_SYNONYM . typespec EQUALS ID
    (220) type_synonym -> TYPE_SYNONYM . typespec EQUALS ID mixfix
    (77) typespec -> . ID
    (78) typespec -> . typeargs ID
    (81) typeargs -> . typearg
    (82) typeargs -> . typearg COMMA typeargs
    (83) typeargs -> . LEFT_PAREN typeargs RIGHT_PAREN
    (79) typearg -> . ID
    (80) typearg -> . ID COLON COLON ID

    ID              shift and go to state 69
    LEFT_PAREN      shift and go to state 72

    typespec                       shift and go to state 68
    typeargs                       shift and go to state 70
    typearg                        shift and go to state 71

state 41

    (217) typedecl -> TYPEDECL . typespec
    (218) typedecl -> TYPEDECL . typespec mixfix
    (77) typespec -> . ID
    (78) typespec -> . typeargs ID
    (81) typeargs -> . typearg
    (82) typeargs -> . typearg COMMA typeargs
    (83) typeargs -> . LEFT_PAREN typeargs RIGHT_PAREN
    (79) typearg -> . ID
    (80) typearg -> . ID COLON COLON ID

    ID              shift and go to state 69
    LEFT_PAREN      shift and go to state 72

    typespec                       shift and go to state 73
    typeargs                       shift and go to state 70
    typearg                        shift and go to state 71

state 42

    (7) import_list -> ID import_list .

    BEGIN           reduce using rule 7 (import_list -> ID import_list .)


state 43

    (8) import_list -> QUOTED_STRING import_list .

    BEGIN           reduce using rule 8 (import_list -> QUOTED_STRING import_list .)


state 44

    (4) theory -> THEORY ID imports_opt BEGIN content END .

    $end            reduce using rule 4 (theory -> THEORY ID imports_opt BEGIN content END .)


state 45

    (10) content -> statement content .

    END             reduce using rule 10 (content -> statement content .)


state 46

    (145) axiomatization_block -> AXIOMATIZATION vars .
    (147) axiomatization_block -> AXIOMATIZATION vars . WHERE axiomatization

    AXIOMATIZATION  reduce using rule 145 (axiomatization_block -> AXIOMATIZATION vars .)
    FUN             reduce using rule 145 (axiomatization_block -> AXIOMATIZATION vars .)
    FUNCTION        reduce using rule 145 (axiomatization_block -> AXIOMATIZATION vars .)
    INTERPRETATION  reduce using rule 145 (axiomatization_block -> AXIOMATIZATION vars .)
    LEMMA           reduce using rule 145 (axiomatization_block -> AXIOMATIZATION vars .)
    LOCALE          reduce using rule 145 (axiomatization_block -> AXIOMATIZATION vars .)
    METHOD          reduce using rule 145 (axiomatization_block -> AXIOMATIZATION vars .)
    SECTION         reduce using rule 145 (axiomatization_block -> AXIOMATIZATION vars .)
    TEXT            reduce using rule 145 (axiomatization_block -> AXIOMATIZATION vars .)
    TYPE_SYNONYM    reduce using rule 145 (axiomatization_block -> AXIOMATIZATION vars .)
    TYPEDECL        reduce using rule 145 (axiomatization_block -> AXIOMATIZATION vars .)
    END             reduce using rule 145 (axiomatization_block -> AXIOMATIZATION vars .)
    WHERE           shift and go to state 74


state 47

    (146) axiomatization_block -> AXIOMATIZATION WHERE . axiomatization
    (148) axiomatization -> . axiomatization_header spec_prems for_fixes
    (149) axiomatization_header -> . thmdecl ID
    (150) axiomatization_header -> . thmdecl QUOTED_STRING
    (151) axiomatization_header -> . thmdecl ID AND axiomatization_header
    (152) axiomatization_header -> . thmdecl QUOTED_STRING AND axiomatization_header
    (107) thmdecl -> . thmbind COLON
    (114) thmbind -> . ID
    (115) thmbind -> . ID attributes
    (116) thmbind -> . attributes
    (117) attributes -> . LEFT_BRACKET attributes_list RIGHT_BRACKET

    ID              shift and go to state 78
    LEFT_BRACKET    shift and go to state 81

    axiomatization                 shift and go to state 75
    axiomatization_header          shift and go to state 76
    thmdecl                        shift and go to state 77
    thmbind                        shift and go to state 79
    attributes                     shift and go to state 80

state 48

    (84) vars -> var .
    (85) vars -> var . AND vars

    WHERE           reduce using rule 84 (vars -> var .)
    AXIOMATIZATION  reduce using rule 84 (vars -> var .)
    FUN             reduce using rule 84 (vars -> var .)
    FUNCTION        reduce using rule 84 (vars -> var .)
    INTERPRETATION  reduce using rule 84 (vars -> var .)
    LEMMA           reduce using rule 84 (vars -> var .)
    LOCALE          reduce using rule 84 (vars -> var .)
    METHOD          reduce using rule 84 (vars -> var .)
    SECTION         reduce using rule 84 (vars -> var .)
    TEXT            reduce using rule 84 (vars -> var .)
    TYPE_SYNONYM    reduce using rule 84 (vars -> var .)
    TYPEDECL        reduce using rule 84 (vars -> var .)
    END             reduce using rule 84 (vars -> var .)
    OPENING         reduce using rule 84 (vars -> var .)
    BEGIN           reduce using rule 84 (vars -> var .)
    PIPE            reduce using rule 84 (vars -> var .)
    FIXES           reduce using rule 84 (vars -> var .)
    CONSTRAINS      reduce using rule 84 (vars -> var .)
    ASSUMES         reduce using rule 84 (vars -> var .)
    DEFINES         reduce using rule 84 (vars -> var .)
    NOTES           reduce using rule 84 (vars -> var .)
    AND             shift and go to state 82


state 49

    (86) var -> names .
    (91) var -> names . COLON COLON ID
    (92) var -> names . COLON COLON QUOTED_STRING

    AND             reduce using rule 86 (var -> names .)
    WHERE           reduce using rule 86 (var -> names .)
    AXIOMATIZATION  reduce using rule 86 (var -> names .)
    FUN             reduce using rule 86 (var -> names .)
    FUNCTION        reduce using rule 86 (var -> names .)
    INTERPRETATION  reduce using rule 86 (var -> names .)
    LEMMA           reduce using rule 86 (var -> names .)
    LOCALE          reduce using rule 86 (var -> names .)
    METHOD          reduce using rule 86 (var -> names .)
    SECTION         reduce using rule 86 (var -> names .)
    TEXT            reduce using rule 86 (var -> names .)
    TYPE_SYNONYM    reduce using rule 86 (var -> names .)
    TYPEDECL        reduce using rule 86 (var -> names .)
    END             reduce using rule 86 (var -> names .)
    OPENING         reduce using rule 86 (var -> names .)
    BEGIN           reduce using rule 86 (var -> names .)
    PIPE            reduce using rule 86 (var -> names .)
    FIXES           reduce using rule 86 (var -> names .)
    CONSTRAINS      reduce using rule 86 (var -> names .)
    ASSUMES         reduce using rule 86 (var -> names .)
    DEFINES         reduce using rule 86 (var -> names .)
    NOTES           reduce using rule 86 (var -> names .)
    COLON           shift and go to state 83


state 50

    (87) var -> ID . COLON COLON ID
    (89) var -> ID . COLON COLON QUOTED_STRING
    (93) var -> ID . mixfix
    (94) var -> ID . COLON COLON ID mixfix
    (96) var -> ID . COLON COLON QUOTED_STRING mixfix
    (98) names -> ID .
    (99) names -> ID . AND names
    (221) mixfix -> . LEFT_PAREN template RIGHT_PAREN
    (222) mixfix -> . LEFT_PAREN template prios RIGHT_PAREN
    (223) mixfix -> . LEFT_PAREN template NAT RIGHT_PAREN
    (224) mixfix -> . LEFT_PAREN template prios NAT RIGHT_PAREN
    (225) mixfix -> . LEFT_PAREN INFIX template NAT RIGHT_PAREN
    (226) mixfix -> . LEFT_PAREN INFIXL template NAT RIGHT_PAREN
    (227) mixfix -> . LEFT_PAREN INFIXR template NAT RIGHT_PAREN
    (228) mixfix -> . BINDER template NAT RIGHT_PAREN
    (229) mixfix -> . BINDER template prio NAT RIGHT_PAREN
    (230) mixfix -> . STRUCTURE

  ! shift/reduce conflict for COLON resolved as shift
  ! shift/reduce conflict for AND resolved as shift
    COLON           shift and go to state 84
    WHERE           reduce using rule 98 (names -> ID .)
    AXIOMATIZATION  reduce using rule 98 (names -> ID .)
    FUN             reduce using rule 98 (names -> ID .)
    FUNCTION        reduce using rule 98 (names -> ID .)
    INTERPRETATION  reduce using rule 98 (names -> ID .)
    LEMMA           reduce using rule 98 (names -> ID .)
    LOCALE          reduce using rule 98 (names -> ID .)
    METHOD          reduce using rule 98 (names -> ID .)
    SECTION         reduce using rule 98 (names -> ID .)
    TEXT            reduce using rule 98 (names -> ID .)
    TYPE_SYNONYM    reduce using rule 98 (names -> ID .)
    TYPEDECL        reduce using rule 98 (names -> ID .)
    END             reduce using rule 98 (names -> ID .)
    OPENING         reduce using rule 98 (names -> ID .)
    BEGIN           reduce using rule 98 (names -> ID .)
    PIPE            reduce using rule 98 (names -> ID .)
    FIXES           reduce using rule 98 (names -> ID .)
    CONSTRAINS      reduce using rule 98 (names -> ID .)
    ASSUMES         reduce using rule 98 (names -> ID .)
    DEFINES         reduce using rule 98 (names -> ID .)
    NOTES           reduce using rule 98 (names -> ID .)
    AND             shift and go to state 86
    LEFT_PAREN      shift and go to state 87
    BINDER          shift and go to state 88
    STRUCTURE       shift and go to state 89

  ! COLON           [ reduce using rule 98 (names -> ID .) ]
  ! AND             [ reduce using rule 98 (names -> ID .) ]

    mixfix                         shift and go to state 85

state 51

    (88) var -> GREEK . COLON COLON ID
    (90) var -> GREEK . COLON COLON QUOTED_STRING
    (95) var -> GREEK . COLON COLON ID mixfix
    (97) var -> GREEK . COLON COLON QUOTED_STRING mixfix

    COLON           shift and go to state 90


state 52

    (238) fun_block -> FUN specification .

    AXIOMATIZATION  reduce using rule 238 (fun_block -> FUN specification .)
    FUN             reduce using rule 238 (fun_block -> FUN specification .)
    FUNCTION        reduce using rule 238 (fun_block -> FUN specification .)
    INTERPRETATION  reduce using rule 238 (fun_block -> FUN specification .)
    LEMMA           reduce using rule 238 (fun_block -> FUN specification .)
    LOCALE          reduce using rule 238 (fun_block -> FUN specification .)
    METHOD          reduce using rule 238 (fun_block -> FUN specification .)
    SECTION         reduce using rule 238 (fun_block -> FUN specification .)
    TEXT            reduce using rule 238 (fun_block -> FUN specification .)
    TYPE_SYNONYM    reduce using rule 238 (fun_block -> FUN specification .)
    TYPEDECL        reduce using rule 238 (fun_block -> FUN specification .)
    END             reduce using rule 238 (fun_block -> FUN specification .)


state 53

    (240) fun_block -> FUN opts . specification
    (142) specification -> . vars WHERE multi_specs
    (84) vars -> . var
    (85) vars -> . var AND vars
    (86) var -> . names
    (87) var -> . ID COLON COLON ID
    (88) var -> . GREEK COLON COLON ID
    (89) var -> . ID COLON COLON QUOTED_STRING
    (90) var -> . GREEK COLON COLON QUOTED_STRING
    (91) var -> . names COLON COLON ID
    (92) var -> . names COLON COLON QUOTED_STRING
    (93) var -> . ID mixfix
    (94) var -> . ID COLON COLON ID mixfix
    (95) var -> . GREEK COLON COLON ID mixfix
    (96) var -> . ID COLON COLON QUOTED_STRING mixfix
    (97) var -> . GREEK COLON COLON QUOTED_STRING mixfix
    (98) names -> . ID
    (99) names -> . ID AND names

    ID              shift and go to state 50
    GREEK           shift and go to state 51

    specification                  shift and go to state 91
    vars                           shift and go to state 54
    var                            shift and go to state 48
    names                          shift and go to state 49

state 54

    (142) specification -> vars . WHERE multi_specs

    WHERE           shift and go to state 92


state 55

    (242) opts -> LEFT_PAREN . opt_list RIGHT_PAREN
    (243) opt_list -> . sequential
    (244) opt_list -> . domintros
    (245) opt_list -> . sequential COMMA opt_list
    (246) opt_list -> . domintros COMMA opt_list
    (247) sequential -> . ID
    (248) sequential -> . QUOTED_STRING
    (249) domintros -> . ID
    (250) domintros -> . QUOTED_STRING

    ID              shift and go to state 96
    QUOTED_STRING   shift and go to state 97

    opt_list                       shift and go to state 93
    sequential                     shift and go to state 94
    domintros                      shift and go to state 95

state 56

    (239) fun_block -> FUNCTION specification .

    AXIOMATIZATION  reduce using rule 239 (fun_block -> FUNCTION specification .)
    FUN             reduce using rule 239 (fun_block -> FUNCTION specification .)
    FUNCTION        reduce using rule 239 (fun_block -> FUNCTION specification .)
    INTERPRETATION  reduce using rule 239 (fun_block -> FUNCTION specification .)
    LEMMA           reduce using rule 239 (fun_block -> FUNCTION specification .)
    LOCALE          reduce using rule 239 (fun_block -> FUNCTION specification .)
    METHOD          reduce using rule 239 (fun_block -> FUNCTION specification .)
    SECTION         reduce using rule 239 (fun_block -> FUNCTION specification .)
    TEXT            reduce using rule 239 (fun_block -> FUNCTION specification .)
    TYPE_SYNONYM    reduce using rule 239 (fun_block -> FUNCTION specification .)
    TYPEDECL        reduce using rule 239 (fun_block -> FUNCTION specification .)
    END             reduce using rule 239 (fun_block -> FUNCTION specification .)


state 57

    (241) fun_block -> FUNCTION opts . specification
    (142) specification -> . vars WHERE multi_specs
    (84) vars -> . var
    (85) vars -> . var AND vars
    (86) var -> . names
    (87) var -> . ID COLON COLON ID
    (88) var -> . GREEK COLON COLON ID
    (89) var -> . ID COLON COLON QUOTED_STRING
    (90) var -> . GREEK COLON COLON QUOTED_STRING
    (91) var -> . names COLON COLON ID
    (92) var -> . names COLON COLON QUOTED_STRING
    (93) var -> . ID mixfix
    (94) var -> . ID COLON COLON ID mixfix
    (95) var -> . GREEK COLON COLON ID mixfix
    (96) var -> . ID COLON COLON QUOTED_STRING mixfix
    (97) var -> . GREEK COLON COLON QUOTED_STRING mixfix
    (98) names -> . ID
    (99) names -> . ID AND names

    ID              shift and go to state 50
    GREEK           shift and go to state 51

    specification                  shift and go to state 98
    vars                           shift and go to state 54
    var                            shift and go to state 48
    names                          shift and go to state 49

state 58

    (216) interpretation_block -> INTERPRETATION locale_expr .

    AXIOMATIZATION  reduce using rule 216 (interpretation_block -> INTERPRETATION locale_expr .)
    FUN             reduce using rule 216 (interpretation_block -> INTERPRETATION locale_expr .)
    FUNCTION        reduce using rule 216 (interpretation_block -> INTERPRETATION locale_expr .)
    INTERPRETATION  reduce using rule 216 (interpretation_block -> INTERPRETATION locale_expr .)
    LEMMA           reduce using rule 216 (interpretation_block -> INTERPRETATION locale_expr .)
    LOCALE          reduce using rule 216 (interpretation_block -> INTERPRETATION locale_expr .)
    METHOD          reduce using rule 216 (interpretation_block -> INTERPRETATION locale_expr .)
    SECTION         reduce using rule 216 (interpretation_block -> INTERPRETATION locale_expr .)
    TEXT            reduce using rule 216 (interpretation_block -> INTERPRETATION locale_expr .)
    TYPE_SYNONYM    reduce using rule 216 (interpretation_block -> INTERPRETATION locale_expr .)
    TYPEDECL        reduce using rule 216 (interpretation_block -> INTERPRETATION locale_expr .)
    END             reduce using rule 216 (interpretation_block -> INTERPRETATION locale_expr .)


state 59

    (153) locale_expr -> instance_list .
    (154) locale_expr -> instance_list . for_fixes
    (128) for_fixes -> . FOR vars

    AXIOMATIZATION  reduce using rule 153 (locale_expr -> instance_list .)
    FUN             reduce using rule 153 (locale_expr -> instance_list .)
    FUNCTION        reduce using rule 153 (locale_expr -> instance_list .)
    INTERPRETATION  reduce using rule 153 (locale_expr -> instance_list .)
    LEMMA           reduce using rule 153 (locale_expr -> instance_list .)
    LOCALE          reduce using rule 153 (locale_expr -> instance_list .)
    METHOD          reduce using rule 153 (locale_expr -> instance_list .)
    SECTION         reduce using rule 153 (locale_expr -> instance_list .)
    TEXT            reduce using rule 153 (locale_expr -> instance_list .)
    TYPE_SYNONYM    reduce using rule 153 (locale_expr -> instance_list .)
    TYPEDECL        reduce using rule 153 (locale_expr -> instance_list .)
    END             reduce using rule 153 (locale_expr -> instance_list .)
    OPENING         reduce using rule 153 (locale_expr -> instance_list .)
    BEGIN           reduce using rule 153 (locale_expr -> instance_list .)
    FOR             shift and go to state 100

    for_fixes                      shift and go to state 99

state 60

    (155) instance_list -> instance .
    (156) instance_list -> instance . PLUS instance_list

    FOR             reduce using rule 155 (instance_list -> instance .)
    AXIOMATIZATION  reduce using rule 155 (instance_list -> instance .)
    FUN             reduce using rule 155 (instance_list -> instance .)
    FUNCTION        reduce using rule 155 (instance_list -> instance .)
    INTERPRETATION  reduce using rule 155 (instance_list -> instance .)
    LEMMA           reduce using rule 155 (instance_list -> instance .)
    LOCALE          reduce using rule 155 (instance_list -> instance .)
    METHOD          reduce using rule 155 (instance_list -> instance .)
    SECTION         reduce using rule 155 (instance_list -> instance .)
    TEXT            reduce using rule 155 (instance_list -> instance .)
    TYPE_SYNONYM    reduce using rule 155 (instance_list -> instance .)
    TYPEDECL        reduce using rule 155 (instance_list -> instance .)
    END             reduce using rule 155 (instance_list -> instance .)
    OPENING         reduce using rule 155 (instance_list -> instance .)
    BEGIN           reduce using rule 155 (instance_list -> instance .)
    PLUS            shift and go to state 101


state 61

    (157) instance -> ID .
    (158) instance -> ID . pos_insts
    (159) instance -> ID . name_insts
    (162) qualifier -> ID .
    (164) qualifier -> ID . QUESTION_MARK
    (166) pos_insts -> . UNDERSCORE
    (167) pos_insts -> . DOT
    (168) pos_insts -> . ID
    (169) pos_insts -> . QUOTED_STRING
    (170) pos_insts -> . GREEK
    (171) pos_insts -> . UNDERSCORE pos_insts
    (172) pos_insts -> . DOT pos_insts
    (173) pos_insts -> . ID pos_insts
    (174) pos_insts -> . QUOTED_STRING pos_insts
    (175) pos_insts -> . GREEK pos_insts
    (176) name_insts -> . WHERE name_insts_list

    PLUS            reduce using rule 157 (instance -> ID .)
    FOR             reduce using rule 157 (instance -> ID .)
    AXIOMATIZATION  reduce using rule 157 (instance -> ID .)
    FUN             reduce using rule 157 (instance -> ID .)
    FUNCTION        reduce using rule 157 (instance -> ID .)
    INTERPRETATION  reduce using rule 157 (instance -> ID .)
    LEMMA           reduce using rule 157 (instance -> ID .)
    LOCALE          reduce using rule 157 (instance -> ID .)
    METHOD          reduce using rule 157 (instance -> ID .)
    SECTION         reduce using rule 157 (instance -> ID .)
    TEXT            reduce using rule 157 (instance -> ID .)
    TYPE_SYNONYM    reduce using rule 157 (instance -> ID .)
    TYPEDECL        reduce using rule 157 (instance -> ID .)
    END             reduce using rule 157 (instance -> ID .)
    OPENING         reduce using rule 157 (instance -> ID .)
    BEGIN           reduce using rule 157 (instance -> ID .)
    COLON           reduce using rule 162 (qualifier -> ID .)
    QUESTION_MARK   shift and go to state 105
    UNDERSCORE      shift and go to state 106
    DOT             shift and go to state 107
    ID              shift and go to state 102
    QUOTED_STRING   shift and go to state 108
    GREEK           shift and go to state 109
    WHERE           shift and go to state 110

    pos_insts                      shift and go to state 103
    name_insts                     shift and go to state 104

state 62

    (160) instance -> qualifier . COLON ID pos_insts
    (161) instance -> qualifier . COLON ID name_insts

    COLON           shift and go to state 111


state 63

    (163) qualifier -> QUOTED_STRING .
    (165) qualifier -> QUOTED_STRING . QUESTION_MARK

    COLON           reduce using rule 163 (qualifier -> QUOTED_STRING .)
    QUESTION_MARK   shift and go to state 112


state 64

    (45) lemma_block -> LEMMA ID . COLON assumes_block shows_clause lemma_proof_block

    COLON           shift and go to state 113


state 65

    (181) locale_block -> LOCALE ID .
    (182) locale_block -> LOCALE ID . BEGIN content END
    (183) locale_block -> LOCALE ID . comment_block BEGIN content END
    (184) locale_block -> LOCALE ID . EQ locale
    (185) locale_block -> LOCALE ID . EQ locale BEGIN content END
    (253) comment_block -> . COMMENT_CARTOUCHE CARTOUCHE

    AXIOMATIZATION  reduce using rule 181 (locale_block -> LOCALE ID .)
    FUN             reduce using rule 181 (locale_block -> LOCALE ID .)
    FUNCTION        reduce using rule 181 (locale_block -> LOCALE ID .)
    INTERPRETATION  reduce using rule 181 (locale_block -> LOCALE ID .)
    LEMMA           reduce using rule 181 (locale_block -> LOCALE ID .)
    LOCALE          reduce using rule 181 (locale_block -> LOCALE ID .)
    METHOD          reduce using rule 181 (locale_block -> LOCALE ID .)
    SECTION         reduce using rule 181 (locale_block -> LOCALE ID .)
    TEXT            reduce using rule 181 (locale_block -> LOCALE ID .)
    TYPE_SYNONYM    reduce using rule 181 (locale_block -> LOCALE ID .)
    TYPEDECL        reduce using rule 181 (locale_block -> LOCALE ID .)
    END             reduce using rule 181 (locale_block -> LOCALE ID .)
    BEGIN           shift and go to state 114
    EQ              shift and go to state 116
    COMMENT_CARTOUCHE shift and go to state 117

    comment_block                  shift and go to state 115

state 66

    (22) method_block -> METHOD method_name . EQUALS instruction

    EQUALS          shift and go to state 118


state 67

    (23) method_name -> ID .

    EQUALS          reduce using rule 23 (method_name -> ID .)


state 68

    (219) type_synonym -> TYPE_SYNONYM typespec . EQUALS ID
    (220) type_synonym -> TYPE_SYNONYM typespec . EQUALS ID mixfix

    EQUALS          shift and go to state 119


state 69

    (77) typespec -> ID .
    (79) typearg -> ID .
    (80) typearg -> ID . COLON COLON ID

    EQUALS          reduce using rule 77 (typespec -> ID .)
    LEFT_PAREN      reduce using rule 77 (typespec -> ID .)
    BINDER          reduce using rule 77 (typespec -> ID .)
    STRUCTURE       reduce using rule 77 (typespec -> ID .)
    AXIOMATIZATION  reduce using rule 77 (typespec -> ID .)
    FUN             reduce using rule 77 (typespec -> ID .)
    FUNCTION        reduce using rule 77 (typespec -> ID .)
    INTERPRETATION  reduce using rule 77 (typespec -> ID .)
    LEMMA           reduce using rule 77 (typespec -> ID .)
    LOCALE          reduce using rule 77 (typespec -> ID .)
    METHOD          reduce using rule 77 (typespec -> ID .)
    SECTION         reduce using rule 77 (typespec -> ID .)
    TEXT            reduce using rule 77 (typespec -> ID .)
    TYPE_SYNONYM    reduce using rule 77 (typespec -> ID .)
    TYPEDECL        reduce using rule 77 (typespec -> ID .)
    END             reduce using rule 77 (typespec -> ID .)
    COMMA           reduce using rule 79 (typearg -> ID .)
    ID              reduce using rule 79 (typearg -> ID .)
    COLON           shift and go to state 120


state 70

    (78) typespec -> typeargs . ID

    ID              shift and go to state 121


state 71

    (81) typeargs -> typearg .
    (82) typeargs -> typearg . COMMA typeargs

    ID              reduce using rule 81 (typeargs -> typearg .)
    RIGHT_PAREN     reduce using rule 81 (typeargs -> typearg .)
    COMMA           shift and go to state 122


state 72

    (83) typeargs -> LEFT_PAREN . typeargs RIGHT_PAREN
    (81) typeargs -> . typearg
    (82) typeargs -> . typearg COMMA typeargs
    (83) typeargs -> . LEFT_PAREN typeargs RIGHT_PAREN
    (79) typearg -> . ID
    (80) typearg -> . ID COLON COLON ID

    LEFT_PAREN      shift and go to state 72
    ID              shift and go to state 124

    typeargs                       shift and go to state 123
    typearg                        shift and go to state 71

state 73

    (217) typedecl -> TYPEDECL typespec .
    (218) typedecl -> TYPEDECL typespec . mixfix
    (221) mixfix -> . LEFT_PAREN template RIGHT_PAREN
    (222) mixfix -> . LEFT_PAREN template prios RIGHT_PAREN
    (223) mixfix -> . LEFT_PAREN template NAT RIGHT_PAREN
    (224) mixfix -> . LEFT_PAREN template prios NAT RIGHT_PAREN
    (225) mixfix -> . LEFT_PAREN INFIX template NAT RIGHT_PAREN
    (226) mixfix -> . LEFT_PAREN INFIXL template NAT RIGHT_PAREN
    (227) mixfix -> . LEFT_PAREN INFIXR template NAT RIGHT_PAREN
    (228) mixfix -> . BINDER template NAT RIGHT_PAREN
    (229) mixfix -> . BINDER template prio NAT RIGHT_PAREN
    (230) mixfix -> . STRUCTURE

    AXIOMATIZATION  reduce using rule 217 (typedecl -> TYPEDECL typespec .)
    FUN             reduce using rule 217 (typedecl -> TYPEDECL typespec .)
    FUNCTION        reduce using rule 217 (typedecl -> TYPEDECL typespec .)
    INTERPRETATION  reduce using rule 217 (typedecl -> TYPEDECL typespec .)
    LEMMA           reduce using rule 217 (typedecl -> TYPEDECL typespec .)
    LOCALE          reduce using rule 217 (typedecl -> TYPEDECL typespec .)
    METHOD          reduce using rule 217 (typedecl -> TYPEDECL typespec .)
    SECTION         reduce using rule 217 (typedecl -> TYPEDECL typespec .)
    TEXT            reduce using rule 217 (typedecl -> TYPEDECL typespec .)
    TYPE_SYNONYM    reduce using rule 217 (typedecl -> TYPEDECL typespec .)
    TYPEDECL        reduce using rule 217 (typedecl -> TYPEDECL typespec .)
    END             reduce using rule 217 (typedecl -> TYPEDECL typespec .)
    LEFT_PAREN      shift and go to state 87
    BINDER          shift and go to state 88
    STRUCTURE       shift and go to state 89

    mixfix                         shift and go to state 125

state 74

    (147) axiomatization_block -> AXIOMATIZATION vars WHERE . axiomatization
    (148) axiomatization -> . axiomatization_header spec_prems for_fixes
    (149) axiomatization_header -> . thmdecl ID
    (150) axiomatization_header -> . thmdecl QUOTED_STRING
    (151) axiomatization_header -> . thmdecl ID AND axiomatization_header
    (152) axiomatization_header -> . thmdecl QUOTED_STRING AND axiomatization_header
    (107) thmdecl -> . thmbind COLON
    (114) thmbind -> . ID
    (115) thmbind -> . ID attributes
    (116) thmbind -> . attributes
    (117) attributes -> . LEFT_BRACKET attributes_list RIGHT_BRACKET

    ID              shift and go to state 78
    LEFT_BRACKET    shift and go to state 81

    axiomatization                 shift and go to state 126
    axiomatization_header          shift and go to state 76
    thmdecl                        shift and go to state 77
    thmbind                        shift and go to state 79
    attributes                     shift and go to state 80

state 75

    (146) axiomatization_block -> AXIOMATIZATION WHERE axiomatization .

    AXIOMATIZATION  reduce using rule 146 (axiomatization_block -> AXIOMATIZATION WHERE axiomatization .)
    FUN             reduce using rule 146 (axiomatization_block -> AXIOMATIZATION WHERE axiomatization .)
    FUNCTION        reduce using rule 146 (axiomatization_block -> AXIOMATIZATION WHERE axiomatization .)
    INTERPRETATION  reduce using rule 146 (axiomatization_block -> AXIOMATIZATION WHERE axiomatization .)
    LEMMA           reduce using rule 146 (axiomatization_block -> AXIOMATIZATION WHERE axiomatization .)
    LOCALE          reduce using rule 146 (axiomatization_block -> AXIOMATIZATION WHERE axiomatization .)
    METHOD          reduce using rule 146 (axiomatization_block -> AXIOMATIZATION WHERE axiomatization .)
    SECTION         reduce using rule 146 (axiomatization_block -> AXIOMATIZATION WHERE axiomatization .)
    TEXT            reduce using rule 146 (axiomatization_block -> AXIOMATIZATION WHERE axiomatization .)
    TYPE_SYNONYM    reduce using rule 146 (axiomatization_block -> AXIOMATIZATION WHERE axiomatization .)
    TYPEDECL        reduce using rule 146 (axiomatization_block -> AXIOMATIZATION WHERE axiomatization .)
    END             reduce using rule 146 (axiomatization_block -> AXIOMATIZATION WHERE axiomatization .)


state 76

    (148) axiomatization -> axiomatization_header . spec_prems for_fixes
    (137) spec_prems -> . empty
    (138) spec_prems -> . IF prop_list
    (261) empty -> .

    IF              shift and go to state 129
    FOR             reduce using rule 261 (empty -> .)

    spec_prems                     shift and go to state 127
    empty                          shift and go to state 128

state 77

    (149) axiomatization_header -> thmdecl . ID
    (150) axiomatization_header -> thmdecl . QUOTED_STRING
    (151) axiomatization_header -> thmdecl . ID AND axiomatization_header
    (152) axiomatization_header -> thmdecl . QUOTED_STRING AND axiomatization_header

    ID              shift and go to state 130
    QUOTED_STRING   shift and go to state 131


state 78

    (114) thmbind -> ID .
    (115) thmbind -> ID . attributes
    (117) attributes -> . LEFT_BRACKET attributes_list RIGHT_BRACKET

    COLON           reduce using rule 114 (thmbind -> ID .)
    LEFT_BRACKET    shift and go to state 81

    attributes                     shift and go to state 132

state 79

    (107) thmdecl -> thmbind . COLON

    COLON           shift and go to state 133


state 80

    (116) thmbind -> attributes .

    COLON           reduce using rule 116 (thmbind -> attributes .)


state 81

    (117) attributes -> LEFT_BRACKET . attributes_list RIGHT_BRACKET
    (118) attributes_list -> . empty
    (119) attributes_list -> . attribute
    (120) attributes_list -> . attribute COMMA attributes_list
    (261) empty -> .
    (121) attribute -> . ID args

    RIGHT_BRACKET   reduce using rule 261 (empty -> .)
    ID              shift and go to state 137

    attributes_list                shift and go to state 134
    empty                          shift and go to state 135
    attribute                      shift and go to state 136

state 82

    (85) vars -> var AND . vars
    (84) vars -> . var
    (85) vars -> . var AND vars
    (86) var -> . names
    (87) var -> . ID COLON COLON ID
    (88) var -> . GREEK COLON COLON ID
    (89) var -> . ID COLON COLON QUOTED_STRING
    (90) var -> . GREEK COLON COLON QUOTED_STRING
    (91) var -> . names COLON COLON ID
    (92) var -> . names COLON COLON QUOTED_STRING
    (93) var -> . ID mixfix
    (94) var -> . ID COLON COLON ID mixfix
    (95) var -> . GREEK COLON COLON ID mixfix
    (96) var -> . ID COLON COLON QUOTED_STRING mixfix
    (97) var -> . GREEK COLON COLON QUOTED_STRING mixfix
    (98) names -> . ID
    (99) names -> . ID AND names

    ID              shift and go to state 50
    GREEK           shift and go to state 51

    var                            shift and go to state 48
    vars                           shift and go to state 138
    names                          shift and go to state 49

state 83

    (91) var -> names COLON . COLON ID
    (92) var -> names COLON . COLON QUOTED_STRING

    COLON           shift and go to state 139


state 84

    (87) var -> ID COLON . COLON ID
    (89) var -> ID COLON . COLON QUOTED_STRING
    (94) var -> ID COLON . COLON ID mixfix
    (96) var -> ID COLON . COLON QUOTED_STRING mixfix

    COLON           shift and go to state 140


state 85

    (93) var -> ID mixfix .

    AND             reduce using rule 93 (var -> ID mixfix .)
    WHERE           reduce using rule 93 (var -> ID mixfix .)
    AXIOMATIZATION  reduce using rule 93 (var -> ID mixfix .)
    FUN             reduce using rule 93 (var -> ID mixfix .)
    FUNCTION        reduce using rule 93 (var -> ID mixfix .)
    INTERPRETATION  reduce using rule 93 (var -> ID mixfix .)
    LEMMA           reduce using rule 93 (var -> ID mixfix .)
    LOCALE          reduce using rule 93 (var -> ID mixfix .)
    METHOD          reduce using rule 93 (var -> ID mixfix .)
    SECTION         reduce using rule 93 (var -> ID mixfix .)
    TEXT            reduce using rule 93 (var -> ID mixfix .)
    TYPE_SYNONYM    reduce using rule 93 (var -> ID mixfix .)
    TYPEDECL        reduce using rule 93 (var -> ID mixfix .)
    END             reduce using rule 93 (var -> ID mixfix .)
    OPENING         reduce using rule 93 (var -> ID mixfix .)
    BEGIN           reduce using rule 93 (var -> ID mixfix .)
    PIPE            reduce using rule 93 (var -> ID mixfix .)
    FIXES           reduce using rule 93 (var -> ID mixfix .)
    CONSTRAINS      reduce using rule 93 (var -> ID mixfix .)
    ASSUMES         reduce using rule 93 (var -> ID mixfix .)
    DEFINES         reduce using rule 93 (var -> ID mixfix .)
    NOTES           reduce using rule 93 (var -> ID mixfix .)


state 86

    (99) names -> ID AND . names
    (98) names -> . ID
    (99) names -> . ID AND names

    ID              shift and go to state 141

    names                          shift and go to state 142

state 87

    (221) mixfix -> LEFT_PAREN . template RIGHT_PAREN
    (222) mixfix -> LEFT_PAREN . template prios RIGHT_PAREN
    (223) mixfix -> LEFT_PAREN . template NAT RIGHT_PAREN
    (224) mixfix -> LEFT_PAREN . template prios NAT RIGHT_PAREN
    (225) mixfix -> LEFT_PAREN . INFIX template NAT RIGHT_PAREN
    (226) mixfix -> LEFT_PAREN . INFIXL template NAT RIGHT_PAREN
    (227) mixfix -> LEFT_PAREN . INFIXR template NAT RIGHT_PAREN
    (231) template -> . QUOTED_STRING
    (232) template -> . CARTOUCHE

    INFIX           shift and go to state 144
    INFIXL          shift and go to state 145
    INFIXR          shift and go to state 146
    QUOTED_STRING   shift and go to state 147
    CARTOUCHE       shift and go to state 148

    template                       shift and go to state 143

state 88

    (228) mixfix -> BINDER . template NAT RIGHT_PAREN
    (229) mixfix -> BINDER . template prio NAT RIGHT_PAREN
    (231) template -> . QUOTED_STRING
    (232) template -> . CARTOUCHE

    QUOTED_STRING   shift and go to state 147
    CARTOUCHE       shift and go to state 148

    template                       shift and go to state 149

state 89

    (230) mixfix -> STRUCTURE .

    AND             reduce using rule 230 (mixfix -> STRUCTURE .)
    WHERE           reduce using rule 230 (mixfix -> STRUCTURE .)
    AXIOMATIZATION  reduce using rule 230 (mixfix -> STRUCTURE .)
    FUN             reduce using rule 230 (mixfix -> STRUCTURE .)
    FUNCTION        reduce using rule 230 (mixfix -> STRUCTURE .)
    INTERPRETATION  reduce using rule 230 (mixfix -> STRUCTURE .)
    LEMMA           reduce using rule 230 (mixfix -> STRUCTURE .)
    LOCALE          reduce using rule 230 (mixfix -> STRUCTURE .)
    METHOD          reduce using rule 230 (mixfix -> STRUCTURE .)
    SECTION         reduce using rule 230 (mixfix -> STRUCTURE .)
    TEXT            reduce using rule 230 (mixfix -> STRUCTURE .)
    TYPE_SYNONYM    reduce using rule 230 (mixfix -> STRUCTURE .)
    TYPEDECL        reduce using rule 230 (mixfix -> STRUCTURE .)
    END             reduce using rule 230 (mixfix -> STRUCTURE .)
    OPENING         reduce using rule 230 (mixfix -> STRUCTURE .)
    BEGIN           reduce using rule 230 (mixfix -> STRUCTURE .)
    PIPE            reduce using rule 230 (mixfix -> STRUCTURE .)
    FIXES           reduce using rule 230 (mixfix -> STRUCTURE .)
    CONSTRAINS      reduce using rule 230 (mixfix -> STRUCTURE .)
    ASSUMES         reduce using rule 230 (mixfix -> STRUCTURE .)
    DEFINES         reduce using rule 230 (mixfix -> STRUCTURE .)
    NOTES           reduce using rule 230 (mixfix -> STRUCTURE .)


state 90

    (88) var -> GREEK COLON . COLON ID
    (90) var -> GREEK COLON . COLON QUOTED_STRING
    (95) var -> GREEK COLON . COLON ID mixfix
    (97) var -> GREEK COLON . COLON QUOTED_STRING mixfix

    COLON           shift and go to state 150


state 91

    (240) fun_block -> FUN opts specification .

    AXIOMATIZATION  reduce using rule 240 (fun_block -> FUN opts specification .)
    FUN             reduce using rule 240 (fun_block -> FUN opts specification .)
    FUNCTION        reduce using rule 240 (fun_block -> FUN opts specification .)
    INTERPRETATION  reduce using rule 240 (fun_block -> FUN opts specification .)
    LEMMA           reduce using rule 240 (fun_block -> FUN opts specification .)
    LOCALE          reduce using rule 240 (fun_block -> FUN opts specification .)
    METHOD          reduce using rule 240 (fun_block -> FUN opts specification .)
    SECTION         reduce using rule 240 (fun_block -> FUN opts specification .)
    TEXT            reduce using rule 240 (fun_block -> FUN opts specification .)
    TYPE_SYNONYM    reduce using rule 240 (fun_block -> FUN opts specification .)
    TYPEDECL        reduce using rule 240 (fun_block -> FUN opts specification .)
    END             reduce using rule 240 (fun_block -> FUN opts specification .)


state 92

    (142) specification -> vars WHERE . multi_specs
    (129) multi_specs -> . structured_spec
    (130) multi_specs -> . structured_spec PIPE multi_specs
    (131) structured_spec -> . ID spec_prems
    (132) structured_spec -> . ID spec_prems for_fixes
    (133) structured_spec -> . QUOTED_STRING spec_prems
    (134) structured_spec -> . QUOTED_STRING spec_prems for_fixes
    (135) structured_spec -> . thmdecl ID spec_prems for_fixes
    (136) structured_spec -> . thmdecl QUOTED_STRING spec_prems for_fixes
    (107) thmdecl -> . thmbind COLON
    (114) thmbind -> . ID
    (115) thmbind -> . ID attributes
    (116) thmbind -> . attributes
    (117) attributes -> . LEFT_BRACKET attributes_list RIGHT_BRACKET

    ID              shift and go to state 153
    QUOTED_STRING   shift and go to state 154
    LEFT_BRACKET    shift and go to state 81

    multi_specs                    shift and go to state 151
    structured_spec                shift and go to state 152
    thmdecl                        shift and go to state 155
    thmbind                        shift and go to state 79
    attributes                     shift and go to state 80

state 93

    (242) opts -> LEFT_PAREN opt_list . RIGHT_PAREN

    RIGHT_PAREN     shift and go to state 156


state 94

    (243) opt_list -> sequential .
    (245) opt_list -> sequential . COMMA opt_list

    RIGHT_PAREN     reduce using rule 243 (opt_list -> sequential .)
    COMMA           shift and go to state 157


state 95

    (244) opt_list -> domintros .
    (246) opt_list -> domintros . COMMA opt_list

    RIGHT_PAREN     reduce using rule 244 (opt_list -> domintros .)
    COMMA           shift and go to state 158


state 96

    (247) sequential -> ID .
    (249) domintros -> ID .

  ! reduce/reduce conflict for COMMA resolved using rule 247 (sequential -> ID .)
  ! reduce/reduce conflict for RIGHT_PAREN resolved using rule 247 (sequential -> ID .)
    COMMA           reduce using rule 247 (sequential -> ID .)
    RIGHT_PAREN     reduce using rule 247 (sequential -> ID .)

  ! COMMA           [ reduce using rule 249 (domintros -> ID .) ]
  ! RIGHT_PAREN     [ reduce using rule 249 (domintros -> ID .) ]


state 97

    (248) sequential -> QUOTED_STRING .
    (250) domintros -> QUOTED_STRING .

  ! reduce/reduce conflict for COMMA resolved using rule 248 (sequential -> QUOTED_STRING .)
  ! reduce/reduce conflict for RIGHT_PAREN resolved using rule 248 (sequential -> QUOTED_STRING .)
    COMMA           reduce using rule 248 (sequential -> QUOTED_STRING .)
    RIGHT_PAREN     reduce using rule 248 (sequential -> QUOTED_STRING .)

  ! COMMA           [ reduce using rule 250 (domintros -> QUOTED_STRING .) ]
  ! RIGHT_PAREN     [ reduce using rule 250 (domintros -> QUOTED_STRING .) ]


state 98

    (241) fun_block -> FUNCTION opts specification .

    AXIOMATIZATION  reduce using rule 241 (fun_block -> FUNCTION opts specification .)
    FUN             reduce using rule 241 (fun_block -> FUNCTION opts specification .)
    FUNCTION        reduce using rule 241 (fun_block -> FUNCTION opts specification .)
    INTERPRETATION  reduce using rule 241 (fun_block -> FUNCTION opts specification .)
    LEMMA           reduce using rule 241 (fun_block -> FUNCTION opts specification .)
    LOCALE          reduce using rule 241 (fun_block -> FUNCTION opts specification .)
    METHOD          reduce using rule 241 (fun_block -> FUNCTION opts specification .)
    SECTION         reduce using rule 241 (fun_block -> FUNCTION opts specification .)
    TEXT            reduce using rule 241 (fun_block -> FUNCTION opts specification .)
    TYPE_SYNONYM    reduce using rule 241 (fun_block -> FUNCTION opts specification .)
    TYPEDECL        reduce using rule 241 (fun_block -> FUNCTION opts specification .)
    END             reduce using rule 241 (fun_block -> FUNCTION opts specification .)


state 99

    (154) locale_expr -> instance_list for_fixes .

    AXIOMATIZATION  reduce using rule 154 (locale_expr -> instance_list for_fixes .)
    FUN             reduce using rule 154 (locale_expr -> instance_list for_fixes .)
    FUNCTION        reduce using rule 154 (locale_expr -> instance_list for_fixes .)
    INTERPRETATION  reduce using rule 154 (locale_expr -> instance_list for_fixes .)
    LEMMA           reduce using rule 154 (locale_expr -> instance_list for_fixes .)
    LOCALE          reduce using rule 154 (locale_expr -> instance_list for_fixes .)
    METHOD          reduce using rule 154 (locale_expr -> instance_list for_fixes .)
    SECTION         reduce using rule 154 (locale_expr -> instance_list for_fixes .)
    TEXT            reduce using rule 154 (locale_expr -> instance_list for_fixes .)
    TYPE_SYNONYM    reduce using rule 154 (locale_expr -> instance_list for_fixes .)
    TYPEDECL        reduce using rule 154 (locale_expr -> instance_list for_fixes .)
    END             reduce using rule 154 (locale_expr -> instance_list for_fixes .)
    OPENING         reduce using rule 154 (locale_expr -> instance_list for_fixes .)
    BEGIN           reduce using rule 154 (locale_expr -> instance_list for_fixes .)


state 100

    (128) for_fixes -> FOR . vars
    (84) vars -> . var
    (85) vars -> . var AND vars
    (86) var -> . names
    (87) var -> . ID COLON COLON ID
    (88) var -> . GREEK COLON COLON ID
    (89) var -> . ID COLON COLON QUOTED_STRING
    (90) var -> . GREEK COLON COLON QUOTED_STRING
    (91) var -> . names COLON COLON ID
    (92) var -> . names COLON COLON QUOTED_STRING
    (93) var -> . ID mixfix
    (94) var -> . ID COLON COLON ID mixfix
    (95) var -> . GREEK COLON COLON ID mixfix
    (96) var -> . ID COLON COLON QUOTED_STRING mixfix
    (97) var -> . GREEK COLON COLON QUOTED_STRING mixfix
    (98) names -> . ID
    (99) names -> . ID AND names

    ID              shift and go to state 50
    GREEK           shift and go to state 51

    vars                           shift and go to state 159
    var                            shift and go to state 48
    names                          shift and go to state 49

state 101

    (156) instance_list -> instance PLUS . instance_list
    (155) instance_list -> . instance
    (156) instance_list -> . instance PLUS instance_list
    (157) instance -> . ID
    (158) instance -> . ID pos_insts
    (159) instance -> . ID name_insts
    (160) instance -> . qualifier COLON ID pos_insts
    (161) instance -> . qualifier COLON ID name_insts
    (162) qualifier -> . ID
    (163) qualifier -> . QUOTED_STRING
    (164) qualifier -> . ID QUESTION_MARK
    (165) qualifier -> . QUOTED_STRING QUESTION_MARK

    ID              shift and go to state 61
    QUOTED_STRING   shift and go to state 63

    instance                       shift and go to state 60
    instance_list                  shift and go to state 160
    qualifier                      shift and go to state 62

state 102

    (168) pos_insts -> ID .
    (173) pos_insts -> ID . pos_insts
    (166) pos_insts -> . UNDERSCORE
    (167) pos_insts -> . DOT
    (168) pos_insts -> . ID
    (169) pos_insts -> . QUOTED_STRING
    (170) pos_insts -> . GREEK
    (171) pos_insts -> . UNDERSCORE pos_insts
    (172) pos_insts -> . DOT pos_insts
    (173) pos_insts -> . ID pos_insts
    (174) pos_insts -> . QUOTED_STRING pos_insts
    (175) pos_insts -> . GREEK pos_insts

    PLUS            reduce using rule 168 (pos_insts -> ID .)
    FOR             reduce using rule 168 (pos_insts -> ID .)
    AXIOMATIZATION  reduce using rule 168 (pos_insts -> ID .)
    FUN             reduce using rule 168 (pos_insts -> ID .)
    FUNCTION        reduce using rule 168 (pos_insts -> ID .)
    INTERPRETATION  reduce using rule 168 (pos_insts -> ID .)
    LEMMA           reduce using rule 168 (pos_insts -> ID .)
    LOCALE          reduce using rule 168 (pos_insts -> ID .)
    METHOD          reduce using rule 168 (pos_insts -> ID .)
    SECTION         reduce using rule 168 (pos_insts -> ID .)
    TEXT            reduce using rule 168 (pos_insts -> ID .)
    TYPE_SYNONYM    reduce using rule 168 (pos_insts -> ID .)
    TYPEDECL        reduce using rule 168 (pos_insts -> ID .)
    END             reduce using rule 168 (pos_insts -> ID .)
    OPENING         reduce using rule 168 (pos_insts -> ID .)
    BEGIN           reduce using rule 168 (pos_insts -> ID .)
    UNDERSCORE      shift and go to state 106
    DOT             shift and go to state 107
    ID              shift and go to state 102
    QUOTED_STRING   shift and go to state 108
    GREEK           shift and go to state 109

    pos_insts                      shift and go to state 161

state 103

    (158) instance -> ID pos_insts .

    PLUS            reduce using rule 158 (instance -> ID pos_insts .)
    FOR             reduce using rule 158 (instance -> ID pos_insts .)
    AXIOMATIZATION  reduce using rule 158 (instance -> ID pos_insts .)
    FUN             reduce using rule 158 (instance -> ID pos_insts .)
    FUNCTION        reduce using rule 158 (instance -> ID pos_insts .)
    INTERPRETATION  reduce using rule 158 (instance -> ID pos_insts .)
    LEMMA           reduce using rule 158 (instance -> ID pos_insts .)
    LOCALE          reduce using rule 158 (instance -> ID pos_insts .)
    METHOD          reduce using rule 158 (instance -> ID pos_insts .)
    SECTION         reduce using rule 158 (instance -> ID pos_insts .)
    TEXT            reduce using rule 158 (instance -> ID pos_insts .)
    TYPE_SYNONYM    reduce using rule 158 (instance -> ID pos_insts .)
    TYPEDECL        reduce using rule 158 (instance -> ID pos_insts .)
    END             reduce using rule 158 (instance -> ID pos_insts .)
    OPENING         reduce using rule 158 (instance -> ID pos_insts .)
    BEGIN           reduce using rule 158 (instance -> ID pos_insts .)


state 104

    (159) instance -> ID name_insts .

    PLUS            reduce using rule 159 (instance -> ID name_insts .)
    FOR             reduce using rule 159 (instance -> ID name_insts .)
    AXIOMATIZATION  reduce using rule 159 (instance -> ID name_insts .)
    FUN             reduce using rule 159 (instance -> ID name_insts .)
    FUNCTION        reduce using rule 159 (instance -> ID name_insts .)
    INTERPRETATION  reduce using rule 159 (instance -> ID name_insts .)
    LEMMA           reduce using rule 159 (instance -> ID name_insts .)
    LOCALE          reduce using rule 159 (instance -> ID name_insts .)
    METHOD          reduce using rule 159 (instance -> ID name_insts .)
    SECTION         reduce using rule 159 (instance -> ID name_insts .)
    TEXT            reduce using rule 159 (instance -> ID name_insts .)
    TYPE_SYNONYM    reduce using rule 159 (instance -> ID name_insts .)
    TYPEDECL        reduce using rule 159 (instance -> ID name_insts .)
    END             reduce using rule 159 (instance -> ID name_insts .)
    OPENING         reduce using rule 159 (instance -> ID name_insts .)
    BEGIN           reduce using rule 159 (instance -> ID name_insts .)


state 105

    (164) qualifier -> ID QUESTION_MARK .

    COLON           reduce using rule 164 (qualifier -> ID QUESTION_MARK .)


state 106

    (166) pos_insts -> UNDERSCORE .
    (171) pos_insts -> UNDERSCORE . pos_insts
    (166) pos_insts -> . UNDERSCORE
    (167) pos_insts -> . DOT
    (168) pos_insts -> . ID
    (169) pos_insts -> . QUOTED_STRING
    (170) pos_insts -> . GREEK
    (171) pos_insts -> . UNDERSCORE pos_insts
    (172) pos_insts -> . DOT pos_insts
    (173) pos_insts -> . ID pos_insts
    (174) pos_insts -> . QUOTED_STRING pos_insts
    (175) pos_insts -> . GREEK pos_insts

    PLUS            reduce using rule 166 (pos_insts -> UNDERSCORE .)
    FOR             reduce using rule 166 (pos_insts -> UNDERSCORE .)
    AXIOMATIZATION  reduce using rule 166 (pos_insts -> UNDERSCORE .)
    FUN             reduce using rule 166 (pos_insts -> UNDERSCORE .)
    FUNCTION        reduce using rule 166 (pos_insts -> UNDERSCORE .)
    INTERPRETATION  reduce using rule 166 (pos_insts -> UNDERSCORE .)
    LEMMA           reduce using rule 166 (pos_insts -> UNDERSCORE .)
    LOCALE          reduce using rule 166 (pos_insts -> UNDERSCORE .)
    METHOD          reduce using rule 166 (pos_insts -> UNDERSCORE .)
    SECTION         reduce using rule 166 (pos_insts -> UNDERSCORE .)
    TEXT            reduce using rule 166 (pos_insts -> UNDERSCORE .)
    TYPE_SYNONYM    reduce using rule 166 (pos_insts -> UNDERSCORE .)
    TYPEDECL        reduce using rule 166 (pos_insts -> UNDERSCORE .)
    END             reduce using rule 166 (pos_insts -> UNDERSCORE .)
    OPENING         reduce using rule 166 (pos_insts -> UNDERSCORE .)
    BEGIN           reduce using rule 166 (pos_insts -> UNDERSCORE .)
    UNDERSCORE      shift and go to state 106
    DOT             shift and go to state 107
    ID              shift and go to state 102
    QUOTED_STRING   shift and go to state 108
    GREEK           shift and go to state 109

    pos_insts                      shift and go to state 162

state 107

    (167) pos_insts -> DOT .
    (172) pos_insts -> DOT . pos_insts
    (166) pos_insts -> . UNDERSCORE
    (167) pos_insts -> . DOT
    (168) pos_insts -> . ID
    (169) pos_insts -> . QUOTED_STRING
    (170) pos_insts -> . GREEK
    (171) pos_insts -> . UNDERSCORE pos_insts
    (172) pos_insts -> . DOT pos_insts
    (173) pos_insts -> . ID pos_insts
    (174) pos_insts -> . QUOTED_STRING pos_insts
    (175) pos_insts -> . GREEK pos_insts

    PLUS            reduce using rule 167 (pos_insts -> DOT .)
    FOR             reduce using rule 167 (pos_insts -> DOT .)
    AXIOMATIZATION  reduce using rule 167 (pos_insts -> DOT .)
    FUN             reduce using rule 167 (pos_insts -> DOT .)
    FUNCTION        reduce using rule 167 (pos_insts -> DOT .)
    INTERPRETATION  reduce using rule 167 (pos_insts -> DOT .)
    LEMMA           reduce using rule 167 (pos_insts -> DOT .)
    LOCALE          reduce using rule 167 (pos_insts -> DOT .)
    METHOD          reduce using rule 167 (pos_insts -> DOT .)
    SECTION         reduce using rule 167 (pos_insts -> DOT .)
    TEXT            reduce using rule 167 (pos_insts -> DOT .)
    TYPE_SYNONYM    reduce using rule 167 (pos_insts -> DOT .)
    TYPEDECL        reduce using rule 167 (pos_insts -> DOT .)
    END             reduce using rule 167 (pos_insts -> DOT .)
    OPENING         reduce using rule 167 (pos_insts -> DOT .)
    BEGIN           reduce using rule 167 (pos_insts -> DOT .)
    UNDERSCORE      shift and go to state 106
    DOT             shift and go to state 107
    ID              shift and go to state 102
    QUOTED_STRING   shift and go to state 108
    GREEK           shift and go to state 109

    pos_insts                      shift and go to state 163

state 108

    (169) pos_insts -> QUOTED_STRING .
    (174) pos_insts -> QUOTED_STRING . pos_insts
    (166) pos_insts -> . UNDERSCORE
    (167) pos_insts -> . DOT
    (168) pos_insts -> . ID
    (169) pos_insts -> . QUOTED_STRING
    (170) pos_insts -> . GREEK
    (171) pos_insts -> . UNDERSCORE pos_insts
    (172) pos_insts -> . DOT pos_insts
    (173) pos_insts -> . ID pos_insts
    (174) pos_insts -> . QUOTED_STRING pos_insts
    (175) pos_insts -> . GREEK pos_insts

    PLUS            reduce using rule 169 (pos_insts -> QUOTED_STRING .)
    FOR             reduce using rule 169 (pos_insts -> QUOTED_STRING .)
    AXIOMATIZATION  reduce using rule 169 (pos_insts -> QUOTED_STRING .)
    FUN             reduce using rule 169 (pos_insts -> QUOTED_STRING .)
    FUNCTION        reduce using rule 169 (pos_insts -> QUOTED_STRING .)
    INTERPRETATION  reduce using rule 169 (pos_insts -> QUOTED_STRING .)
    LEMMA           reduce using rule 169 (pos_insts -> QUOTED_STRING .)
    LOCALE          reduce using rule 169 (pos_insts -> QUOTED_STRING .)
    METHOD          reduce using rule 169 (pos_insts -> QUOTED_STRING .)
    SECTION         reduce using rule 169 (pos_insts -> QUOTED_STRING .)
    TEXT            reduce using rule 169 (pos_insts -> QUOTED_STRING .)
    TYPE_SYNONYM    reduce using rule 169 (pos_insts -> QUOTED_STRING .)
    TYPEDECL        reduce using rule 169 (pos_insts -> QUOTED_STRING .)
    END             reduce using rule 169 (pos_insts -> QUOTED_STRING .)
    OPENING         reduce using rule 169 (pos_insts -> QUOTED_STRING .)
    BEGIN           reduce using rule 169 (pos_insts -> QUOTED_STRING .)
    UNDERSCORE      shift and go to state 106
    DOT             shift and go to state 107
    ID              shift and go to state 102
    QUOTED_STRING   shift and go to state 108
    GREEK           shift and go to state 109

    pos_insts                      shift and go to state 164

state 109

    (170) pos_insts -> GREEK .
    (175) pos_insts -> GREEK . pos_insts
    (166) pos_insts -> . UNDERSCORE
    (167) pos_insts -> . DOT
    (168) pos_insts -> . ID
    (169) pos_insts -> . QUOTED_STRING
    (170) pos_insts -> . GREEK
    (171) pos_insts -> . UNDERSCORE pos_insts
    (172) pos_insts -> . DOT pos_insts
    (173) pos_insts -> . ID pos_insts
    (174) pos_insts -> . QUOTED_STRING pos_insts
    (175) pos_insts -> . GREEK pos_insts

    PLUS            reduce using rule 170 (pos_insts -> GREEK .)
    FOR             reduce using rule 170 (pos_insts -> GREEK .)
    AXIOMATIZATION  reduce using rule 170 (pos_insts -> GREEK .)
    FUN             reduce using rule 170 (pos_insts -> GREEK .)
    FUNCTION        reduce using rule 170 (pos_insts -> GREEK .)
    INTERPRETATION  reduce using rule 170 (pos_insts -> GREEK .)
    LEMMA           reduce using rule 170 (pos_insts -> GREEK .)
    LOCALE          reduce using rule 170 (pos_insts -> GREEK .)
    METHOD          reduce using rule 170 (pos_insts -> GREEK .)
    SECTION         reduce using rule 170 (pos_insts -> GREEK .)
    TEXT            reduce using rule 170 (pos_insts -> GREEK .)
    TYPE_SYNONYM    reduce using rule 170 (pos_insts -> GREEK .)
    TYPEDECL        reduce using rule 170 (pos_insts -> GREEK .)
    END             reduce using rule 170 (pos_insts -> GREEK .)
    OPENING         reduce using rule 170 (pos_insts -> GREEK .)
    BEGIN           reduce using rule 170 (pos_insts -> GREEK .)
    UNDERSCORE      shift and go to state 106
    DOT             shift and go to state 107
    ID              shift and go to state 102
    QUOTED_STRING   shift and go to state 108
    GREEK           shift and go to state 109

    pos_insts                      shift and go to state 165

state 110

    (176) name_insts -> WHERE . name_insts_list
    (177) name_insts_list -> . ID EQUALS ID
    (178) name_insts_list -> . ID EQUALS QUOTED_STRING
    (179) name_insts_list -> . ID EQUALS ID name_insts_list
    (180) name_insts_list -> . ID EQUALS QUOTED_STRING name_insts_list

    ID              shift and go to state 167

    name_insts_list                shift and go to state 166

state 111

    (160) instance -> qualifier COLON . ID pos_insts
    (161) instance -> qualifier COLON . ID name_insts

    ID              shift and go to state 168


state 112

    (165) qualifier -> QUOTED_STRING QUESTION_MARK .

    COLON           reduce using rule 165 (qualifier -> QUOTED_STRING QUESTION_MARK .)


state 113

    (45) lemma_block -> LEMMA ID COLON . assumes_block shows_clause lemma_proof_block
    (49) assumes_block -> . ASSUMES assumptions_list

    ASSUMES         shift and go to state 170

    assumes_block                  shift and go to state 169

state 114

    (182) locale_block -> LOCALE ID BEGIN . content END
    (10) content -> . statement content
    (11) content -> . empty
    (12) statement -> . axiomatization_block
    (13) statement -> . fun_block
    (14) statement -> . interpretation_block
    (15) statement -> . lemma_block
    (16) statement -> . locale_block
    (17) statement -> . method_block
    (18) statement -> . section_block
    (19) statement -> . text_block
    (20) statement -> . type_synonym
    (21) statement -> . typedecl
    (261) empty -> .
    (144) axiomatization_block -> . AXIOMATIZATION
    (145) axiomatization_block -> . AXIOMATIZATION vars
    (146) axiomatization_block -> . AXIOMATIZATION WHERE axiomatization
    (147) axiomatization_block -> . AXIOMATIZATION vars WHERE axiomatization
    (238) fun_block -> . FUN specification
    (239) fun_block -> . FUNCTION specification
    (240) fun_block -> . FUN opts specification
    (241) fun_block -> . FUNCTION opts specification
    (216) interpretation_block -> . INTERPRETATION locale_expr
    (45) lemma_block -> . LEMMA ID COLON assumes_block shows_clause lemma_proof_block
    (181) locale_block -> . LOCALE ID
    (182) locale_block -> . LOCALE ID BEGIN content END
    (183) locale_block -> . LOCALE ID comment_block BEGIN content END
    (184) locale_block -> . LOCALE ID EQ locale
    (185) locale_block -> . LOCALE ID EQ locale BEGIN content END
    (22) method_block -> . METHOD method_name EQUALS instruction
    (251) section_block -> . SECTION CARTOUCHE
    (252) text_block -> . TEXT CARTOUCHE
    (219) type_synonym -> . TYPE_SYNONYM typespec EQUALS ID
    (220) type_synonym -> . TYPE_SYNONYM typespec EQUALS ID mixfix
    (217) typedecl -> . TYPEDECL typespec
    (218) typedecl -> . TYPEDECL typespec mixfix

    END             reduce using rule 261 (empty -> .)
    AXIOMATIZATION  shift and go to state 33
    FUN             shift and go to state 34
    FUNCTION        shift and go to state 35
    INTERPRETATION  shift and go to state 36
    LEMMA           shift and go to state 37
    LOCALE          shift and go to state 38
    METHOD          shift and go to state 39
    SECTION         shift and go to state 6
    TEXT            shift and go to state 7
    TYPE_SYNONYM    shift and go to state 40
    TYPEDECL        shift and go to state 41

    content                        shift and go to state 171
    statement                      shift and go to state 21
    empty                          shift and go to state 22
    axiomatization_block           shift and go to state 23
    fun_block                      shift and go to state 24
    interpretation_block           shift and go to state 25
    lemma_block                    shift and go to state 26
    locale_block                   shift and go to state 27
    method_block                   shift and go to state 28
    section_block                  shift and go to state 29
    text_block                     shift and go to state 30
    type_synonym                   shift and go to state 31
    typedecl                       shift and go to state 32

state 115

    (183) locale_block -> LOCALE ID comment_block . BEGIN content END

    BEGIN           shift and go to state 172


state 116

    (184) locale_block -> LOCALE ID EQ . locale
    (185) locale_block -> LOCALE ID EQ . locale BEGIN content END
    (186) locale -> . context_elem_list
    (187) locale -> . opening
    (188) locale -> . opening PLUS context_elem_list
    (189) locale -> . locale_expr
    (190) locale -> . locale opening
    (191) locale -> . locale opening PLUS context_elem_list
    (192) locale -> . locale_expr opening PLUS context_elem_list
    (193) context_elem_list -> . context_elem
    (194) context_elem_list -> . context_elem context_elem_list
    (143) opening -> . OPENING names_list
    (153) locale_expr -> . instance_list
    (154) locale_expr -> . instance_list for_fixes
    (195) context_elem -> . FIXES vars
    (196) context_elem -> . CONSTRAINS name_type_list
    (197) context_elem -> . ASSUMES prop_list
    (198) context_elem -> . DEFINES defines_list
    (199) context_elem -> . NOTES notes_list
    (155) instance_list -> . instance
    (156) instance_list -> . instance PLUS instance_list
    (157) instance -> . ID
    (158) instance -> . ID pos_insts
    (159) instance -> . ID name_insts
    (160) instance -> . qualifier COLON ID pos_insts
    (161) instance -> . qualifier COLON ID name_insts
    (162) qualifier -> . ID
    (163) qualifier -> . QUOTED_STRING
    (164) qualifier -> . ID QUESTION_MARK
    (165) qualifier -> . QUOTED_STRING QUESTION_MARK

    OPENING         shift and go to state 178
    FIXES           shift and go to state 179
    CONSTRAINS      shift and go to state 180
    ASSUMES         shift and go to state 181
    DEFINES         shift and go to state 182
    NOTES           shift and go to state 183
    ID              shift and go to state 61
    QUOTED_STRING   shift and go to state 63

    locale                         shift and go to state 173
    context_elem_list              shift and go to state 174
    opening                        shift and go to state 175
    locale_expr                    shift and go to state 176
    context_elem                   shift and go to state 177
    instance_list                  shift and go to state 59
    instance                       shift and go to state 60
    qualifier                      shift and go to state 62

state 117

    (253) comment_block -> COMMENT_CARTOUCHE . CARTOUCHE

    CARTOUCHE       shift and go to state 184


state 118

    (22) method_block -> METHOD method_name EQUALS . instruction
    (24) instruction -> . single_instruction
    (25) instruction -> . single_instruction instruction_modifier
    (26) instruction -> . single_instruction instruction_modifier COMMA instruction
    (27) instruction -> . single_instruction SEMICOLON instruction
    (28) instruction -> . single_instruction COMMA instruction
    (29) instruction -> . LEFT_PAREN instruction RIGHT_PAREN
    (30) instruction -> . LEFT_PAREN instruction RIGHT_PAREN instruction_modifier
    (33) single_instruction -> . ID
    (34) single_instruction -> . ID method_args
    (35) single_instruction -> . LEFT_PAREN ID method_args RIGHT_PAREN
    (36) single_instruction -> . LEFT_PAREN ID method_args RIGHT_PAREN instruction_modifier

    LEFT_PAREN      shift and go to state 187
    ID              shift and go to state 188

    instruction                    shift and go to state 185
    single_instruction             shift and go to state 186

state 119

    (219) type_synonym -> TYPE_SYNONYM typespec EQUALS . ID
    (220) type_synonym -> TYPE_SYNONYM typespec EQUALS . ID mixfix

    ID              shift and go to state 189


state 120

    (80) typearg -> ID COLON . COLON ID

    COLON           shift and go to state 190


state 121

    (78) typespec -> typeargs ID .

    EQUALS          reduce using rule 78 (typespec -> typeargs ID .)
    LEFT_PAREN      reduce using rule 78 (typespec -> typeargs ID .)
    BINDER          reduce using rule 78 (typespec -> typeargs ID .)
    STRUCTURE       reduce using rule 78 (typespec -> typeargs ID .)
    AXIOMATIZATION  reduce using rule 78 (typespec -> typeargs ID .)
    FUN             reduce using rule 78 (typespec -> typeargs ID .)
    FUNCTION        reduce using rule 78 (typespec -> typeargs ID .)
    INTERPRETATION  reduce using rule 78 (typespec -> typeargs ID .)
    LEMMA           reduce using rule 78 (typespec -> typeargs ID .)
    LOCALE          reduce using rule 78 (typespec -> typeargs ID .)
    METHOD          reduce using rule 78 (typespec -> typeargs ID .)
    SECTION         reduce using rule 78 (typespec -> typeargs ID .)
    TEXT            reduce using rule 78 (typespec -> typeargs ID .)
    TYPE_SYNONYM    reduce using rule 78 (typespec -> typeargs ID .)
    TYPEDECL        reduce using rule 78 (typespec -> typeargs ID .)
    END             reduce using rule 78 (typespec -> typeargs ID .)


state 122

    (82) typeargs -> typearg COMMA . typeargs
    (81) typeargs -> . typearg
    (82) typeargs -> . typearg COMMA typeargs
    (83) typeargs -> . LEFT_PAREN typeargs RIGHT_PAREN
    (79) typearg -> . ID
    (80) typearg -> . ID COLON COLON ID

    LEFT_PAREN      shift and go to state 72
    ID              shift and go to state 124

    typearg                        shift and go to state 71
    typeargs                       shift and go to state 191

state 123

    (83) typeargs -> LEFT_PAREN typeargs . RIGHT_PAREN

    RIGHT_PAREN     shift and go to state 192


state 124

    (79) typearg -> ID .
    (80) typearg -> ID . COLON COLON ID

    COMMA           reduce using rule 79 (typearg -> ID .)
    RIGHT_PAREN     reduce using rule 79 (typearg -> ID .)
    ID              reduce using rule 79 (typearg -> ID .)
    COLON           shift and go to state 120


state 125

    (218) typedecl -> TYPEDECL typespec mixfix .

    AXIOMATIZATION  reduce using rule 218 (typedecl -> TYPEDECL typespec mixfix .)
    FUN             reduce using rule 218 (typedecl -> TYPEDECL typespec mixfix .)
    FUNCTION        reduce using rule 218 (typedecl -> TYPEDECL typespec mixfix .)
    INTERPRETATION  reduce using rule 218 (typedecl -> TYPEDECL typespec mixfix .)
    LEMMA           reduce using rule 218 (typedecl -> TYPEDECL typespec mixfix .)
    LOCALE          reduce using rule 218 (typedecl -> TYPEDECL typespec mixfix .)
    METHOD          reduce using rule 218 (typedecl -> TYPEDECL typespec mixfix .)
    SECTION         reduce using rule 218 (typedecl -> TYPEDECL typespec mixfix .)
    TEXT            reduce using rule 218 (typedecl -> TYPEDECL typespec mixfix .)
    TYPE_SYNONYM    reduce using rule 218 (typedecl -> TYPEDECL typespec mixfix .)
    TYPEDECL        reduce using rule 218 (typedecl -> TYPEDECL typespec mixfix .)
    END             reduce using rule 218 (typedecl -> TYPEDECL typespec mixfix .)


state 126

    (147) axiomatization_block -> AXIOMATIZATION vars WHERE axiomatization .

    AXIOMATIZATION  reduce using rule 147 (axiomatization_block -> AXIOMATIZATION vars WHERE axiomatization .)
    FUN             reduce using rule 147 (axiomatization_block -> AXIOMATIZATION vars WHERE axiomatization .)
    FUNCTION        reduce using rule 147 (axiomatization_block -> AXIOMATIZATION vars WHERE axiomatization .)
    INTERPRETATION  reduce using rule 147 (axiomatization_block -> AXIOMATIZATION vars WHERE axiomatization .)
    LEMMA           reduce using rule 147 (axiomatization_block -> AXIOMATIZATION vars WHERE axiomatization .)
    LOCALE          reduce using rule 147 (axiomatization_block -> AXIOMATIZATION vars WHERE axiomatization .)
    METHOD          reduce using rule 147 (axiomatization_block -> AXIOMATIZATION vars WHERE axiomatization .)
    SECTION         reduce using rule 147 (axiomatization_block -> AXIOMATIZATION vars WHERE axiomatization .)
    TEXT            reduce using rule 147 (axiomatization_block -> AXIOMATIZATION vars WHERE axiomatization .)
    TYPE_SYNONYM    reduce using rule 147 (axiomatization_block -> AXIOMATIZATION vars WHERE axiomatization .)
    TYPEDECL        reduce using rule 147 (axiomatization_block -> AXIOMATIZATION vars WHERE axiomatization .)
    END             reduce using rule 147 (axiomatization_block -> AXIOMATIZATION vars WHERE axiomatization .)


state 127

    (148) axiomatization -> axiomatization_header spec_prems . for_fixes
    (128) for_fixes -> . FOR vars

    FOR             shift and go to state 100

    for_fixes                      shift and go to state 193

state 128

    (137) spec_prems -> empty .

    FOR             reduce using rule 137 (spec_prems -> empty .)
    PIPE            reduce using rule 137 (spec_prems -> empty .)
    AXIOMATIZATION  reduce using rule 137 (spec_prems -> empty .)
    FUN             reduce using rule 137 (spec_prems -> empty .)
    FUNCTION        reduce using rule 137 (spec_prems -> empty .)
    INTERPRETATION  reduce using rule 137 (spec_prems -> empty .)
    LEMMA           reduce using rule 137 (spec_prems -> empty .)
    LOCALE          reduce using rule 137 (spec_prems -> empty .)
    METHOD          reduce using rule 137 (spec_prems -> empty .)
    SECTION         reduce using rule 137 (spec_prems -> empty .)
    TEXT            reduce using rule 137 (spec_prems -> empty .)
    TYPE_SYNONYM    reduce using rule 137 (spec_prems -> empty .)
    TYPEDECL        reduce using rule 137 (spec_prems -> empty .)
    END             reduce using rule 137 (spec_prems -> empty .)


state 129

    (138) spec_prems -> IF . prop_list
    (139) prop_list -> . ID
    (140) prop_list -> . ID prop_list
    (141) prop_list -> . ID AND prop_list

    ID              shift and go to state 195

    prop_list                      shift and go to state 194

state 130

    (149) axiomatization_header -> thmdecl ID .
    (151) axiomatization_header -> thmdecl ID . AND axiomatization_header

    IF              reduce using rule 149 (axiomatization_header -> thmdecl ID .)
    FOR             reduce using rule 149 (axiomatization_header -> thmdecl ID .)
    AND             shift and go to state 196


state 131

    (150) axiomatization_header -> thmdecl QUOTED_STRING .
    (152) axiomatization_header -> thmdecl QUOTED_STRING . AND axiomatization_header

    IF              reduce using rule 150 (axiomatization_header -> thmdecl QUOTED_STRING .)
    FOR             reduce using rule 150 (axiomatization_header -> thmdecl QUOTED_STRING .)
    AND             shift and go to state 197


state 132

    (115) thmbind -> ID attributes .

    COLON           reduce using rule 115 (thmbind -> ID attributes .)


state 133

    (107) thmdecl -> thmbind COLON .

    ID              reduce using rule 107 (thmdecl -> thmbind COLON .)
    QUOTED_STRING   reduce using rule 107 (thmdecl -> thmbind COLON .)


state 134

    (117) attributes -> LEFT_BRACKET attributes_list . RIGHT_BRACKET

    RIGHT_BRACKET   shift and go to state 198


state 135

    (118) attributes_list -> empty .

    RIGHT_BRACKET   reduce using rule 118 (attributes_list -> empty .)


state 136

    (119) attributes_list -> attribute .
    (120) attributes_list -> attribute . COMMA attributes_list

    RIGHT_BRACKET   reduce using rule 119 (attributes_list -> attribute .)
    COMMA           shift and go to state 199


state 137

    (121) attribute -> ID . args
    (122) args -> . empty
    (123) args -> . arg
    (124) args -> . arg args
    (261) empty -> .
    (125) arg -> . ID
    (126) arg -> . LEFT_PAREN args RIGHT_PAREN
    (127) arg -> . LEFT_BRACKET args RIGHT_BRACKET

    COMMA           reduce using rule 261 (empty -> .)
    RIGHT_BRACKET   reduce using rule 261 (empty -> .)
    ID              shift and go to state 200
    LEFT_PAREN      shift and go to state 204
    LEFT_BRACKET    shift and go to state 205

    args                           shift and go to state 201
    empty                          shift and go to state 202
    arg                            shift and go to state 203

state 138

    (85) vars -> var AND vars .

    WHERE           reduce using rule 85 (vars -> var AND vars .)
    AXIOMATIZATION  reduce using rule 85 (vars -> var AND vars .)
    FUN             reduce using rule 85 (vars -> var AND vars .)
    FUNCTION        reduce using rule 85 (vars -> var AND vars .)
    INTERPRETATION  reduce using rule 85 (vars -> var AND vars .)
    LEMMA           reduce using rule 85 (vars -> var AND vars .)
    LOCALE          reduce using rule 85 (vars -> var AND vars .)
    METHOD          reduce using rule 85 (vars -> var AND vars .)
    SECTION         reduce using rule 85 (vars -> var AND vars .)
    TEXT            reduce using rule 85 (vars -> var AND vars .)
    TYPE_SYNONYM    reduce using rule 85 (vars -> var AND vars .)
    TYPEDECL        reduce using rule 85 (vars -> var AND vars .)
    END             reduce using rule 85 (vars -> var AND vars .)
    OPENING         reduce using rule 85 (vars -> var AND vars .)
    BEGIN           reduce using rule 85 (vars -> var AND vars .)
    PIPE            reduce using rule 85 (vars -> var AND vars .)
    FIXES           reduce using rule 85 (vars -> var AND vars .)
    CONSTRAINS      reduce using rule 85 (vars -> var AND vars .)
    ASSUMES         reduce using rule 85 (vars -> var AND vars .)
    DEFINES         reduce using rule 85 (vars -> var AND vars .)
    NOTES           reduce using rule 85 (vars -> var AND vars .)


state 139

    (91) var -> names COLON COLON . ID
    (92) var -> names COLON COLON . QUOTED_STRING

    ID              shift and go to state 206
    QUOTED_STRING   shift and go to state 207


state 140

    (87) var -> ID COLON COLON . ID
    (89) var -> ID COLON COLON . QUOTED_STRING
    (94) var -> ID COLON COLON . ID mixfix
    (96) var -> ID COLON COLON . QUOTED_STRING mixfix

    ID              shift and go to state 208
    QUOTED_STRING   shift and go to state 209


state 141

    (98) names -> ID .
    (99) names -> ID . AND names

  ! shift/reduce conflict for AND resolved as shift
    COLON           reduce using rule 98 (names -> ID .)
    WHERE           reduce using rule 98 (names -> ID .)
    AXIOMATIZATION  reduce using rule 98 (names -> ID .)
    FUN             reduce using rule 98 (names -> ID .)
    FUNCTION        reduce using rule 98 (names -> ID .)
    INTERPRETATION  reduce using rule 98 (names -> ID .)
    LEMMA           reduce using rule 98 (names -> ID .)
    LOCALE          reduce using rule 98 (names -> ID .)
    METHOD          reduce using rule 98 (names -> ID .)
    SECTION         reduce using rule 98 (names -> ID .)
    TEXT            reduce using rule 98 (names -> ID .)
    TYPE_SYNONYM    reduce using rule 98 (names -> ID .)
    TYPEDECL        reduce using rule 98 (names -> ID .)
    END             reduce using rule 98 (names -> ID .)
    OPENING         reduce using rule 98 (names -> ID .)
    BEGIN           reduce using rule 98 (names -> ID .)
    PIPE            reduce using rule 98 (names -> ID .)
    FIXES           reduce using rule 98 (names -> ID .)
    CONSTRAINS      reduce using rule 98 (names -> ID .)
    ASSUMES         reduce using rule 98 (names -> ID .)
    DEFINES         reduce using rule 98 (names -> ID .)
    NOTES           reduce using rule 98 (names -> ID .)
    PLUS            reduce using rule 98 (names -> ID .)
    AND             shift and go to state 86

  ! AND             [ reduce using rule 98 (names -> ID .) ]


state 142

    (99) names -> ID AND names .

    COLON           reduce using rule 99 (names -> ID AND names .)
    AND             reduce using rule 99 (names -> ID AND names .)
    WHERE           reduce using rule 99 (names -> ID AND names .)
    AXIOMATIZATION  reduce using rule 99 (names -> ID AND names .)
    FUN             reduce using rule 99 (names -> ID AND names .)
    FUNCTION        reduce using rule 99 (names -> ID AND names .)
    INTERPRETATION  reduce using rule 99 (names -> ID AND names .)
    LEMMA           reduce using rule 99 (names -> ID AND names .)
    LOCALE          reduce using rule 99 (names -> ID AND names .)
    METHOD          reduce using rule 99 (names -> ID AND names .)
    SECTION         reduce using rule 99 (names -> ID AND names .)
    TEXT            reduce using rule 99 (names -> ID AND names .)
    TYPE_SYNONYM    reduce using rule 99 (names -> ID AND names .)
    TYPEDECL        reduce using rule 99 (names -> ID AND names .)
    END             reduce using rule 99 (names -> ID AND names .)
    OPENING         reduce using rule 99 (names -> ID AND names .)
    BEGIN           reduce using rule 99 (names -> ID AND names .)
    PIPE            reduce using rule 99 (names -> ID AND names .)
    FIXES           reduce using rule 99 (names -> ID AND names .)
    CONSTRAINS      reduce using rule 99 (names -> ID AND names .)
    ASSUMES         reduce using rule 99 (names -> ID AND names .)
    DEFINES         reduce using rule 99 (names -> ID AND names .)
    NOTES           reduce using rule 99 (names -> ID AND names .)
    PLUS            reduce using rule 99 (names -> ID AND names .)


state 143

    (221) mixfix -> LEFT_PAREN template . RIGHT_PAREN
    (222) mixfix -> LEFT_PAREN template . prios RIGHT_PAREN
    (223) mixfix -> LEFT_PAREN template . NAT RIGHT_PAREN
    (224) mixfix -> LEFT_PAREN template . prios NAT RIGHT_PAREN
    (233) prios -> . LEFT_BRACKET nat_list RIGHT_BRACKET

    RIGHT_PAREN     shift and go to state 210
    NAT             shift and go to state 212
    LEFT_BRACKET    shift and go to state 213

    prios                          shift and go to state 211

state 144

    (225) mixfix -> LEFT_PAREN INFIX . template NAT RIGHT_PAREN
    (231) template -> . QUOTED_STRING
    (232) template -> . CARTOUCHE

    QUOTED_STRING   shift and go to state 147
    CARTOUCHE       shift and go to state 148

    template                       shift and go to state 214

state 145

    (226) mixfix -> LEFT_PAREN INFIXL . template NAT RIGHT_PAREN
    (231) template -> . QUOTED_STRING
    (232) template -> . CARTOUCHE

    QUOTED_STRING   shift and go to state 147
    CARTOUCHE       shift and go to state 148

    template                       shift and go to state 215

state 146

    (227) mixfix -> LEFT_PAREN INFIXR . template NAT RIGHT_PAREN
    (231) template -> . QUOTED_STRING
    (232) template -> . CARTOUCHE

    QUOTED_STRING   shift and go to state 147
    CARTOUCHE       shift and go to state 148

    template                       shift and go to state 216

state 147

    (231) template -> QUOTED_STRING .

    RIGHT_PAREN     reduce using rule 231 (template -> QUOTED_STRING .)
    NAT             reduce using rule 231 (template -> QUOTED_STRING .)
    LEFT_BRACKET    reduce using rule 231 (template -> QUOTED_STRING .)


state 148

    (232) template -> CARTOUCHE .

    RIGHT_PAREN     reduce using rule 232 (template -> CARTOUCHE .)
    NAT             reduce using rule 232 (template -> CARTOUCHE .)
    LEFT_BRACKET    reduce using rule 232 (template -> CARTOUCHE .)


state 149

    (228) mixfix -> BINDER template . NAT RIGHT_PAREN
    (229) mixfix -> BINDER template . prio NAT RIGHT_PAREN
    (234) prio -> . LEFT_BRACKET NAT RIGHT_BRACKET

    NAT             shift and go to state 217
    LEFT_BRACKET    shift and go to state 219

    prio                           shift and go to state 218

state 150

    (88) var -> GREEK COLON COLON . ID
    (90) var -> GREEK COLON COLON . QUOTED_STRING
    (95) var -> GREEK COLON COLON . ID mixfix
    (97) var -> GREEK COLON COLON . QUOTED_STRING mixfix

    ID              shift and go to state 220
    QUOTED_STRING   shift and go to state 221


state 151

    (142) specification -> vars WHERE multi_specs .

    AXIOMATIZATION  reduce using rule 142 (specification -> vars WHERE multi_specs .)
    FUN             reduce using rule 142 (specification -> vars WHERE multi_specs .)
    FUNCTION        reduce using rule 142 (specification -> vars WHERE multi_specs .)
    INTERPRETATION  reduce using rule 142 (specification -> vars WHERE multi_specs .)
    LEMMA           reduce using rule 142 (specification -> vars WHERE multi_specs .)
    LOCALE          reduce using rule 142 (specification -> vars WHERE multi_specs .)
    METHOD          reduce using rule 142 (specification -> vars WHERE multi_specs .)
    SECTION         reduce using rule 142 (specification -> vars WHERE multi_specs .)
    TEXT            reduce using rule 142 (specification -> vars WHERE multi_specs .)
    TYPE_SYNONYM    reduce using rule 142 (specification -> vars WHERE multi_specs .)
    TYPEDECL        reduce using rule 142 (specification -> vars WHERE multi_specs .)
    END             reduce using rule 142 (specification -> vars WHERE multi_specs .)


state 152

    (129) multi_specs -> structured_spec .
    (130) multi_specs -> structured_spec . PIPE multi_specs

    AXIOMATIZATION  reduce using rule 129 (multi_specs -> structured_spec .)
    FUN             reduce using rule 129 (multi_specs -> structured_spec .)
    FUNCTION        reduce using rule 129 (multi_specs -> structured_spec .)
    INTERPRETATION  reduce using rule 129 (multi_specs -> structured_spec .)
    LEMMA           reduce using rule 129 (multi_specs -> structured_spec .)
    LOCALE          reduce using rule 129 (multi_specs -> structured_spec .)
    METHOD          reduce using rule 129 (multi_specs -> structured_spec .)
    SECTION         reduce using rule 129 (multi_specs -> structured_spec .)
    TEXT            reduce using rule 129 (multi_specs -> structured_spec .)
    TYPE_SYNONYM    reduce using rule 129 (multi_specs -> structured_spec .)
    TYPEDECL        reduce using rule 129 (multi_specs -> structured_spec .)
    END             reduce using rule 129 (multi_specs -> structured_spec .)
    PIPE            shift and go to state 222


state 153

    (131) structured_spec -> ID . spec_prems
    (132) structured_spec -> ID . spec_prems for_fixes
    (114) thmbind -> ID .
    (115) thmbind -> ID . attributes
    (137) spec_prems -> . empty
    (138) spec_prems -> . IF prop_list
    (117) attributes -> . LEFT_BRACKET attributes_list RIGHT_BRACKET
    (261) empty -> .

    COLON           reduce using rule 114 (thmbind -> ID .)
    IF              shift and go to state 129
    LEFT_BRACKET    shift and go to state 81
    FOR             reduce using rule 261 (empty -> .)
    PIPE            reduce using rule 261 (empty -> .)
    AXIOMATIZATION  reduce using rule 261 (empty -> .)
    FUN             reduce using rule 261 (empty -> .)
    FUNCTION        reduce using rule 261 (empty -> .)
    INTERPRETATION  reduce using rule 261 (empty -> .)
    LEMMA           reduce using rule 261 (empty -> .)
    LOCALE          reduce using rule 261 (empty -> .)
    METHOD          reduce using rule 261 (empty -> .)
    SECTION         reduce using rule 261 (empty -> .)
    TEXT            reduce using rule 261 (empty -> .)
    TYPE_SYNONYM    reduce using rule 261 (empty -> .)
    TYPEDECL        reduce using rule 261 (empty -> .)
    END             reduce using rule 261 (empty -> .)

    spec_prems                     shift and go to state 223
    attributes                     shift and go to state 132
    empty                          shift and go to state 128

state 154

    (133) structured_spec -> QUOTED_STRING . spec_prems
    (134) structured_spec -> QUOTED_STRING . spec_prems for_fixes
    (137) spec_prems -> . empty
    (138) spec_prems -> . IF prop_list
    (261) empty -> .

    IF              shift and go to state 129
    FOR             reduce using rule 261 (empty -> .)
    PIPE            reduce using rule 261 (empty -> .)
    AXIOMATIZATION  reduce using rule 261 (empty -> .)
    FUN             reduce using rule 261 (empty -> .)
    FUNCTION        reduce using rule 261 (empty -> .)
    INTERPRETATION  reduce using rule 261 (empty -> .)
    LEMMA           reduce using rule 261 (empty -> .)
    LOCALE          reduce using rule 261 (empty -> .)
    METHOD          reduce using rule 261 (empty -> .)
    SECTION         reduce using rule 261 (empty -> .)
    TEXT            reduce using rule 261 (empty -> .)
    TYPE_SYNONYM    reduce using rule 261 (empty -> .)
    TYPEDECL        reduce using rule 261 (empty -> .)
    END             reduce using rule 261 (empty -> .)

    spec_prems                     shift and go to state 224
    empty                          shift and go to state 128

state 155

    (135) structured_spec -> thmdecl . ID spec_prems for_fixes
    (136) structured_spec -> thmdecl . QUOTED_STRING spec_prems for_fixes

    ID              shift and go to state 225
    QUOTED_STRING   shift and go to state 226


state 156

    (242) opts -> LEFT_PAREN opt_list RIGHT_PAREN .

    ID              reduce using rule 242 (opts -> LEFT_PAREN opt_list RIGHT_PAREN .)
    GREEK           reduce using rule 242 (opts -> LEFT_PAREN opt_list RIGHT_PAREN .)


state 157

    (245) opt_list -> sequential COMMA . opt_list
    (243) opt_list -> . sequential
    (244) opt_list -> . domintros
    (245) opt_list -> . sequential COMMA opt_list
    (246) opt_list -> . domintros COMMA opt_list
    (247) sequential -> . ID
    (248) sequential -> . QUOTED_STRING
    (249) domintros -> . ID
    (250) domintros -> . QUOTED_STRING

    ID              shift and go to state 96
    QUOTED_STRING   shift and go to state 97

    sequential                     shift and go to state 94
    opt_list                       shift and go to state 227
    domintros                      shift and go to state 95

state 158

    (246) opt_list -> domintros COMMA . opt_list
    (243) opt_list -> . sequential
    (244) opt_list -> . domintros
    (245) opt_list -> . sequential COMMA opt_list
    (246) opt_list -> . domintros COMMA opt_list
    (247) sequential -> . ID
    (248) sequential -> . QUOTED_STRING
    (249) domintros -> . ID
    (250) domintros -> . QUOTED_STRING

    ID              shift and go to state 96
    QUOTED_STRING   shift and go to state 97

    domintros                      shift and go to state 95
    opt_list                       shift and go to state 228
    sequential                     shift and go to state 94

state 159

    (128) for_fixes -> FOR vars .

    AXIOMATIZATION  reduce using rule 128 (for_fixes -> FOR vars .)
    FUN             reduce using rule 128 (for_fixes -> FOR vars .)
    FUNCTION        reduce using rule 128 (for_fixes -> FOR vars .)
    INTERPRETATION  reduce using rule 128 (for_fixes -> FOR vars .)
    LEMMA           reduce using rule 128 (for_fixes -> FOR vars .)
    LOCALE          reduce using rule 128 (for_fixes -> FOR vars .)
    METHOD          reduce using rule 128 (for_fixes -> FOR vars .)
    SECTION         reduce using rule 128 (for_fixes -> FOR vars .)
    TEXT            reduce using rule 128 (for_fixes -> FOR vars .)
    TYPE_SYNONYM    reduce using rule 128 (for_fixes -> FOR vars .)
    TYPEDECL        reduce using rule 128 (for_fixes -> FOR vars .)
    END             reduce using rule 128 (for_fixes -> FOR vars .)
    OPENING         reduce using rule 128 (for_fixes -> FOR vars .)
    BEGIN           reduce using rule 128 (for_fixes -> FOR vars .)
    PIPE            reduce using rule 128 (for_fixes -> FOR vars .)


state 160

    (156) instance_list -> instance PLUS instance_list .

    FOR             reduce using rule 156 (instance_list -> instance PLUS instance_list .)
    AXIOMATIZATION  reduce using rule 156 (instance_list -> instance PLUS instance_list .)
    FUN             reduce using rule 156 (instance_list -> instance PLUS instance_list .)
    FUNCTION        reduce using rule 156 (instance_list -> instance PLUS instance_list .)
    INTERPRETATION  reduce using rule 156 (instance_list -> instance PLUS instance_list .)
    LEMMA           reduce using rule 156 (instance_list -> instance PLUS instance_list .)
    LOCALE          reduce using rule 156 (instance_list -> instance PLUS instance_list .)
    METHOD          reduce using rule 156 (instance_list -> instance PLUS instance_list .)
    SECTION         reduce using rule 156 (instance_list -> instance PLUS instance_list .)
    TEXT            reduce using rule 156 (instance_list -> instance PLUS instance_list .)
    TYPE_SYNONYM    reduce using rule 156 (instance_list -> instance PLUS instance_list .)
    TYPEDECL        reduce using rule 156 (instance_list -> instance PLUS instance_list .)
    END             reduce using rule 156 (instance_list -> instance PLUS instance_list .)
    OPENING         reduce using rule 156 (instance_list -> instance PLUS instance_list .)
    BEGIN           reduce using rule 156 (instance_list -> instance PLUS instance_list .)


state 161

    (173) pos_insts -> ID pos_insts .

    PLUS            reduce using rule 173 (pos_insts -> ID pos_insts .)
    FOR             reduce using rule 173 (pos_insts -> ID pos_insts .)
    AXIOMATIZATION  reduce using rule 173 (pos_insts -> ID pos_insts .)
    FUN             reduce using rule 173 (pos_insts -> ID pos_insts .)
    FUNCTION        reduce using rule 173 (pos_insts -> ID pos_insts .)
    INTERPRETATION  reduce using rule 173 (pos_insts -> ID pos_insts .)
    LEMMA           reduce using rule 173 (pos_insts -> ID pos_insts .)
    LOCALE          reduce using rule 173 (pos_insts -> ID pos_insts .)
    METHOD          reduce using rule 173 (pos_insts -> ID pos_insts .)
    SECTION         reduce using rule 173 (pos_insts -> ID pos_insts .)
    TEXT            reduce using rule 173 (pos_insts -> ID pos_insts .)
    TYPE_SYNONYM    reduce using rule 173 (pos_insts -> ID pos_insts .)
    TYPEDECL        reduce using rule 173 (pos_insts -> ID pos_insts .)
    END             reduce using rule 173 (pos_insts -> ID pos_insts .)
    OPENING         reduce using rule 173 (pos_insts -> ID pos_insts .)
    BEGIN           reduce using rule 173 (pos_insts -> ID pos_insts .)


state 162

    (171) pos_insts -> UNDERSCORE pos_insts .

    PLUS            reduce using rule 171 (pos_insts -> UNDERSCORE pos_insts .)
    FOR             reduce using rule 171 (pos_insts -> UNDERSCORE pos_insts .)
    AXIOMATIZATION  reduce using rule 171 (pos_insts -> UNDERSCORE pos_insts .)
    FUN             reduce using rule 171 (pos_insts -> UNDERSCORE pos_insts .)
    FUNCTION        reduce using rule 171 (pos_insts -> UNDERSCORE pos_insts .)
    INTERPRETATION  reduce using rule 171 (pos_insts -> UNDERSCORE pos_insts .)
    LEMMA           reduce using rule 171 (pos_insts -> UNDERSCORE pos_insts .)
    LOCALE          reduce using rule 171 (pos_insts -> UNDERSCORE pos_insts .)
    METHOD          reduce using rule 171 (pos_insts -> UNDERSCORE pos_insts .)
    SECTION         reduce using rule 171 (pos_insts -> UNDERSCORE pos_insts .)
    TEXT            reduce using rule 171 (pos_insts -> UNDERSCORE pos_insts .)
    TYPE_SYNONYM    reduce using rule 171 (pos_insts -> UNDERSCORE pos_insts .)
    TYPEDECL        reduce using rule 171 (pos_insts -> UNDERSCORE pos_insts .)
    END             reduce using rule 171 (pos_insts -> UNDERSCORE pos_insts .)
    OPENING         reduce using rule 171 (pos_insts -> UNDERSCORE pos_insts .)
    BEGIN           reduce using rule 171 (pos_insts -> UNDERSCORE pos_insts .)


state 163

    (172) pos_insts -> DOT pos_insts .

    PLUS            reduce using rule 172 (pos_insts -> DOT pos_insts .)
    FOR             reduce using rule 172 (pos_insts -> DOT pos_insts .)
    AXIOMATIZATION  reduce using rule 172 (pos_insts -> DOT pos_insts .)
    FUN             reduce using rule 172 (pos_insts -> DOT pos_insts .)
    FUNCTION        reduce using rule 172 (pos_insts -> DOT pos_insts .)
    INTERPRETATION  reduce using rule 172 (pos_insts -> DOT pos_insts .)
    LEMMA           reduce using rule 172 (pos_insts -> DOT pos_insts .)
    LOCALE          reduce using rule 172 (pos_insts -> DOT pos_insts .)
    METHOD          reduce using rule 172 (pos_insts -> DOT pos_insts .)
    SECTION         reduce using rule 172 (pos_insts -> DOT pos_insts .)
    TEXT            reduce using rule 172 (pos_insts -> DOT pos_insts .)
    TYPE_SYNONYM    reduce using rule 172 (pos_insts -> DOT pos_insts .)
    TYPEDECL        reduce using rule 172 (pos_insts -> DOT pos_insts .)
    END             reduce using rule 172 (pos_insts -> DOT pos_insts .)
    OPENING         reduce using rule 172 (pos_insts -> DOT pos_insts .)
    BEGIN           reduce using rule 172 (pos_insts -> DOT pos_insts .)


state 164

    (174) pos_insts -> QUOTED_STRING pos_insts .

    PLUS            reduce using rule 174 (pos_insts -> QUOTED_STRING pos_insts .)
    FOR             reduce using rule 174 (pos_insts -> QUOTED_STRING pos_insts .)
    AXIOMATIZATION  reduce using rule 174 (pos_insts -> QUOTED_STRING pos_insts .)
    FUN             reduce using rule 174 (pos_insts -> QUOTED_STRING pos_insts .)
    FUNCTION        reduce using rule 174 (pos_insts -> QUOTED_STRING pos_insts .)
    INTERPRETATION  reduce using rule 174 (pos_insts -> QUOTED_STRING pos_insts .)
    LEMMA           reduce using rule 174 (pos_insts -> QUOTED_STRING pos_insts .)
    LOCALE          reduce using rule 174 (pos_insts -> QUOTED_STRING pos_insts .)
    METHOD          reduce using rule 174 (pos_insts -> QUOTED_STRING pos_insts .)
    SECTION         reduce using rule 174 (pos_insts -> QUOTED_STRING pos_insts .)
    TEXT            reduce using rule 174 (pos_insts -> QUOTED_STRING pos_insts .)
    TYPE_SYNONYM    reduce using rule 174 (pos_insts -> QUOTED_STRING pos_insts .)
    TYPEDECL        reduce using rule 174 (pos_insts -> QUOTED_STRING pos_insts .)
    END             reduce using rule 174 (pos_insts -> QUOTED_STRING pos_insts .)
    OPENING         reduce using rule 174 (pos_insts -> QUOTED_STRING pos_insts .)
    BEGIN           reduce using rule 174 (pos_insts -> QUOTED_STRING pos_insts .)


state 165

    (175) pos_insts -> GREEK pos_insts .

    PLUS            reduce using rule 175 (pos_insts -> GREEK pos_insts .)
    FOR             reduce using rule 175 (pos_insts -> GREEK pos_insts .)
    AXIOMATIZATION  reduce using rule 175 (pos_insts -> GREEK pos_insts .)
    FUN             reduce using rule 175 (pos_insts -> GREEK pos_insts .)
    FUNCTION        reduce using rule 175 (pos_insts -> GREEK pos_insts .)
    INTERPRETATION  reduce using rule 175 (pos_insts -> GREEK pos_insts .)
    LEMMA           reduce using rule 175 (pos_insts -> GREEK pos_insts .)
    LOCALE          reduce using rule 175 (pos_insts -> GREEK pos_insts .)
    METHOD          reduce using rule 175 (pos_insts -> GREEK pos_insts .)
    SECTION         reduce using rule 175 (pos_insts -> GREEK pos_insts .)
    TEXT            reduce using rule 175 (pos_insts -> GREEK pos_insts .)
    TYPE_SYNONYM    reduce using rule 175 (pos_insts -> GREEK pos_insts .)
    TYPEDECL        reduce using rule 175 (pos_insts -> GREEK pos_insts .)
    END             reduce using rule 175 (pos_insts -> GREEK pos_insts .)
    OPENING         reduce using rule 175 (pos_insts -> GREEK pos_insts .)
    BEGIN           reduce using rule 175 (pos_insts -> GREEK pos_insts .)


state 166

    (176) name_insts -> WHERE name_insts_list .

    PLUS            reduce using rule 176 (name_insts -> WHERE name_insts_list .)
    FOR             reduce using rule 176 (name_insts -> WHERE name_insts_list .)
    AXIOMATIZATION  reduce using rule 176 (name_insts -> WHERE name_insts_list .)
    FUN             reduce using rule 176 (name_insts -> WHERE name_insts_list .)
    FUNCTION        reduce using rule 176 (name_insts -> WHERE name_insts_list .)
    INTERPRETATION  reduce using rule 176 (name_insts -> WHERE name_insts_list .)
    LEMMA           reduce using rule 176 (name_insts -> WHERE name_insts_list .)
    LOCALE          reduce using rule 176 (name_insts -> WHERE name_insts_list .)
    METHOD          reduce using rule 176 (name_insts -> WHERE name_insts_list .)
    SECTION         reduce using rule 176 (name_insts -> WHERE name_insts_list .)
    TEXT            reduce using rule 176 (name_insts -> WHERE name_insts_list .)
    TYPE_SYNONYM    reduce using rule 176 (name_insts -> WHERE name_insts_list .)
    TYPEDECL        reduce using rule 176 (name_insts -> WHERE name_insts_list .)
    END             reduce using rule 176 (name_insts -> WHERE name_insts_list .)
    OPENING         reduce using rule 176 (name_insts -> WHERE name_insts_list .)
    BEGIN           reduce using rule 176 (name_insts -> WHERE name_insts_list .)


state 167

    (177) name_insts_list -> ID . EQUALS ID
    (178) name_insts_list -> ID . EQUALS QUOTED_STRING
    (179) name_insts_list -> ID . EQUALS ID name_insts_list
    (180) name_insts_list -> ID . EQUALS QUOTED_STRING name_insts_list

    EQUALS          shift and go to state 229


state 168

    (160) instance -> qualifier COLON ID . pos_insts
    (161) instance -> qualifier COLON ID . name_insts
    (166) pos_insts -> . UNDERSCORE
    (167) pos_insts -> . DOT
    (168) pos_insts -> . ID
    (169) pos_insts -> . QUOTED_STRING
    (170) pos_insts -> . GREEK
    (171) pos_insts -> . UNDERSCORE pos_insts
    (172) pos_insts -> . DOT pos_insts
    (173) pos_insts -> . ID pos_insts
    (174) pos_insts -> . QUOTED_STRING pos_insts
    (175) pos_insts -> . GREEK pos_insts
    (176) name_insts -> . WHERE name_insts_list

    UNDERSCORE      shift and go to state 106
    DOT             shift and go to state 107
    ID              shift and go to state 102
    QUOTED_STRING   shift and go to state 108
    GREEK           shift and go to state 109
    WHERE           shift and go to state 110

    pos_insts                      shift and go to state 230
    name_insts                     shift and go to state 231

state 169

    (45) lemma_block -> LEMMA ID COLON assumes_block . shows_clause lemma_proof_block
    (54) shows_clause -> . SHOWS QUOTED_STRING

    SHOWS           shift and go to state 233

    shows_clause                   shift and go to state 232

state 170

    (49) assumes_block -> ASSUMES . assumptions_list
    (50) assumptions_list -> . assumption AND assumptions_list
    (51) assumptions_list -> . assumption
    (52) assumption -> . QUOTED_STRING
    (53) assumption -> . NAT COLON QUOTED_STRING

    QUOTED_STRING   shift and go to state 236
    NAT             shift and go to state 237

    assumptions_list               shift and go to state 234
    assumption                     shift and go to state 235

state 171

    (182) locale_block -> LOCALE ID BEGIN content . END

    END             shift and go to state 238


state 172

    (183) locale_block -> LOCALE ID comment_block BEGIN . content END
    (10) content -> . statement content
    (11) content -> . empty
    (12) statement -> . axiomatization_block
    (13) statement -> . fun_block
    (14) statement -> . interpretation_block
    (15) statement -> . lemma_block
    (16) statement -> . locale_block
    (17) statement -> . method_block
    (18) statement -> . section_block
    (19) statement -> . text_block
    (20) statement -> . type_synonym
    (21) statement -> . typedecl
    (261) empty -> .
    (144) axiomatization_block -> . AXIOMATIZATION
    (145) axiomatization_block -> . AXIOMATIZATION vars
    (146) axiomatization_block -> . AXIOMATIZATION WHERE axiomatization
    (147) axiomatization_block -> . AXIOMATIZATION vars WHERE axiomatization
    (238) fun_block -> . FUN specification
    (239) fun_block -> . FUNCTION specification
    (240) fun_block -> . FUN opts specification
    (241) fun_block -> . FUNCTION opts specification
    (216) interpretation_block -> . INTERPRETATION locale_expr
    (45) lemma_block -> . LEMMA ID COLON assumes_block shows_clause lemma_proof_block
    (181) locale_block -> . LOCALE ID
    (182) locale_block -> . LOCALE ID BEGIN content END
    (183) locale_block -> . LOCALE ID comment_block BEGIN content END
    (184) locale_block -> . LOCALE ID EQ locale
    (185) locale_block -> . LOCALE ID EQ locale BEGIN content END
    (22) method_block -> . METHOD method_name EQUALS instruction
    (251) section_block -> . SECTION CARTOUCHE
    (252) text_block -> . TEXT CARTOUCHE
    (219) type_synonym -> . TYPE_SYNONYM typespec EQUALS ID
    (220) type_synonym -> . TYPE_SYNONYM typespec EQUALS ID mixfix
    (217) typedecl -> . TYPEDECL typespec
    (218) typedecl -> . TYPEDECL typespec mixfix

    END             reduce using rule 261 (empty -> .)
    AXIOMATIZATION  shift and go to state 33
    FUN             shift and go to state 34
    FUNCTION        shift and go to state 35
    INTERPRETATION  shift and go to state 36
    LEMMA           shift and go to state 37
    LOCALE          shift and go to state 38
    METHOD          shift and go to state 39
    SECTION         shift and go to state 6
    TEXT            shift and go to state 7
    TYPE_SYNONYM    shift and go to state 40
    TYPEDECL        shift and go to state 41

    content                        shift and go to state 239
    statement                      shift and go to state 21
    empty                          shift and go to state 22
    axiomatization_block           shift and go to state 23
    fun_block                      shift and go to state 24
    interpretation_block           shift and go to state 25
    lemma_block                    shift and go to state 26
    locale_block                   shift and go to state 27
    method_block                   shift and go to state 28
    section_block                  shift and go to state 29
    text_block                     shift and go to state 30
    type_synonym                   shift and go to state 31
    typedecl                       shift and go to state 32

state 173

    (184) locale_block -> LOCALE ID EQ locale .
    (185) locale_block -> LOCALE ID EQ locale . BEGIN content END
    (190) locale -> locale . opening
    (191) locale -> locale . opening PLUS context_elem_list
    (143) opening -> . OPENING names_list

    AXIOMATIZATION  reduce using rule 184 (locale_block -> LOCALE ID EQ locale .)
    FUN             reduce using rule 184 (locale_block -> LOCALE ID EQ locale .)
    FUNCTION        reduce using rule 184 (locale_block -> LOCALE ID EQ locale .)
    INTERPRETATION  reduce using rule 184 (locale_block -> LOCALE ID EQ locale .)
    LEMMA           reduce using rule 184 (locale_block -> LOCALE ID EQ locale .)
    LOCALE          reduce using rule 184 (locale_block -> LOCALE ID EQ locale .)
    METHOD          reduce using rule 184 (locale_block -> LOCALE ID EQ locale .)
    SECTION         reduce using rule 184 (locale_block -> LOCALE ID EQ locale .)
    TEXT            reduce using rule 184 (locale_block -> LOCALE ID EQ locale .)
    TYPE_SYNONYM    reduce using rule 184 (locale_block -> LOCALE ID EQ locale .)
    TYPEDECL        reduce using rule 184 (locale_block -> LOCALE ID EQ locale .)
    END             reduce using rule 184 (locale_block -> LOCALE ID EQ locale .)
    BEGIN           shift and go to state 240
    OPENING         shift and go to state 178

    opening                        shift and go to state 241

state 174

    (186) locale -> context_elem_list .

    BEGIN           reduce using rule 186 (locale -> context_elem_list .)
    OPENING         reduce using rule 186 (locale -> context_elem_list .)
    AXIOMATIZATION  reduce using rule 186 (locale -> context_elem_list .)
    FUN             reduce using rule 186 (locale -> context_elem_list .)
    FUNCTION        reduce using rule 186 (locale -> context_elem_list .)
    INTERPRETATION  reduce using rule 186 (locale -> context_elem_list .)
    LEMMA           reduce using rule 186 (locale -> context_elem_list .)
    LOCALE          reduce using rule 186 (locale -> context_elem_list .)
    METHOD          reduce using rule 186 (locale -> context_elem_list .)
    SECTION         reduce using rule 186 (locale -> context_elem_list .)
    TEXT            reduce using rule 186 (locale -> context_elem_list .)
    TYPE_SYNONYM    reduce using rule 186 (locale -> context_elem_list .)
    TYPEDECL        reduce using rule 186 (locale -> context_elem_list .)
    END             reduce using rule 186 (locale -> context_elem_list .)


state 175

    (187) locale -> opening .
    (188) locale -> opening . PLUS context_elem_list

    BEGIN           reduce using rule 187 (locale -> opening .)
    OPENING         reduce using rule 187 (locale -> opening .)
    AXIOMATIZATION  reduce using rule 187 (locale -> opening .)
    FUN             reduce using rule 187 (locale -> opening .)
    FUNCTION        reduce using rule 187 (locale -> opening .)
    INTERPRETATION  reduce using rule 187 (locale -> opening .)
    LEMMA           reduce using rule 187 (locale -> opening .)
    LOCALE          reduce using rule 187 (locale -> opening .)
    METHOD          reduce using rule 187 (locale -> opening .)
    SECTION         reduce using rule 187 (locale -> opening .)
    TEXT            reduce using rule 187 (locale -> opening .)
    TYPE_SYNONYM    reduce using rule 187 (locale -> opening .)
    TYPEDECL        reduce using rule 187 (locale -> opening .)
    END             reduce using rule 187 (locale -> opening .)
    PLUS            shift and go to state 242


state 176

    (189) locale -> locale_expr .
    (192) locale -> locale_expr . opening PLUS context_elem_list
    (143) opening -> . OPENING names_list

  ! shift/reduce conflict for OPENING resolved as shift
    BEGIN           reduce using rule 189 (locale -> locale_expr .)
    AXIOMATIZATION  reduce using rule 189 (locale -> locale_expr .)
    FUN             reduce using rule 189 (locale -> locale_expr .)
    FUNCTION        reduce using rule 189 (locale -> locale_expr .)
    INTERPRETATION  reduce using rule 189 (locale -> locale_expr .)
    LEMMA           reduce using rule 189 (locale -> locale_expr .)
    LOCALE          reduce using rule 189 (locale -> locale_expr .)
    METHOD          reduce using rule 189 (locale -> locale_expr .)
    SECTION         reduce using rule 189 (locale -> locale_expr .)
    TEXT            reduce using rule 189 (locale -> locale_expr .)
    TYPE_SYNONYM    reduce using rule 189 (locale -> locale_expr .)
    TYPEDECL        reduce using rule 189 (locale -> locale_expr .)
    END             reduce using rule 189 (locale -> locale_expr .)
    OPENING         shift and go to state 178

  ! OPENING         [ reduce using rule 189 (locale -> locale_expr .) ]

    opening                        shift and go to state 243

state 177

    (193) context_elem_list -> context_elem .
    (194) context_elem_list -> context_elem . context_elem_list
    (193) context_elem_list -> . context_elem
    (194) context_elem_list -> . context_elem context_elem_list
    (195) context_elem -> . FIXES vars
    (196) context_elem -> . CONSTRAINS name_type_list
    (197) context_elem -> . ASSUMES prop_list
    (198) context_elem -> . DEFINES defines_list
    (199) context_elem -> . NOTES notes_list

    BEGIN           reduce using rule 193 (context_elem_list -> context_elem .)
    OPENING         reduce using rule 193 (context_elem_list -> context_elem .)
    AXIOMATIZATION  reduce using rule 193 (context_elem_list -> context_elem .)
    FUN             reduce using rule 193 (context_elem_list -> context_elem .)
    FUNCTION        reduce using rule 193 (context_elem_list -> context_elem .)
    INTERPRETATION  reduce using rule 193 (context_elem_list -> context_elem .)
    LEMMA           reduce using rule 193 (context_elem_list -> context_elem .)
    LOCALE          reduce using rule 193 (context_elem_list -> context_elem .)
    METHOD          reduce using rule 193 (context_elem_list -> context_elem .)
    SECTION         reduce using rule 193 (context_elem_list -> context_elem .)
    TEXT            reduce using rule 193 (context_elem_list -> context_elem .)
    TYPE_SYNONYM    reduce using rule 193 (context_elem_list -> context_elem .)
    TYPEDECL        reduce using rule 193 (context_elem_list -> context_elem .)
    END             reduce using rule 193 (context_elem_list -> context_elem .)
    FIXES           shift and go to state 179
    CONSTRAINS      shift and go to state 180
    ASSUMES         shift and go to state 181
    DEFINES         shift and go to state 182
    NOTES           shift and go to state 183

    context_elem                   shift and go to state 177
    context_elem_list              shift and go to state 244

state 178

    (143) opening -> OPENING . names_list
    (100) names_list -> . ID
    (101) names_list -> . ID names

    ID              shift and go to state 246

    names_list                     shift and go to state 245

state 179

    (195) context_elem -> FIXES . vars
    (84) vars -> . var
    (85) vars -> . var AND vars
    (86) var -> . names
    (87) var -> . ID COLON COLON ID
    (88) var -> . GREEK COLON COLON ID
    (89) var -> . ID COLON COLON QUOTED_STRING
    (90) var -> . GREEK COLON COLON QUOTED_STRING
    (91) var -> . names COLON COLON ID
    (92) var -> . names COLON COLON QUOTED_STRING
    (93) var -> . ID mixfix
    (94) var -> . ID COLON COLON ID mixfix
    (95) var -> . GREEK COLON COLON ID mixfix
    (96) var -> . ID COLON COLON QUOTED_STRING mixfix
    (97) var -> . GREEK COLON COLON QUOTED_STRING mixfix
    (98) names -> . ID
    (99) names -> . ID AND names

    ID              shift and go to state 50
    GREEK           shift and go to state 51

    vars                           shift and go to state 247
    var                            shift and go to state 48
    names                          shift and go to state 49

state 180

    (196) context_elem -> CONSTRAINS . name_type_list
    (200) name_type_list -> . ID COLON COLON ID
    (201) name_type_list -> . ID COLON COLON ID AND name_type_list

    ID              shift and go to state 249

    name_type_list                 shift and go to state 248

state 181

    (197) context_elem -> ASSUMES . prop_list
    (139) prop_list -> . ID
    (140) prop_list -> . ID prop_list
    (141) prop_list -> . ID AND prop_list

    ID              shift and go to state 195

    prop_list                      shift and go to state 250

state 182

    (198) context_elem -> DEFINES . defines_list
    (202) defines_list -> . defines_list_element
    (203) defines_list -> . defines_list_element AND defines_list
    (204) defines_list_element -> . ID
    (205) defines_list_element -> . QUOTED_STRING
    (206) defines_list_element -> . thmdecl ID
    (207) defines_list_element -> . thmdecl QUOTED_STRING
    (208) defines_list_element -> . ID prop_pat
    (209) defines_list_element -> . QUOTED_STRING prop_pat
    (210) defines_list_element -> . thmdecl ID prop_pat
    (211) defines_list_element -> . thmdecl QUOTED_STRING prop_pat
    (107) thmdecl -> . thmbind COLON
    (114) thmbind -> . ID
    (115) thmbind -> . ID attributes
    (116) thmbind -> . attributes
    (117) attributes -> . LEFT_BRACKET attributes_list RIGHT_BRACKET

    ID              shift and go to state 253
    QUOTED_STRING   shift and go to state 254
    LEFT_BRACKET    shift and go to state 81

    defines_list                   shift and go to state 251
    defines_list_element           shift and go to state 252
    thmdecl                        shift and go to state 255
    thmbind                        shift and go to state 79
    attributes                     shift and go to state 80

state 183

    (199) context_elem -> NOTES . notes_list
    (212) notes_list -> . notes_list_element
    (213) notes_list -> . notes_list_element AND notes_list
    (214) notes_list_element -> . thmdef thms
    (215) notes_list_element -> . thms
    (108) thmdef -> . thmbind EQ
    (112) thms -> . thm
    (113) thms -> . thm thms
    (114) thmbind -> . ID
    (115) thmbind -> . ID attributes
    (116) thmbind -> . attributes
    (109) thm -> . ID attributes
    (110) thm -> . ID
    (111) thm -> . attributes
    (117) attributes -> . LEFT_BRACKET attributes_list RIGHT_BRACKET

    ID              shift and go to state 262
    LEFT_BRACKET    shift and go to state 81

    notes_list                     shift and go to state 256
    notes_list_element             shift and go to state 257
    thmdef                         shift and go to state 258
    thms                           shift and go to state 259
    thmbind                        shift and go to state 260
    thm                            shift and go to state 261
    attributes                     shift and go to state 263

state 184

    (253) comment_block -> COMMENT_CARTOUCHE CARTOUCHE .

    BEGIN           reduce using rule 253 (comment_block -> COMMENT_CARTOUCHE CARTOUCHE .)


state 185

    (22) method_block -> METHOD method_name EQUALS instruction .

    AXIOMATIZATION  reduce using rule 22 (method_block -> METHOD method_name EQUALS instruction .)
    FUN             reduce using rule 22 (method_block -> METHOD method_name EQUALS instruction .)
    FUNCTION        reduce using rule 22 (method_block -> METHOD method_name EQUALS instruction .)
    INTERPRETATION  reduce using rule 22 (method_block -> METHOD method_name EQUALS instruction .)
    LEMMA           reduce using rule 22 (method_block -> METHOD method_name EQUALS instruction .)
    LOCALE          reduce using rule 22 (method_block -> METHOD method_name EQUALS instruction .)
    METHOD          reduce using rule 22 (method_block -> METHOD method_name EQUALS instruction .)
    SECTION         reduce using rule 22 (method_block -> METHOD method_name EQUALS instruction .)
    TEXT            reduce using rule 22 (method_block -> METHOD method_name EQUALS instruction .)
    TYPE_SYNONYM    reduce using rule 22 (method_block -> METHOD method_name EQUALS instruction .)
    TYPEDECL        reduce using rule 22 (method_block -> METHOD method_name EQUALS instruction .)
    END             reduce using rule 22 (method_block -> METHOD method_name EQUALS instruction .)


state 186

    (24) instruction -> single_instruction .
    (25) instruction -> single_instruction . instruction_modifier
    (26) instruction -> single_instruction . instruction_modifier COMMA instruction
    (27) instruction -> single_instruction . SEMICOLON instruction
    (28) instruction -> single_instruction . COMMA instruction
    (31) instruction_modifier -> . PLUS
    (32) instruction_modifier -> . QUESTION_MARK

    AXIOMATIZATION  reduce using rule 24 (instruction -> single_instruction .)
    FUN             reduce using rule 24 (instruction -> single_instruction .)
    FUNCTION        reduce using rule 24 (instruction -> single_instruction .)
    INTERPRETATION  reduce using rule 24 (instruction -> single_instruction .)
    LEMMA           reduce using rule 24 (instruction -> single_instruction .)
    LOCALE          reduce using rule 24 (instruction -> single_instruction .)
    METHOD          reduce using rule 24 (instruction -> single_instruction .)
    SECTION         reduce using rule 24 (instruction -> single_instruction .)
    TEXT            reduce using rule 24 (instruction -> single_instruction .)
    TYPE_SYNONYM    reduce using rule 24 (instruction -> single_instruction .)
    TYPEDECL        reduce using rule 24 (instruction -> single_instruction .)
    END             reduce using rule 24 (instruction -> single_instruction .)
    RIGHT_PAREN     reduce using rule 24 (instruction -> single_instruction .)
    APPLY           reduce using rule 24 (instruction -> single_instruction .)
    USING           reduce using rule 24 (instruction -> single_instruction .)
    BY              reduce using rule 24 (instruction -> single_instruction .)
    DONE            reduce using rule 24 (instruction -> single_instruction .)
    SORRY           reduce using rule 24 (instruction -> single_instruction .)
    SUBGOAL         reduce using rule 24 (instruction -> single_instruction .)
    SEMICOLON       shift and go to state 266
    COMMA           shift and go to state 265
    PLUS            shift and go to state 267
    QUESTION_MARK   shift and go to state 268

    instruction_modifier           shift and go to state 264

state 187

    (29) instruction -> LEFT_PAREN . instruction RIGHT_PAREN
    (30) instruction -> LEFT_PAREN . instruction RIGHT_PAREN instruction_modifier
    (35) single_instruction -> LEFT_PAREN . ID method_args RIGHT_PAREN
    (36) single_instruction -> LEFT_PAREN . ID method_args RIGHT_PAREN instruction_modifier
    (24) instruction -> . single_instruction
    (25) instruction -> . single_instruction instruction_modifier
    (26) instruction -> . single_instruction instruction_modifier COMMA instruction
    (27) instruction -> . single_instruction SEMICOLON instruction
    (28) instruction -> . single_instruction COMMA instruction
    (29) instruction -> . LEFT_PAREN instruction RIGHT_PAREN
    (30) instruction -> . LEFT_PAREN instruction RIGHT_PAREN instruction_modifier
    (33) single_instruction -> . ID
    (34) single_instruction -> . ID method_args
    (35) single_instruction -> . LEFT_PAREN ID method_args RIGHT_PAREN
    (36) single_instruction -> . LEFT_PAREN ID method_args RIGHT_PAREN instruction_modifier

    ID              shift and go to state 270
    LEFT_PAREN      shift and go to state 187

    instruction                    shift and go to state 269
    single_instruction             shift and go to state 186

state 188

    (33) single_instruction -> ID .
    (34) single_instruction -> ID . method_args
    (37) method_args -> . ID COLON method_arg method_args
    (38) method_args -> . method_arg method_args
    (39) method_args -> . empty
    (40) method_arg -> . ID
    (41) method_arg -> . ID LEFT_PAREN NAT RIGHT_PAREN
    (42) method_arg -> . ID DOT ID
    (43) method_arg -> . ID DOT ID LEFT_PAREN NAT RIGHT_PAREN
    (44) method_arg -> . QUOTED_STRING
    (261) empty -> .

  ! reduce/reduce conflict for SEMICOLON resolved using rule 33 (single_instruction -> ID .)
  ! reduce/reduce conflict for COMMA resolved using rule 33 (single_instruction -> ID .)
  ! reduce/reduce conflict for PLUS resolved using rule 33 (single_instruction -> ID .)
  ! reduce/reduce conflict for QUESTION_MARK resolved using rule 33 (single_instruction -> ID .)
  ! reduce/reduce conflict for AXIOMATIZATION resolved using rule 33 (single_instruction -> ID .)
  ! reduce/reduce conflict for FUN resolved using rule 33 (single_instruction -> ID .)
  ! reduce/reduce conflict for FUNCTION resolved using rule 33 (single_instruction -> ID .)
  ! reduce/reduce conflict for INTERPRETATION resolved using rule 33 (single_instruction -> ID .)
  ! reduce/reduce conflict for LEMMA resolved using rule 33 (single_instruction -> ID .)
  ! reduce/reduce conflict for LOCALE resolved using rule 33 (single_instruction -> ID .)
  ! reduce/reduce conflict for METHOD resolved using rule 33 (single_instruction -> ID .)
  ! reduce/reduce conflict for SECTION resolved using rule 33 (single_instruction -> ID .)
  ! reduce/reduce conflict for TEXT resolved using rule 33 (single_instruction -> ID .)
  ! reduce/reduce conflict for TYPE_SYNONYM resolved using rule 33 (single_instruction -> ID .)
  ! reduce/reduce conflict for TYPEDECL resolved using rule 33 (single_instruction -> ID .)
  ! reduce/reduce conflict for END resolved using rule 33 (single_instruction -> ID .)
  ! reduce/reduce conflict for RIGHT_PAREN resolved using rule 33 (single_instruction -> ID .)
  ! reduce/reduce conflict for APPLY resolved using rule 33 (single_instruction -> ID .)
  ! reduce/reduce conflict for USING resolved using rule 33 (single_instruction -> ID .)
  ! reduce/reduce conflict for BY resolved using rule 33 (single_instruction -> ID .)
  ! reduce/reduce conflict for DONE resolved using rule 33 (single_instruction -> ID .)
  ! reduce/reduce conflict for SORRY resolved using rule 33 (single_instruction -> ID .)
  ! reduce/reduce conflict for SUBGOAL resolved using rule 33 (single_instruction -> ID .)
    SEMICOLON       reduce using rule 33 (single_instruction -> ID .)
    COMMA           reduce using rule 33 (single_instruction -> ID .)
    PLUS            reduce using rule 33 (single_instruction -> ID .)
    QUESTION_MARK   reduce using rule 33 (single_instruction -> ID .)
    AXIOMATIZATION  reduce using rule 33 (single_instruction -> ID .)
    FUN             reduce using rule 33 (single_instruction -> ID .)
    FUNCTION        reduce using rule 33 (single_instruction -> ID .)
    INTERPRETATION  reduce using rule 33 (single_instruction -> ID .)
    LEMMA           reduce using rule 33 (single_instruction -> ID .)
    LOCALE          reduce using rule 33 (single_instruction -> ID .)
    METHOD          reduce using rule 33 (single_instruction -> ID .)
    SECTION         reduce using rule 33 (single_instruction -> ID .)
    TEXT            reduce using rule 33 (single_instruction -> ID .)
    TYPE_SYNONYM    reduce using rule 33 (single_instruction -> ID .)
    TYPEDECL        reduce using rule 33 (single_instruction -> ID .)
    END             reduce using rule 33 (single_instruction -> ID .)
    RIGHT_PAREN     reduce using rule 33 (single_instruction -> ID .)
    APPLY           reduce using rule 33 (single_instruction -> ID .)
    USING           reduce using rule 33 (single_instruction -> ID .)
    BY              reduce using rule 33 (single_instruction -> ID .)
    DONE            reduce using rule 33 (single_instruction -> ID .)
    SORRY           reduce using rule 33 (single_instruction -> ID .)
    SUBGOAL         reduce using rule 33 (single_instruction -> ID .)
    ID              shift and go to state 271
    QUOTED_STRING   shift and go to state 275

  ! SEMICOLON       [ reduce using rule 261 (empty -> .) ]
  ! COMMA           [ reduce using rule 261 (empty -> .) ]
  ! PLUS            [ reduce using rule 261 (empty -> .) ]
  ! QUESTION_MARK   [ reduce using rule 261 (empty -> .) ]
  ! AXIOMATIZATION  [ reduce using rule 261 (empty -> .) ]
  ! FUN             [ reduce using rule 261 (empty -> .) ]
  ! FUNCTION        [ reduce using rule 261 (empty -> .) ]
  ! INTERPRETATION  [ reduce using rule 261 (empty -> .) ]
  ! LEMMA           [ reduce using rule 261 (empty -> .) ]
  ! LOCALE          [ reduce using rule 261 (empty -> .) ]
  ! METHOD          [ reduce using rule 261 (empty -> .) ]
  ! SECTION         [ reduce using rule 261 (empty -> .) ]
  ! TEXT            [ reduce using rule 261 (empty -> .) ]
  ! TYPE_SYNONYM    [ reduce using rule 261 (empty -> .) ]
  ! TYPEDECL        [ reduce using rule 261 (empty -> .) ]
  ! END             [ reduce using rule 261 (empty -> .) ]
  ! RIGHT_PAREN     [ reduce using rule 261 (empty -> .) ]
  ! APPLY           [ reduce using rule 261 (empty -> .) ]
  ! USING           [ reduce using rule 261 (empty -> .) ]
  ! BY              [ reduce using rule 261 (empty -> .) ]
  ! DONE            [ reduce using rule 261 (empty -> .) ]
  ! SORRY           [ reduce using rule 261 (empty -> .) ]
  ! SUBGOAL         [ reduce using rule 261 (empty -> .) ]

    method_args                    shift and go to state 272
    method_arg                     shift and go to state 273
    empty                          shift and go to state 274

state 189

    (219) type_synonym -> TYPE_SYNONYM typespec EQUALS ID .
    (220) type_synonym -> TYPE_SYNONYM typespec EQUALS ID . mixfix
    (221) mixfix -> . LEFT_PAREN template RIGHT_PAREN
    (222) mixfix -> . LEFT_PAREN template prios RIGHT_PAREN
    (223) mixfix -> . LEFT_PAREN template NAT RIGHT_PAREN
    (224) mixfix -> . LEFT_PAREN template prios NAT RIGHT_PAREN
    (225) mixfix -> . LEFT_PAREN INFIX template NAT RIGHT_PAREN
    (226) mixfix -> . LEFT_PAREN INFIXL template NAT RIGHT_PAREN
    (227) mixfix -> . LEFT_PAREN INFIXR template NAT RIGHT_PAREN
    (228) mixfix -> . BINDER template NAT RIGHT_PAREN
    (229) mixfix -> . BINDER template prio NAT RIGHT_PAREN
    (230) mixfix -> . STRUCTURE

    AXIOMATIZATION  reduce using rule 219 (type_synonym -> TYPE_SYNONYM typespec EQUALS ID .)
    FUN             reduce using rule 219 (type_synonym -> TYPE_SYNONYM typespec EQUALS ID .)
    FUNCTION        reduce using rule 219 (type_synonym -> TYPE_SYNONYM typespec EQUALS ID .)
    INTERPRETATION  reduce using rule 219 (type_synonym -> TYPE_SYNONYM typespec EQUALS ID .)
    LEMMA           reduce using rule 219 (type_synonym -> TYPE_SYNONYM typespec EQUALS ID .)
    LOCALE          reduce using rule 219 (type_synonym -> TYPE_SYNONYM typespec EQUALS ID .)
    METHOD          reduce using rule 219 (type_synonym -> TYPE_SYNONYM typespec EQUALS ID .)
    SECTION         reduce using rule 219 (type_synonym -> TYPE_SYNONYM typespec EQUALS ID .)
    TEXT            reduce using rule 219 (type_synonym -> TYPE_SYNONYM typespec EQUALS ID .)
    TYPE_SYNONYM    reduce using rule 219 (type_synonym -> TYPE_SYNONYM typespec EQUALS ID .)
    TYPEDECL        reduce using rule 219 (type_synonym -> TYPE_SYNONYM typespec EQUALS ID .)
    END             reduce using rule 219 (type_synonym -> TYPE_SYNONYM typespec EQUALS ID .)
    LEFT_PAREN      shift and go to state 87
    BINDER          shift and go to state 88
    STRUCTURE       shift and go to state 89

    mixfix                         shift and go to state 276

state 190

    (80) typearg -> ID COLON COLON . ID

    ID              shift and go to state 277


state 191

    (82) typeargs -> typearg COMMA typeargs .

    ID              reduce using rule 82 (typeargs -> typearg COMMA typeargs .)
    RIGHT_PAREN     reduce using rule 82 (typeargs -> typearg COMMA typeargs .)


state 192

    (83) typeargs -> LEFT_PAREN typeargs RIGHT_PAREN .

    ID              reduce using rule 83 (typeargs -> LEFT_PAREN typeargs RIGHT_PAREN .)
    RIGHT_PAREN     reduce using rule 83 (typeargs -> LEFT_PAREN typeargs RIGHT_PAREN .)


state 193

    (148) axiomatization -> axiomatization_header spec_prems for_fixes .

    AXIOMATIZATION  reduce using rule 148 (axiomatization -> axiomatization_header spec_prems for_fixes .)
    FUN             reduce using rule 148 (axiomatization -> axiomatization_header spec_prems for_fixes .)
    FUNCTION        reduce using rule 148 (axiomatization -> axiomatization_header spec_prems for_fixes .)
    INTERPRETATION  reduce using rule 148 (axiomatization -> axiomatization_header spec_prems for_fixes .)
    LEMMA           reduce using rule 148 (axiomatization -> axiomatization_header spec_prems for_fixes .)
    LOCALE          reduce using rule 148 (axiomatization -> axiomatization_header spec_prems for_fixes .)
    METHOD          reduce using rule 148 (axiomatization -> axiomatization_header spec_prems for_fixes .)
    SECTION         reduce using rule 148 (axiomatization -> axiomatization_header spec_prems for_fixes .)
    TEXT            reduce using rule 148 (axiomatization -> axiomatization_header spec_prems for_fixes .)
    TYPE_SYNONYM    reduce using rule 148 (axiomatization -> axiomatization_header spec_prems for_fixes .)
    TYPEDECL        reduce using rule 148 (axiomatization -> axiomatization_header spec_prems for_fixes .)
    END             reduce using rule 148 (axiomatization -> axiomatization_header spec_prems for_fixes .)


state 194

    (138) spec_prems -> IF prop_list .

    FOR             reduce using rule 138 (spec_prems -> IF prop_list .)
    PIPE            reduce using rule 138 (spec_prems -> IF prop_list .)
    AXIOMATIZATION  reduce using rule 138 (spec_prems -> IF prop_list .)
    FUN             reduce using rule 138 (spec_prems -> IF prop_list .)
    FUNCTION        reduce using rule 138 (spec_prems -> IF prop_list .)
    INTERPRETATION  reduce using rule 138 (spec_prems -> IF prop_list .)
    LEMMA           reduce using rule 138 (spec_prems -> IF prop_list .)
    LOCALE          reduce using rule 138 (spec_prems -> IF prop_list .)
    METHOD          reduce using rule 138 (spec_prems -> IF prop_list .)
    SECTION         reduce using rule 138 (spec_prems -> IF prop_list .)
    TEXT            reduce using rule 138 (spec_prems -> IF prop_list .)
    TYPE_SYNONYM    reduce using rule 138 (spec_prems -> IF prop_list .)
    TYPEDECL        reduce using rule 138 (spec_prems -> IF prop_list .)
    END             reduce using rule 138 (spec_prems -> IF prop_list .)


state 195

    (139) prop_list -> ID .
    (140) prop_list -> ID . prop_list
    (141) prop_list -> ID . AND prop_list
    (139) prop_list -> . ID
    (140) prop_list -> . ID prop_list
    (141) prop_list -> . ID AND prop_list

    FOR             reduce using rule 139 (prop_list -> ID .)
    PIPE            reduce using rule 139 (prop_list -> ID .)
    AXIOMATIZATION  reduce using rule 139 (prop_list -> ID .)
    FUN             reduce using rule 139 (prop_list -> ID .)
    FUNCTION        reduce using rule 139 (prop_list -> ID .)
    INTERPRETATION  reduce using rule 139 (prop_list -> ID .)
    LEMMA           reduce using rule 139 (prop_list -> ID .)
    LOCALE          reduce using rule 139 (prop_list -> ID .)
    METHOD          reduce using rule 139 (prop_list -> ID .)
    SECTION         reduce using rule 139 (prop_list -> ID .)
    TEXT            reduce using rule 139 (prop_list -> ID .)
    TYPE_SYNONYM    reduce using rule 139 (prop_list -> ID .)
    TYPEDECL        reduce using rule 139 (prop_list -> ID .)
    END             reduce using rule 139 (prop_list -> ID .)
    FIXES           reduce using rule 139 (prop_list -> ID .)
    CONSTRAINS      reduce using rule 139 (prop_list -> ID .)
    ASSUMES         reduce using rule 139 (prop_list -> ID .)
    DEFINES         reduce using rule 139 (prop_list -> ID .)
    NOTES           reduce using rule 139 (prop_list -> ID .)
    BEGIN           reduce using rule 139 (prop_list -> ID .)
    OPENING         reduce using rule 139 (prop_list -> ID .)
    AND             shift and go to state 279
    ID              shift and go to state 195

    prop_list                      shift and go to state 278

state 196

    (151) axiomatization_header -> thmdecl ID AND . axiomatization_header
    (149) axiomatization_header -> . thmdecl ID
    (150) axiomatization_header -> . thmdecl QUOTED_STRING
    (151) axiomatization_header -> . thmdecl ID AND axiomatization_header
    (152) axiomatization_header -> . thmdecl QUOTED_STRING AND axiomatization_header
    (107) thmdecl -> . thmbind COLON
    (114) thmbind -> . ID
    (115) thmbind -> . ID attributes
    (116) thmbind -> . attributes
    (117) attributes -> . LEFT_BRACKET attributes_list RIGHT_BRACKET

    ID              shift and go to state 78
    LEFT_BRACKET    shift and go to state 81

    thmdecl                        shift and go to state 77
    axiomatization_header          shift and go to state 280
    thmbind                        shift and go to state 79
    attributes                     shift and go to state 80

state 197

    (152) axiomatization_header -> thmdecl QUOTED_STRING AND . axiomatization_header
    (149) axiomatization_header -> . thmdecl ID
    (150) axiomatization_header -> . thmdecl QUOTED_STRING
    (151) axiomatization_header -> . thmdecl ID AND axiomatization_header
    (152) axiomatization_header -> . thmdecl QUOTED_STRING AND axiomatization_header
    (107) thmdecl -> . thmbind COLON
    (114) thmbind -> . ID
    (115) thmbind -> . ID attributes
    (116) thmbind -> . attributes
    (117) attributes -> . LEFT_BRACKET attributes_list RIGHT_BRACKET

    ID              shift and go to state 78
    LEFT_BRACKET    shift and go to state 81

    thmdecl                        shift and go to state 77
    axiomatization_header          shift and go to state 281
    thmbind                        shift and go to state 79
    attributes                     shift and go to state 80

state 198

    (117) attributes -> LEFT_BRACKET attributes_list RIGHT_BRACKET .

    COLON           reduce using rule 117 (attributes -> LEFT_BRACKET attributes_list RIGHT_BRACKET .)
    EQ              reduce using rule 117 (attributes -> LEFT_BRACKET attributes_list RIGHT_BRACKET .)
    ID              reduce using rule 117 (attributes -> LEFT_BRACKET attributes_list RIGHT_BRACKET .)
    LEFT_BRACKET    reduce using rule 117 (attributes -> LEFT_BRACKET attributes_list RIGHT_BRACKET .)
    AND             reduce using rule 117 (attributes -> LEFT_BRACKET attributes_list RIGHT_BRACKET .)
    FIXES           reduce using rule 117 (attributes -> LEFT_BRACKET attributes_list RIGHT_BRACKET .)
    CONSTRAINS      reduce using rule 117 (attributes -> LEFT_BRACKET attributes_list RIGHT_BRACKET .)
    ASSUMES         reduce using rule 117 (attributes -> LEFT_BRACKET attributes_list RIGHT_BRACKET .)
    DEFINES         reduce using rule 117 (attributes -> LEFT_BRACKET attributes_list RIGHT_BRACKET .)
    NOTES           reduce using rule 117 (attributes -> LEFT_BRACKET attributes_list RIGHT_BRACKET .)
    BEGIN           reduce using rule 117 (attributes -> LEFT_BRACKET attributes_list RIGHT_BRACKET .)
    OPENING         reduce using rule 117 (attributes -> LEFT_BRACKET attributes_list RIGHT_BRACKET .)
    AXIOMATIZATION  reduce using rule 117 (attributes -> LEFT_BRACKET attributes_list RIGHT_BRACKET .)
    FUN             reduce using rule 117 (attributes -> LEFT_BRACKET attributes_list RIGHT_BRACKET .)
    FUNCTION        reduce using rule 117 (attributes -> LEFT_BRACKET attributes_list RIGHT_BRACKET .)
    INTERPRETATION  reduce using rule 117 (attributes -> LEFT_BRACKET attributes_list RIGHT_BRACKET .)
    LEMMA           reduce using rule 117 (attributes -> LEFT_BRACKET attributes_list RIGHT_BRACKET .)
    LOCALE          reduce using rule 117 (attributes -> LEFT_BRACKET attributes_list RIGHT_BRACKET .)
    METHOD          reduce using rule 117 (attributes -> LEFT_BRACKET attributes_list RIGHT_BRACKET .)
    SECTION         reduce using rule 117 (attributes -> LEFT_BRACKET attributes_list RIGHT_BRACKET .)
    TEXT            reduce using rule 117 (attributes -> LEFT_BRACKET attributes_list RIGHT_BRACKET .)
    TYPE_SYNONYM    reduce using rule 117 (attributes -> LEFT_BRACKET attributes_list RIGHT_BRACKET .)
    TYPEDECL        reduce using rule 117 (attributes -> LEFT_BRACKET attributes_list RIGHT_BRACKET .)
    END             reduce using rule 117 (attributes -> LEFT_BRACKET attributes_list RIGHT_BRACKET .)


state 199

    (120) attributes_list -> attribute COMMA . attributes_list
    (118) attributes_list -> . empty
    (119) attributes_list -> . attribute
    (120) attributes_list -> . attribute COMMA attributes_list
    (261) empty -> .
    (121) attribute -> . ID args

    RIGHT_BRACKET   reduce using rule 261 (empty -> .)
    ID              shift and go to state 137

    attribute                      shift and go to state 136
    attributes_list                shift and go to state 282
    empty                          shift and go to state 135

state 200

    (125) arg -> ID .

    ID              reduce using rule 125 (arg -> ID .)
    LEFT_PAREN      reduce using rule 125 (arg -> ID .)
    LEFT_BRACKET    reduce using rule 125 (arg -> ID .)
    COMMA           reduce using rule 125 (arg -> ID .)
    RIGHT_BRACKET   reduce using rule 125 (arg -> ID .)
    RIGHT_PAREN     reduce using rule 125 (arg -> ID .)


state 201

    (121) attribute -> ID args .

    COMMA           reduce using rule 121 (attribute -> ID args .)
    RIGHT_BRACKET   reduce using rule 121 (attribute -> ID args .)


state 202

    (122) args -> empty .

    COMMA           reduce using rule 122 (args -> empty .)
    RIGHT_BRACKET   reduce using rule 122 (args -> empty .)
    RIGHT_PAREN     reduce using rule 122 (args -> empty .)


state 203

    (123) args -> arg .
    (124) args -> arg . args
    (122) args -> . empty
    (123) args -> . arg
    (124) args -> . arg args
    (261) empty -> .
    (125) arg -> . ID
    (126) arg -> . LEFT_PAREN args RIGHT_PAREN
    (127) arg -> . LEFT_BRACKET args RIGHT_BRACKET

  ! reduce/reduce conflict for COMMA resolved using rule 123 (args -> arg .)
  ! reduce/reduce conflict for RIGHT_BRACKET resolved using rule 123 (args -> arg .)
  ! reduce/reduce conflict for RIGHT_PAREN resolved using rule 123 (args -> arg .)
    COMMA           reduce using rule 123 (args -> arg .)
    RIGHT_BRACKET   reduce using rule 123 (args -> arg .)
    RIGHT_PAREN     reduce using rule 123 (args -> arg .)
    ID              shift and go to state 200
    LEFT_PAREN      shift and go to state 204
    LEFT_BRACKET    shift and go to state 205

  ! COMMA           [ reduce using rule 261 (empty -> .) ]
  ! RIGHT_BRACKET   [ reduce using rule 261 (empty -> .) ]
  ! RIGHT_PAREN     [ reduce using rule 261 (empty -> .) ]

    arg                            shift and go to state 203
    args                           shift and go to state 283
    empty                          shift and go to state 202

state 204

    (126) arg -> LEFT_PAREN . args RIGHT_PAREN
    (122) args -> . empty
    (123) args -> . arg
    (124) args -> . arg args
    (261) empty -> .
    (125) arg -> . ID
    (126) arg -> . LEFT_PAREN args RIGHT_PAREN
    (127) arg -> . LEFT_BRACKET args RIGHT_BRACKET

    RIGHT_PAREN     reduce using rule 261 (empty -> .)
    ID              shift and go to state 200
    LEFT_PAREN      shift and go to state 204
    LEFT_BRACKET    shift and go to state 205

    args                           shift and go to state 284
    empty                          shift and go to state 202
    arg                            shift and go to state 203

state 205

    (127) arg -> LEFT_BRACKET . args RIGHT_BRACKET
    (122) args -> . empty
    (123) args -> . arg
    (124) args -> . arg args
    (261) empty -> .
    (125) arg -> . ID
    (126) arg -> . LEFT_PAREN args RIGHT_PAREN
    (127) arg -> . LEFT_BRACKET args RIGHT_BRACKET

    RIGHT_BRACKET   reduce using rule 261 (empty -> .)
    ID              shift and go to state 200
    LEFT_PAREN      shift and go to state 204
    LEFT_BRACKET    shift and go to state 205

    args                           shift and go to state 285
    empty                          shift and go to state 202
    arg                            shift and go to state 203

state 206

    (91) var -> names COLON COLON ID .

    AND             reduce using rule 91 (var -> names COLON COLON ID .)
    WHERE           reduce using rule 91 (var -> names COLON COLON ID .)
    AXIOMATIZATION  reduce using rule 91 (var -> names COLON COLON ID .)
    FUN             reduce using rule 91 (var -> names COLON COLON ID .)
    FUNCTION        reduce using rule 91 (var -> names COLON COLON ID .)
    INTERPRETATION  reduce using rule 91 (var -> names COLON COLON ID .)
    LEMMA           reduce using rule 91 (var -> names COLON COLON ID .)
    LOCALE          reduce using rule 91 (var -> names COLON COLON ID .)
    METHOD          reduce using rule 91 (var -> names COLON COLON ID .)
    SECTION         reduce using rule 91 (var -> names COLON COLON ID .)
    TEXT            reduce using rule 91 (var -> names COLON COLON ID .)
    TYPE_SYNONYM    reduce using rule 91 (var -> names COLON COLON ID .)
    TYPEDECL        reduce using rule 91 (var -> names COLON COLON ID .)
    END             reduce using rule 91 (var -> names COLON COLON ID .)
    OPENING         reduce using rule 91 (var -> names COLON COLON ID .)
    BEGIN           reduce using rule 91 (var -> names COLON COLON ID .)
    PIPE            reduce using rule 91 (var -> names COLON COLON ID .)
    FIXES           reduce using rule 91 (var -> names COLON COLON ID .)
    CONSTRAINS      reduce using rule 91 (var -> names COLON COLON ID .)
    ASSUMES         reduce using rule 91 (var -> names COLON COLON ID .)
    DEFINES         reduce using rule 91 (var -> names COLON COLON ID .)
    NOTES           reduce using rule 91 (var -> names COLON COLON ID .)


state 207

    (92) var -> names COLON COLON QUOTED_STRING .

    AND             reduce using rule 92 (var -> names COLON COLON QUOTED_STRING .)
    WHERE           reduce using rule 92 (var -> names COLON COLON QUOTED_STRING .)
    AXIOMATIZATION  reduce using rule 92 (var -> names COLON COLON QUOTED_STRING .)
    FUN             reduce using rule 92 (var -> names COLON COLON QUOTED_STRING .)
    FUNCTION        reduce using rule 92 (var -> names COLON COLON QUOTED_STRING .)
    INTERPRETATION  reduce using rule 92 (var -> names COLON COLON QUOTED_STRING .)
    LEMMA           reduce using rule 92 (var -> names COLON COLON QUOTED_STRING .)
    LOCALE          reduce using rule 92 (var -> names COLON COLON QUOTED_STRING .)
    METHOD          reduce using rule 92 (var -> names COLON COLON QUOTED_STRING .)
    SECTION         reduce using rule 92 (var -> names COLON COLON QUOTED_STRING .)
    TEXT            reduce using rule 92 (var -> names COLON COLON QUOTED_STRING .)
    TYPE_SYNONYM    reduce using rule 92 (var -> names COLON COLON QUOTED_STRING .)
    TYPEDECL        reduce using rule 92 (var -> names COLON COLON QUOTED_STRING .)
    END             reduce using rule 92 (var -> names COLON COLON QUOTED_STRING .)
    OPENING         reduce using rule 92 (var -> names COLON COLON QUOTED_STRING .)
    BEGIN           reduce using rule 92 (var -> names COLON COLON QUOTED_STRING .)
    PIPE            reduce using rule 92 (var -> names COLON COLON QUOTED_STRING .)
    FIXES           reduce using rule 92 (var -> names COLON COLON QUOTED_STRING .)
    CONSTRAINS      reduce using rule 92 (var -> names COLON COLON QUOTED_STRING .)
    ASSUMES         reduce using rule 92 (var -> names COLON COLON QUOTED_STRING .)
    DEFINES         reduce using rule 92 (var -> names COLON COLON QUOTED_STRING .)
    NOTES           reduce using rule 92 (var -> names COLON COLON QUOTED_STRING .)


state 208

    (87) var -> ID COLON COLON ID .
    (94) var -> ID COLON COLON ID . mixfix
    (221) mixfix -> . LEFT_PAREN template RIGHT_PAREN
    (222) mixfix -> . LEFT_PAREN template prios RIGHT_PAREN
    (223) mixfix -> . LEFT_PAREN template NAT RIGHT_PAREN
    (224) mixfix -> . LEFT_PAREN template prios NAT RIGHT_PAREN
    (225) mixfix -> . LEFT_PAREN INFIX template NAT RIGHT_PAREN
    (226) mixfix -> . LEFT_PAREN INFIXL template NAT RIGHT_PAREN
    (227) mixfix -> . LEFT_PAREN INFIXR template NAT RIGHT_PAREN
    (228) mixfix -> . BINDER template NAT RIGHT_PAREN
    (229) mixfix -> . BINDER template prio NAT RIGHT_PAREN
    (230) mixfix -> . STRUCTURE

    AND             reduce using rule 87 (var -> ID COLON COLON ID .)
    WHERE           reduce using rule 87 (var -> ID COLON COLON ID .)
    AXIOMATIZATION  reduce using rule 87 (var -> ID COLON COLON ID .)
    FUN             reduce using rule 87 (var -> ID COLON COLON ID .)
    FUNCTION        reduce using rule 87 (var -> ID COLON COLON ID .)
    INTERPRETATION  reduce using rule 87 (var -> ID COLON COLON ID .)
    LEMMA           reduce using rule 87 (var -> ID COLON COLON ID .)
    LOCALE          reduce using rule 87 (var -> ID COLON COLON ID .)
    METHOD          reduce using rule 87 (var -> ID COLON COLON ID .)
    SECTION         reduce using rule 87 (var -> ID COLON COLON ID .)
    TEXT            reduce using rule 87 (var -> ID COLON COLON ID .)
    TYPE_SYNONYM    reduce using rule 87 (var -> ID COLON COLON ID .)
    TYPEDECL        reduce using rule 87 (var -> ID COLON COLON ID .)
    END             reduce using rule 87 (var -> ID COLON COLON ID .)
    OPENING         reduce using rule 87 (var -> ID COLON COLON ID .)
    BEGIN           reduce using rule 87 (var -> ID COLON COLON ID .)
    PIPE            reduce using rule 87 (var -> ID COLON COLON ID .)
    FIXES           reduce using rule 87 (var -> ID COLON COLON ID .)
    CONSTRAINS      reduce using rule 87 (var -> ID COLON COLON ID .)
    ASSUMES         reduce using rule 87 (var -> ID COLON COLON ID .)
    DEFINES         reduce using rule 87 (var -> ID COLON COLON ID .)
    NOTES           reduce using rule 87 (var -> ID COLON COLON ID .)
    LEFT_PAREN      shift and go to state 87
    BINDER          shift and go to state 88
    STRUCTURE       shift and go to state 89

    mixfix                         shift and go to state 286

state 209

    (89) var -> ID COLON COLON QUOTED_STRING .
    (96) var -> ID COLON COLON QUOTED_STRING . mixfix
    (221) mixfix -> . LEFT_PAREN template RIGHT_PAREN
    (222) mixfix -> . LEFT_PAREN template prios RIGHT_PAREN
    (223) mixfix -> . LEFT_PAREN template NAT RIGHT_PAREN
    (224) mixfix -> . LEFT_PAREN template prios NAT RIGHT_PAREN
    (225) mixfix -> . LEFT_PAREN INFIX template NAT RIGHT_PAREN
    (226) mixfix -> . LEFT_PAREN INFIXL template NAT RIGHT_PAREN
    (227) mixfix -> . LEFT_PAREN INFIXR template NAT RIGHT_PAREN
    (228) mixfix -> . BINDER template NAT RIGHT_PAREN
    (229) mixfix -> . BINDER template prio NAT RIGHT_PAREN
    (230) mixfix -> . STRUCTURE

    AND             reduce using rule 89 (var -> ID COLON COLON QUOTED_STRING .)
    WHERE           reduce using rule 89 (var -> ID COLON COLON QUOTED_STRING .)
    AXIOMATIZATION  reduce using rule 89 (var -> ID COLON COLON QUOTED_STRING .)
    FUN             reduce using rule 89 (var -> ID COLON COLON QUOTED_STRING .)
    FUNCTION        reduce using rule 89 (var -> ID COLON COLON QUOTED_STRING .)
    INTERPRETATION  reduce using rule 89 (var -> ID COLON COLON QUOTED_STRING .)
    LEMMA           reduce using rule 89 (var -> ID COLON COLON QUOTED_STRING .)
    LOCALE          reduce using rule 89 (var -> ID COLON COLON QUOTED_STRING .)
    METHOD          reduce using rule 89 (var -> ID COLON COLON QUOTED_STRING .)
    SECTION         reduce using rule 89 (var -> ID COLON COLON QUOTED_STRING .)
    TEXT            reduce using rule 89 (var -> ID COLON COLON QUOTED_STRING .)
    TYPE_SYNONYM    reduce using rule 89 (var -> ID COLON COLON QUOTED_STRING .)
    TYPEDECL        reduce using rule 89 (var -> ID COLON COLON QUOTED_STRING .)
    END             reduce using rule 89 (var -> ID COLON COLON QUOTED_STRING .)
    OPENING         reduce using rule 89 (var -> ID COLON COLON QUOTED_STRING .)
    BEGIN           reduce using rule 89 (var -> ID COLON COLON QUOTED_STRING .)
    PIPE            reduce using rule 89 (var -> ID COLON COLON QUOTED_STRING .)
    FIXES           reduce using rule 89 (var -> ID COLON COLON QUOTED_STRING .)
    CONSTRAINS      reduce using rule 89 (var -> ID COLON COLON QUOTED_STRING .)
    ASSUMES         reduce using rule 89 (var -> ID COLON COLON QUOTED_STRING .)
    DEFINES         reduce using rule 89 (var -> ID COLON COLON QUOTED_STRING .)
    NOTES           reduce using rule 89 (var -> ID COLON COLON QUOTED_STRING .)
    LEFT_PAREN      shift and go to state 87
    BINDER          shift and go to state 88
    STRUCTURE       shift and go to state 89

    mixfix                         shift and go to state 287

state 210

    (221) mixfix -> LEFT_PAREN template RIGHT_PAREN .

    AND             reduce using rule 221 (mixfix -> LEFT_PAREN template RIGHT_PAREN .)
    WHERE           reduce using rule 221 (mixfix -> LEFT_PAREN template RIGHT_PAREN .)
    AXIOMATIZATION  reduce using rule 221 (mixfix -> LEFT_PAREN template RIGHT_PAREN .)
    FUN             reduce using rule 221 (mixfix -> LEFT_PAREN template RIGHT_PAREN .)
    FUNCTION        reduce using rule 221 (mixfix -> LEFT_PAREN template RIGHT_PAREN .)
    INTERPRETATION  reduce using rule 221 (mixfix -> LEFT_PAREN template RIGHT_PAREN .)
    LEMMA           reduce using rule 221 (mixfix -> LEFT_PAREN template RIGHT_PAREN .)
    LOCALE          reduce using rule 221 (mixfix -> LEFT_PAREN template RIGHT_PAREN .)
    METHOD          reduce using rule 221 (mixfix -> LEFT_PAREN template RIGHT_PAREN .)
    SECTION         reduce using rule 221 (mixfix -> LEFT_PAREN template RIGHT_PAREN .)
    TEXT            reduce using rule 221 (mixfix -> LEFT_PAREN template RIGHT_PAREN .)
    TYPE_SYNONYM    reduce using rule 221 (mixfix -> LEFT_PAREN template RIGHT_PAREN .)
    TYPEDECL        reduce using rule 221 (mixfix -> LEFT_PAREN template RIGHT_PAREN .)
    END             reduce using rule 221 (mixfix -> LEFT_PAREN template RIGHT_PAREN .)
    OPENING         reduce using rule 221 (mixfix -> LEFT_PAREN template RIGHT_PAREN .)
    BEGIN           reduce using rule 221 (mixfix -> LEFT_PAREN template RIGHT_PAREN .)
    PIPE            reduce using rule 221 (mixfix -> LEFT_PAREN template RIGHT_PAREN .)
    FIXES           reduce using rule 221 (mixfix -> LEFT_PAREN template RIGHT_PAREN .)
    CONSTRAINS      reduce using rule 221 (mixfix -> LEFT_PAREN template RIGHT_PAREN .)
    ASSUMES         reduce using rule 221 (mixfix -> LEFT_PAREN template RIGHT_PAREN .)
    DEFINES         reduce using rule 221 (mixfix -> LEFT_PAREN template RIGHT_PAREN .)
    NOTES           reduce using rule 221 (mixfix -> LEFT_PAREN template RIGHT_PAREN .)


state 211

    (222) mixfix -> LEFT_PAREN template prios . RIGHT_PAREN
    (224) mixfix -> LEFT_PAREN template prios . NAT RIGHT_PAREN

    RIGHT_PAREN     shift and go to state 288
    NAT             shift and go to state 289


state 212

    (223) mixfix -> LEFT_PAREN template NAT . RIGHT_PAREN

    RIGHT_PAREN     shift and go to state 290


state 213

    (233) prios -> LEFT_BRACKET . nat_list RIGHT_BRACKET
    (235) nat_list -> . NAT
    (236) nat_list -> . NAT COMMA nat_list

    NAT             shift and go to state 292

    nat_list                       shift and go to state 291

state 214

    (225) mixfix -> LEFT_PAREN INFIX template . NAT RIGHT_PAREN

    NAT             shift and go to state 293


state 215

    (226) mixfix -> LEFT_PAREN INFIXL template . NAT RIGHT_PAREN

    NAT             shift and go to state 294


state 216

    (227) mixfix -> LEFT_PAREN INFIXR template . NAT RIGHT_PAREN

    NAT             shift and go to state 295


state 217

    (228) mixfix -> BINDER template NAT . RIGHT_PAREN

    RIGHT_PAREN     shift and go to state 296


state 218

    (229) mixfix -> BINDER template prio . NAT RIGHT_PAREN

    NAT             shift and go to state 297


state 219

    (234) prio -> LEFT_BRACKET . NAT RIGHT_BRACKET

    NAT             shift and go to state 298


state 220

    (88) var -> GREEK COLON COLON ID .
    (95) var -> GREEK COLON COLON ID . mixfix
    (221) mixfix -> . LEFT_PAREN template RIGHT_PAREN
    (222) mixfix -> . LEFT_PAREN template prios RIGHT_PAREN
    (223) mixfix -> . LEFT_PAREN template NAT RIGHT_PAREN
    (224) mixfix -> . LEFT_PAREN template prios NAT RIGHT_PAREN
    (225) mixfix -> . LEFT_PAREN INFIX template NAT RIGHT_PAREN
    (226) mixfix -> . LEFT_PAREN INFIXL template NAT RIGHT_PAREN
    (227) mixfix -> . LEFT_PAREN INFIXR template NAT RIGHT_PAREN
    (228) mixfix -> . BINDER template NAT RIGHT_PAREN
    (229) mixfix -> . BINDER template prio NAT RIGHT_PAREN
    (230) mixfix -> . STRUCTURE

    AND             reduce using rule 88 (var -> GREEK COLON COLON ID .)
    WHERE           reduce using rule 88 (var -> GREEK COLON COLON ID .)
    AXIOMATIZATION  reduce using rule 88 (var -> GREEK COLON COLON ID .)
    FUN             reduce using rule 88 (var -> GREEK COLON COLON ID .)
    FUNCTION        reduce using rule 88 (var -> GREEK COLON COLON ID .)
    INTERPRETATION  reduce using rule 88 (var -> GREEK COLON COLON ID .)
    LEMMA           reduce using rule 88 (var -> GREEK COLON COLON ID .)
    LOCALE          reduce using rule 88 (var -> GREEK COLON COLON ID .)
    METHOD          reduce using rule 88 (var -> GREEK COLON COLON ID .)
    SECTION         reduce using rule 88 (var -> GREEK COLON COLON ID .)
    TEXT            reduce using rule 88 (var -> GREEK COLON COLON ID .)
    TYPE_SYNONYM    reduce using rule 88 (var -> GREEK COLON COLON ID .)
    TYPEDECL        reduce using rule 88 (var -> GREEK COLON COLON ID .)
    END             reduce using rule 88 (var -> GREEK COLON COLON ID .)
    OPENING         reduce using rule 88 (var -> GREEK COLON COLON ID .)
    BEGIN           reduce using rule 88 (var -> GREEK COLON COLON ID .)
    PIPE            reduce using rule 88 (var -> GREEK COLON COLON ID .)
    FIXES           reduce using rule 88 (var -> GREEK COLON COLON ID .)
    CONSTRAINS      reduce using rule 88 (var -> GREEK COLON COLON ID .)
    ASSUMES         reduce using rule 88 (var -> GREEK COLON COLON ID .)
    DEFINES         reduce using rule 88 (var -> GREEK COLON COLON ID .)
    NOTES           reduce using rule 88 (var -> GREEK COLON COLON ID .)
    LEFT_PAREN      shift and go to state 87
    BINDER          shift and go to state 88
    STRUCTURE       shift and go to state 89

    mixfix                         shift and go to state 299

state 221

    (90) var -> GREEK COLON COLON QUOTED_STRING .
    (97) var -> GREEK COLON COLON QUOTED_STRING . mixfix
    (221) mixfix -> . LEFT_PAREN template RIGHT_PAREN
    (222) mixfix -> . LEFT_PAREN template prios RIGHT_PAREN
    (223) mixfix -> . LEFT_PAREN template NAT RIGHT_PAREN
    (224) mixfix -> . LEFT_PAREN template prios NAT RIGHT_PAREN
    (225) mixfix -> . LEFT_PAREN INFIX template NAT RIGHT_PAREN
    (226) mixfix -> . LEFT_PAREN INFIXL template NAT RIGHT_PAREN
    (227) mixfix -> . LEFT_PAREN INFIXR template NAT RIGHT_PAREN
    (228) mixfix -> . BINDER template NAT RIGHT_PAREN
    (229) mixfix -> . BINDER template prio NAT RIGHT_PAREN
    (230) mixfix -> . STRUCTURE

    AND             reduce using rule 90 (var -> GREEK COLON COLON QUOTED_STRING .)
    WHERE           reduce using rule 90 (var -> GREEK COLON COLON QUOTED_STRING .)
    AXIOMATIZATION  reduce using rule 90 (var -> GREEK COLON COLON QUOTED_STRING .)
    FUN             reduce using rule 90 (var -> GREEK COLON COLON QUOTED_STRING .)
    FUNCTION        reduce using rule 90 (var -> GREEK COLON COLON QUOTED_STRING .)
    INTERPRETATION  reduce using rule 90 (var -> GREEK COLON COLON QUOTED_STRING .)
    LEMMA           reduce using rule 90 (var -> GREEK COLON COLON QUOTED_STRING .)
    LOCALE          reduce using rule 90 (var -> GREEK COLON COLON QUOTED_STRING .)
    METHOD          reduce using rule 90 (var -> GREEK COLON COLON QUOTED_STRING .)
    SECTION         reduce using rule 90 (var -> GREEK COLON COLON QUOTED_STRING .)
    TEXT            reduce using rule 90 (var -> GREEK COLON COLON QUOTED_STRING .)
    TYPE_SYNONYM    reduce using rule 90 (var -> GREEK COLON COLON QUOTED_STRING .)
    TYPEDECL        reduce using rule 90 (var -> GREEK COLON COLON QUOTED_STRING .)
    END             reduce using rule 90 (var -> GREEK COLON COLON QUOTED_STRING .)
    OPENING         reduce using rule 90 (var -> GREEK COLON COLON QUOTED_STRING .)
    BEGIN           reduce using rule 90 (var -> GREEK COLON COLON QUOTED_STRING .)
    PIPE            reduce using rule 90 (var -> GREEK COLON COLON QUOTED_STRING .)
    FIXES           reduce using rule 90 (var -> GREEK COLON COLON QUOTED_STRING .)
    CONSTRAINS      reduce using rule 90 (var -> GREEK COLON COLON QUOTED_STRING .)
    ASSUMES         reduce using rule 90 (var -> GREEK COLON COLON QUOTED_STRING .)
    DEFINES         reduce using rule 90 (var -> GREEK COLON COLON QUOTED_STRING .)
    NOTES           reduce using rule 90 (var -> GREEK COLON COLON QUOTED_STRING .)
    LEFT_PAREN      shift and go to state 87
    BINDER          shift and go to state 88
    STRUCTURE       shift and go to state 89

    mixfix                         shift and go to state 300

state 222

    (130) multi_specs -> structured_spec PIPE . multi_specs
    (129) multi_specs -> . structured_spec
    (130) multi_specs -> . structured_spec PIPE multi_specs
    (131) structured_spec -> . ID spec_prems
    (132) structured_spec -> . ID spec_prems for_fixes
    (133) structured_spec -> . QUOTED_STRING spec_prems
    (134) structured_spec -> . QUOTED_STRING spec_prems for_fixes
    (135) structured_spec -> . thmdecl ID spec_prems for_fixes
    (136) structured_spec -> . thmdecl QUOTED_STRING spec_prems for_fixes
    (107) thmdecl -> . thmbind COLON
    (114) thmbind -> . ID
    (115) thmbind -> . ID attributes
    (116) thmbind -> . attributes
    (117) attributes -> . LEFT_BRACKET attributes_list RIGHT_BRACKET

    ID              shift and go to state 153
    QUOTED_STRING   shift and go to state 154
    LEFT_BRACKET    shift and go to state 81

    structured_spec                shift and go to state 152
    multi_specs                    shift and go to state 301
    thmdecl                        shift and go to state 155
    thmbind                        shift and go to state 79
    attributes                     shift and go to state 80

state 223

    (131) structured_spec -> ID spec_prems .
    (132) structured_spec -> ID spec_prems . for_fixes
    (128) for_fixes -> . FOR vars

    PIPE            reduce using rule 131 (structured_spec -> ID spec_prems .)
    AXIOMATIZATION  reduce using rule 131 (structured_spec -> ID spec_prems .)
    FUN             reduce using rule 131 (structured_spec -> ID spec_prems .)
    FUNCTION        reduce using rule 131 (structured_spec -> ID spec_prems .)
    INTERPRETATION  reduce using rule 131 (structured_spec -> ID spec_prems .)
    LEMMA           reduce using rule 131 (structured_spec -> ID spec_prems .)
    LOCALE          reduce using rule 131 (structured_spec -> ID spec_prems .)
    METHOD          reduce using rule 131 (structured_spec -> ID spec_prems .)
    SECTION         reduce using rule 131 (structured_spec -> ID spec_prems .)
    TEXT            reduce using rule 131 (structured_spec -> ID spec_prems .)
    TYPE_SYNONYM    reduce using rule 131 (structured_spec -> ID spec_prems .)
    TYPEDECL        reduce using rule 131 (structured_spec -> ID spec_prems .)
    END             reduce using rule 131 (structured_spec -> ID spec_prems .)
    FOR             shift and go to state 100

    for_fixes                      shift and go to state 302

state 224

    (133) structured_spec -> QUOTED_STRING spec_prems .
    (134) structured_spec -> QUOTED_STRING spec_prems . for_fixes
    (128) for_fixes -> . FOR vars

    PIPE            reduce using rule 133 (structured_spec -> QUOTED_STRING spec_prems .)
    AXIOMATIZATION  reduce using rule 133 (structured_spec -> QUOTED_STRING spec_prems .)
    FUN             reduce using rule 133 (structured_spec -> QUOTED_STRING spec_prems .)
    FUNCTION        reduce using rule 133 (structured_spec -> QUOTED_STRING spec_prems .)
    INTERPRETATION  reduce using rule 133 (structured_spec -> QUOTED_STRING spec_prems .)
    LEMMA           reduce using rule 133 (structured_spec -> QUOTED_STRING spec_prems .)
    LOCALE          reduce using rule 133 (structured_spec -> QUOTED_STRING spec_prems .)
    METHOD          reduce using rule 133 (structured_spec -> QUOTED_STRING spec_prems .)
    SECTION         reduce using rule 133 (structured_spec -> QUOTED_STRING spec_prems .)
    TEXT            reduce using rule 133 (structured_spec -> QUOTED_STRING spec_prems .)
    TYPE_SYNONYM    reduce using rule 133 (structured_spec -> QUOTED_STRING spec_prems .)
    TYPEDECL        reduce using rule 133 (structured_spec -> QUOTED_STRING spec_prems .)
    END             reduce using rule 133 (structured_spec -> QUOTED_STRING spec_prems .)
    FOR             shift and go to state 100

    for_fixes                      shift and go to state 303

state 225

    (135) structured_spec -> thmdecl ID . spec_prems for_fixes
    (137) spec_prems -> . empty
    (138) spec_prems -> . IF prop_list
    (261) empty -> .

    IF              shift and go to state 129
    FOR             reduce using rule 261 (empty -> .)

    spec_prems                     shift and go to state 304
    empty                          shift and go to state 128

state 226

    (136) structured_spec -> thmdecl QUOTED_STRING . spec_prems for_fixes
    (137) spec_prems -> . empty
    (138) spec_prems -> . IF prop_list
    (261) empty -> .

    IF              shift and go to state 129
    FOR             reduce using rule 261 (empty -> .)

    spec_prems                     shift and go to state 305
    empty                          shift and go to state 128

state 227

    (245) opt_list -> sequential COMMA opt_list .

    RIGHT_PAREN     reduce using rule 245 (opt_list -> sequential COMMA opt_list .)


state 228

    (246) opt_list -> domintros COMMA opt_list .

    RIGHT_PAREN     reduce using rule 246 (opt_list -> domintros COMMA opt_list .)


state 229

    (177) name_insts_list -> ID EQUALS . ID
    (178) name_insts_list -> ID EQUALS . QUOTED_STRING
    (179) name_insts_list -> ID EQUALS . ID name_insts_list
    (180) name_insts_list -> ID EQUALS . QUOTED_STRING name_insts_list

    ID              shift and go to state 306
    QUOTED_STRING   shift and go to state 307


state 230

    (160) instance -> qualifier COLON ID pos_insts .

    PLUS            reduce using rule 160 (instance -> qualifier COLON ID pos_insts .)
    FOR             reduce using rule 160 (instance -> qualifier COLON ID pos_insts .)
    AXIOMATIZATION  reduce using rule 160 (instance -> qualifier COLON ID pos_insts .)
    FUN             reduce using rule 160 (instance -> qualifier COLON ID pos_insts .)
    FUNCTION        reduce using rule 160 (instance -> qualifier COLON ID pos_insts .)
    INTERPRETATION  reduce using rule 160 (instance -> qualifier COLON ID pos_insts .)
    LEMMA           reduce using rule 160 (instance -> qualifier COLON ID pos_insts .)
    LOCALE          reduce using rule 160 (instance -> qualifier COLON ID pos_insts .)
    METHOD          reduce using rule 160 (instance -> qualifier COLON ID pos_insts .)
    SECTION         reduce using rule 160 (instance -> qualifier COLON ID pos_insts .)
    TEXT            reduce using rule 160 (instance -> qualifier COLON ID pos_insts .)
    TYPE_SYNONYM    reduce using rule 160 (instance -> qualifier COLON ID pos_insts .)
    TYPEDECL        reduce using rule 160 (instance -> qualifier COLON ID pos_insts .)
    END             reduce using rule 160 (instance -> qualifier COLON ID pos_insts .)
    OPENING         reduce using rule 160 (instance -> qualifier COLON ID pos_insts .)
    BEGIN           reduce using rule 160 (instance -> qualifier COLON ID pos_insts .)


state 231

    (161) instance -> qualifier COLON ID name_insts .

    PLUS            reduce using rule 161 (instance -> qualifier COLON ID name_insts .)
    FOR             reduce using rule 161 (instance -> qualifier COLON ID name_insts .)
    AXIOMATIZATION  reduce using rule 161 (instance -> qualifier COLON ID name_insts .)
    FUN             reduce using rule 161 (instance -> qualifier COLON ID name_insts .)
    FUNCTION        reduce using rule 161 (instance -> qualifier COLON ID name_insts .)
    INTERPRETATION  reduce using rule 161 (instance -> qualifier COLON ID name_insts .)
    LEMMA           reduce using rule 161 (instance -> qualifier COLON ID name_insts .)
    LOCALE          reduce using rule 161 (instance -> qualifier COLON ID name_insts .)
    METHOD          reduce using rule 161 (instance -> qualifier COLON ID name_insts .)
    SECTION         reduce using rule 161 (instance -> qualifier COLON ID name_insts .)
    TEXT            reduce using rule 161 (instance -> qualifier COLON ID name_insts .)
    TYPE_SYNONYM    reduce using rule 161 (instance -> qualifier COLON ID name_insts .)
    TYPEDECL        reduce using rule 161 (instance -> qualifier COLON ID name_insts .)
    END             reduce using rule 161 (instance -> qualifier COLON ID name_insts .)
    OPENING         reduce using rule 161 (instance -> qualifier COLON ID name_insts .)
    BEGIN           reduce using rule 161 (instance -> qualifier COLON ID name_insts .)


state 232

    (45) lemma_block -> LEMMA ID COLON assumes_block shows_clause . lemma_proof_block
    (46) lemma_proof_block -> . PROOF apply_block
    (47) lemma_proof_block -> . apply_block
    (48) lemma_proof_block -> . empty
    (55) apply_block -> . single_apply apply_block
    (56) apply_block -> . subgoal apply_block
    (57) apply_block -> . empty
    (261) empty -> .
    (58) single_apply -> . APPLY instruction
    (59) single_apply -> . APPLY LEFT_PAREN instruction RIGHT_PAREN
    (60) single_apply -> . USING using_block APPLY DASH
    (61) single_apply -> . USING using_block APPLY instruction
    (62) single_apply -> . USING using_block APPLY LEFT_PAREN instruction RIGHT_PAREN
    (63) single_apply -> . BY instruction
    (64) single_apply -> . BY LEFT_PAREN instruction RIGHT_PAREN
    (65) single_apply -> . USING using_block BY instruction
    (66) single_apply -> . USING using_block BY LEFT_PAREN instruction RIGHT_PAREN
    (67) single_apply -> . DONE
    (68) single_apply -> . SORRY
    (76) subgoal -> . SUBGOAL QUOTED_STRING apply_block

    PROOF           shift and go to state 309
    AXIOMATIZATION  reduce using rule 261 (empty -> .)
    FUN             reduce using rule 261 (empty -> .)
    FUNCTION        reduce using rule 261 (empty -> .)
    INTERPRETATION  reduce using rule 261 (empty -> .)
    LEMMA           reduce using rule 261 (empty -> .)
    LOCALE          reduce using rule 261 (empty -> .)
    METHOD          reduce using rule 261 (empty -> .)
    SECTION         reduce using rule 261 (empty -> .)
    TEXT            reduce using rule 261 (empty -> .)
    TYPE_SYNONYM    reduce using rule 261 (empty -> .)
    TYPEDECL        reduce using rule 261 (empty -> .)
    END             reduce using rule 261 (empty -> .)
    APPLY           shift and go to state 314
    USING           shift and go to state 315
    BY              shift and go to state 316
    DONE            shift and go to state 317
    SORRY           shift and go to state 318
    SUBGOAL         shift and go to state 319

    lemma_proof_block              shift and go to state 308
    apply_block                    shift and go to state 310
    empty                          shift and go to state 311
    single_apply                   shift and go to state 312
    subgoal                        shift and go to state 313

state 233

    (54) shows_clause -> SHOWS . QUOTED_STRING

    QUOTED_STRING   shift and go to state 320


state 234

    (49) assumes_block -> ASSUMES assumptions_list .

    SHOWS           reduce using rule 49 (assumes_block -> ASSUMES assumptions_list .)


state 235

    (50) assumptions_list -> assumption . AND assumptions_list
    (51) assumptions_list -> assumption .

    AND             shift and go to state 321
    SHOWS           reduce using rule 51 (assumptions_list -> assumption .)


state 236

    (52) assumption -> QUOTED_STRING .

    AND             reduce using rule 52 (assumption -> QUOTED_STRING .)
    SHOWS           reduce using rule 52 (assumption -> QUOTED_STRING .)


state 237

    (53) assumption -> NAT . COLON QUOTED_STRING

    COLON           shift and go to state 322


state 238

    (182) locale_block -> LOCALE ID BEGIN content END .

    AXIOMATIZATION  reduce using rule 182 (locale_block -> LOCALE ID BEGIN content END .)
    FUN             reduce using rule 182 (locale_block -> LOCALE ID BEGIN content END .)
    FUNCTION        reduce using rule 182 (locale_block -> LOCALE ID BEGIN content END .)
    INTERPRETATION  reduce using rule 182 (locale_block -> LOCALE ID BEGIN content END .)
    LEMMA           reduce using rule 182 (locale_block -> LOCALE ID BEGIN content END .)
    LOCALE          reduce using rule 182 (locale_block -> LOCALE ID BEGIN content END .)
    METHOD          reduce using rule 182 (locale_block -> LOCALE ID BEGIN content END .)
    SECTION         reduce using rule 182 (locale_block -> LOCALE ID BEGIN content END .)
    TEXT            reduce using rule 182 (locale_block -> LOCALE ID BEGIN content END .)
    TYPE_SYNONYM    reduce using rule 182 (locale_block -> LOCALE ID BEGIN content END .)
    TYPEDECL        reduce using rule 182 (locale_block -> LOCALE ID BEGIN content END .)
    END             reduce using rule 182 (locale_block -> LOCALE ID BEGIN content END .)


state 239

    (183) locale_block -> LOCALE ID comment_block BEGIN content . END

    END             shift and go to state 323


state 240

    (185) locale_block -> LOCALE ID EQ locale BEGIN . content END
    (10) content -> . statement content
    (11) content -> . empty
    (12) statement -> . axiomatization_block
    (13) statement -> . fun_block
    (14) statement -> . interpretation_block
    (15) statement -> . lemma_block
    (16) statement -> . locale_block
    (17) statement -> . method_block
    (18) statement -> . section_block
    (19) statement -> . text_block
    (20) statement -> . type_synonym
    (21) statement -> . typedecl
    (261) empty -> .
    (144) axiomatization_block -> . AXIOMATIZATION
    (145) axiomatization_block -> . AXIOMATIZATION vars
    (146) axiomatization_block -> . AXIOMATIZATION WHERE axiomatization
    (147) axiomatization_block -> . AXIOMATIZATION vars WHERE axiomatization
    (238) fun_block -> . FUN specification
    (239) fun_block -> . FUNCTION specification
    (240) fun_block -> . FUN opts specification
    (241) fun_block -> . FUNCTION opts specification
    (216) interpretation_block -> . INTERPRETATION locale_expr
    (45) lemma_block -> . LEMMA ID COLON assumes_block shows_clause lemma_proof_block
    (181) locale_block -> . LOCALE ID
    (182) locale_block -> . LOCALE ID BEGIN content END
    (183) locale_block -> . LOCALE ID comment_block BEGIN content END
    (184) locale_block -> . LOCALE ID EQ locale
    (185) locale_block -> . LOCALE ID EQ locale BEGIN content END
    (22) method_block -> . METHOD method_name EQUALS instruction
    (251) section_block -> . SECTION CARTOUCHE
    (252) text_block -> . TEXT CARTOUCHE
    (219) type_synonym -> . TYPE_SYNONYM typespec EQUALS ID
    (220) type_synonym -> . TYPE_SYNONYM typespec EQUALS ID mixfix
    (217) typedecl -> . TYPEDECL typespec
    (218) typedecl -> . TYPEDECL typespec mixfix

    END             reduce using rule 261 (empty -> .)
    AXIOMATIZATION  shift and go to state 33
    FUN             shift and go to state 34
    FUNCTION        shift and go to state 35
    INTERPRETATION  shift and go to state 36
    LEMMA           shift and go to state 37
    LOCALE          shift and go to state 38
    METHOD          shift and go to state 39
    SECTION         shift and go to state 6
    TEXT            shift and go to state 7
    TYPE_SYNONYM    shift and go to state 40
    TYPEDECL        shift and go to state 41

    content                        shift and go to state 324
    statement                      shift and go to state 21
    empty                          shift and go to state 22
    axiomatization_block           shift and go to state 23
    fun_block                      shift and go to state 24
    interpretation_block           shift and go to state 25
    lemma_block                    shift and go to state 26
    locale_block                   shift and go to state 27
    method_block                   shift and go to state 28
    section_block                  shift and go to state 29
    text_block                     shift and go to state 30
    type_synonym                   shift and go to state 31
    typedecl                       shift and go to state 32

state 241

    (190) locale -> locale opening .
    (191) locale -> locale opening . PLUS context_elem_list

    BEGIN           reduce using rule 190 (locale -> locale opening .)
    OPENING         reduce using rule 190 (locale -> locale opening .)
    AXIOMATIZATION  reduce using rule 190 (locale -> locale opening .)
    FUN             reduce using rule 190 (locale -> locale opening .)
    FUNCTION        reduce using rule 190 (locale -> locale opening .)
    INTERPRETATION  reduce using rule 190 (locale -> locale opening .)
    LEMMA           reduce using rule 190 (locale -> locale opening .)
    LOCALE          reduce using rule 190 (locale -> locale opening .)
    METHOD          reduce using rule 190 (locale -> locale opening .)
    SECTION         reduce using rule 190 (locale -> locale opening .)
    TEXT            reduce using rule 190 (locale -> locale opening .)
    TYPE_SYNONYM    reduce using rule 190 (locale -> locale opening .)
    TYPEDECL        reduce using rule 190 (locale -> locale opening .)
    END             reduce using rule 190 (locale -> locale opening .)
    PLUS            shift and go to state 325


state 242

    (188) locale -> opening PLUS . context_elem_list
    (193) context_elem_list -> . context_elem
    (194) context_elem_list -> . context_elem context_elem_list
    (195) context_elem -> . FIXES vars
    (196) context_elem -> . CONSTRAINS name_type_list
    (197) context_elem -> . ASSUMES prop_list
    (198) context_elem -> . DEFINES defines_list
    (199) context_elem -> . NOTES notes_list

    FIXES           shift and go to state 179
    CONSTRAINS      shift and go to state 180
    ASSUMES         shift and go to state 181
    DEFINES         shift and go to state 182
    NOTES           shift and go to state 183

    context_elem_list              shift and go to state 326
    context_elem                   shift and go to state 177

state 243

    (192) locale -> locale_expr opening . PLUS context_elem_list

    PLUS            shift and go to state 327


state 244

    (194) context_elem_list -> context_elem context_elem_list .

    BEGIN           reduce using rule 194 (context_elem_list -> context_elem context_elem_list .)
    OPENING         reduce using rule 194 (context_elem_list -> context_elem context_elem_list .)
    AXIOMATIZATION  reduce using rule 194 (context_elem_list -> context_elem context_elem_list .)
    FUN             reduce using rule 194 (context_elem_list -> context_elem context_elem_list .)
    FUNCTION        reduce using rule 194 (context_elem_list -> context_elem context_elem_list .)
    INTERPRETATION  reduce using rule 194 (context_elem_list -> context_elem context_elem_list .)
    LEMMA           reduce using rule 194 (context_elem_list -> context_elem context_elem_list .)
    LOCALE          reduce using rule 194 (context_elem_list -> context_elem context_elem_list .)
    METHOD          reduce using rule 194 (context_elem_list -> context_elem context_elem_list .)
    SECTION         reduce using rule 194 (context_elem_list -> context_elem context_elem_list .)
    TEXT            reduce using rule 194 (context_elem_list -> context_elem context_elem_list .)
    TYPE_SYNONYM    reduce using rule 194 (context_elem_list -> context_elem context_elem_list .)
    TYPEDECL        reduce using rule 194 (context_elem_list -> context_elem context_elem_list .)
    END             reduce using rule 194 (context_elem_list -> context_elem context_elem_list .)


state 245

    (143) opening -> OPENING names_list .

    PLUS            reduce using rule 143 (opening -> OPENING names_list .)
    BEGIN           reduce using rule 143 (opening -> OPENING names_list .)
    OPENING         reduce using rule 143 (opening -> OPENING names_list .)
    AXIOMATIZATION  reduce using rule 143 (opening -> OPENING names_list .)
    FUN             reduce using rule 143 (opening -> OPENING names_list .)
    FUNCTION        reduce using rule 143 (opening -> OPENING names_list .)
    INTERPRETATION  reduce using rule 143 (opening -> OPENING names_list .)
    LEMMA           reduce using rule 143 (opening -> OPENING names_list .)
    LOCALE          reduce using rule 143 (opening -> OPENING names_list .)
    METHOD          reduce using rule 143 (opening -> OPENING names_list .)
    SECTION         reduce using rule 143 (opening -> OPENING names_list .)
    TEXT            reduce using rule 143 (opening -> OPENING names_list .)
    TYPE_SYNONYM    reduce using rule 143 (opening -> OPENING names_list .)
    TYPEDECL        reduce using rule 143 (opening -> OPENING names_list .)
    END             reduce using rule 143 (opening -> OPENING names_list .)


state 246

    (100) names_list -> ID .
    (101) names_list -> ID . names
    (98) names -> . ID
    (99) names -> . ID AND names

    PLUS            reduce using rule 100 (names_list -> ID .)
    BEGIN           reduce using rule 100 (names_list -> ID .)
    OPENING         reduce using rule 100 (names_list -> ID .)
    AXIOMATIZATION  reduce using rule 100 (names_list -> ID .)
    FUN             reduce using rule 100 (names_list -> ID .)
    FUNCTION        reduce using rule 100 (names_list -> ID .)
    INTERPRETATION  reduce using rule 100 (names_list -> ID .)
    LEMMA           reduce using rule 100 (names_list -> ID .)
    LOCALE          reduce using rule 100 (names_list -> ID .)
    METHOD          reduce using rule 100 (names_list -> ID .)
    SECTION         reduce using rule 100 (names_list -> ID .)
    TEXT            reduce using rule 100 (names_list -> ID .)
    TYPE_SYNONYM    reduce using rule 100 (names_list -> ID .)
    TYPEDECL        reduce using rule 100 (names_list -> ID .)
    END             reduce using rule 100 (names_list -> ID .)
    ID              shift and go to state 141

    names                          shift and go to state 328

state 247

    (195) context_elem -> FIXES vars .

    FIXES           reduce using rule 195 (context_elem -> FIXES vars .)
    CONSTRAINS      reduce using rule 195 (context_elem -> FIXES vars .)
    ASSUMES         reduce using rule 195 (context_elem -> FIXES vars .)
    DEFINES         reduce using rule 195 (context_elem -> FIXES vars .)
    NOTES           reduce using rule 195 (context_elem -> FIXES vars .)
    BEGIN           reduce using rule 195 (context_elem -> FIXES vars .)
    OPENING         reduce using rule 195 (context_elem -> FIXES vars .)
    AXIOMATIZATION  reduce using rule 195 (context_elem -> FIXES vars .)
    FUN             reduce using rule 195 (context_elem -> FIXES vars .)
    FUNCTION        reduce using rule 195 (context_elem -> FIXES vars .)
    INTERPRETATION  reduce using rule 195 (context_elem -> FIXES vars .)
    LEMMA           reduce using rule 195 (context_elem -> FIXES vars .)
    LOCALE          reduce using rule 195 (context_elem -> FIXES vars .)
    METHOD          reduce using rule 195 (context_elem -> FIXES vars .)
    SECTION         reduce using rule 195 (context_elem -> FIXES vars .)
    TEXT            reduce using rule 195 (context_elem -> FIXES vars .)
    TYPE_SYNONYM    reduce using rule 195 (context_elem -> FIXES vars .)
    TYPEDECL        reduce using rule 195 (context_elem -> FIXES vars .)
    END             reduce using rule 195 (context_elem -> FIXES vars .)


state 248

    (196) context_elem -> CONSTRAINS name_type_list .

    FIXES           reduce using rule 196 (context_elem -> CONSTRAINS name_type_list .)
    CONSTRAINS      reduce using rule 196 (context_elem -> CONSTRAINS name_type_list .)
    ASSUMES         reduce using rule 196 (context_elem -> CONSTRAINS name_type_list .)
    DEFINES         reduce using rule 196 (context_elem -> CONSTRAINS name_type_list .)
    NOTES           reduce using rule 196 (context_elem -> CONSTRAINS name_type_list .)
    BEGIN           reduce using rule 196 (context_elem -> CONSTRAINS name_type_list .)
    OPENING         reduce using rule 196 (context_elem -> CONSTRAINS name_type_list .)
    AXIOMATIZATION  reduce using rule 196 (context_elem -> CONSTRAINS name_type_list .)
    FUN             reduce using rule 196 (context_elem -> CONSTRAINS name_type_list .)
    FUNCTION        reduce using rule 196 (context_elem -> CONSTRAINS name_type_list .)
    INTERPRETATION  reduce using rule 196 (context_elem -> CONSTRAINS name_type_list .)
    LEMMA           reduce using rule 196 (context_elem -> CONSTRAINS name_type_list .)
    LOCALE          reduce using rule 196 (context_elem -> CONSTRAINS name_type_list .)
    METHOD          reduce using rule 196 (context_elem -> CONSTRAINS name_type_list .)
    SECTION         reduce using rule 196 (context_elem -> CONSTRAINS name_type_list .)
    TEXT            reduce using rule 196 (context_elem -> CONSTRAINS name_type_list .)
    TYPE_SYNONYM    reduce using rule 196 (context_elem -> CONSTRAINS name_type_list .)
    TYPEDECL        reduce using rule 196 (context_elem -> CONSTRAINS name_type_list .)
    END             reduce using rule 196 (context_elem -> CONSTRAINS name_type_list .)


state 249

    (200) name_type_list -> ID . COLON COLON ID
    (201) name_type_list -> ID . COLON COLON ID AND name_type_list

    COLON           shift and go to state 329


state 250

    (197) context_elem -> ASSUMES prop_list .

    FIXES           reduce using rule 197 (context_elem -> ASSUMES prop_list .)
    CONSTRAINS      reduce using rule 197 (context_elem -> ASSUMES prop_list .)
    ASSUMES         reduce using rule 197 (context_elem -> ASSUMES prop_list .)
    DEFINES         reduce using rule 197 (context_elem -> ASSUMES prop_list .)
    NOTES           reduce using rule 197 (context_elem -> ASSUMES prop_list .)
    BEGIN           reduce using rule 197 (context_elem -> ASSUMES prop_list .)
    OPENING         reduce using rule 197 (context_elem -> ASSUMES prop_list .)
    AXIOMATIZATION  reduce using rule 197 (context_elem -> ASSUMES prop_list .)
    FUN             reduce using rule 197 (context_elem -> ASSUMES prop_list .)
    FUNCTION        reduce using rule 197 (context_elem -> ASSUMES prop_list .)
    INTERPRETATION  reduce using rule 197 (context_elem -> ASSUMES prop_list .)
    LEMMA           reduce using rule 197 (context_elem -> ASSUMES prop_list .)
    LOCALE          reduce using rule 197 (context_elem -> ASSUMES prop_list .)
    METHOD          reduce using rule 197 (context_elem -> ASSUMES prop_list .)
    SECTION         reduce using rule 197 (context_elem -> ASSUMES prop_list .)
    TEXT            reduce using rule 197 (context_elem -> ASSUMES prop_list .)
    TYPE_SYNONYM    reduce using rule 197 (context_elem -> ASSUMES prop_list .)
    TYPEDECL        reduce using rule 197 (context_elem -> ASSUMES prop_list .)
    END             reduce using rule 197 (context_elem -> ASSUMES prop_list .)


state 251

    (198) context_elem -> DEFINES defines_list .

    FIXES           reduce using rule 198 (context_elem -> DEFINES defines_list .)
    CONSTRAINS      reduce using rule 198 (context_elem -> DEFINES defines_list .)
    ASSUMES         reduce using rule 198 (context_elem -> DEFINES defines_list .)
    DEFINES         reduce using rule 198 (context_elem -> DEFINES defines_list .)
    NOTES           reduce using rule 198 (context_elem -> DEFINES defines_list .)
    BEGIN           reduce using rule 198 (context_elem -> DEFINES defines_list .)
    OPENING         reduce using rule 198 (context_elem -> DEFINES defines_list .)
    AXIOMATIZATION  reduce using rule 198 (context_elem -> DEFINES defines_list .)
    FUN             reduce using rule 198 (context_elem -> DEFINES defines_list .)
    FUNCTION        reduce using rule 198 (context_elem -> DEFINES defines_list .)
    INTERPRETATION  reduce using rule 198 (context_elem -> DEFINES defines_list .)
    LEMMA           reduce using rule 198 (context_elem -> DEFINES defines_list .)
    LOCALE          reduce using rule 198 (context_elem -> DEFINES defines_list .)
    METHOD          reduce using rule 198 (context_elem -> DEFINES defines_list .)
    SECTION         reduce using rule 198 (context_elem -> DEFINES defines_list .)
    TEXT            reduce using rule 198 (context_elem -> DEFINES defines_list .)
    TYPE_SYNONYM    reduce using rule 198 (context_elem -> DEFINES defines_list .)
    TYPEDECL        reduce using rule 198 (context_elem -> DEFINES defines_list .)
    END             reduce using rule 198 (context_elem -> DEFINES defines_list .)


state 252

    (202) defines_list -> defines_list_element .
    (203) defines_list -> defines_list_element . AND defines_list

    FIXES           reduce using rule 202 (defines_list -> defines_list_element .)
    CONSTRAINS      reduce using rule 202 (defines_list -> defines_list_element .)
    ASSUMES         reduce using rule 202 (defines_list -> defines_list_element .)
    DEFINES         reduce using rule 202 (defines_list -> defines_list_element .)
    NOTES           reduce using rule 202 (defines_list -> defines_list_element .)
    BEGIN           reduce using rule 202 (defines_list -> defines_list_element .)
    OPENING         reduce using rule 202 (defines_list -> defines_list_element .)
    AXIOMATIZATION  reduce using rule 202 (defines_list -> defines_list_element .)
    FUN             reduce using rule 202 (defines_list -> defines_list_element .)
    FUNCTION        reduce using rule 202 (defines_list -> defines_list_element .)
    INTERPRETATION  reduce using rule 202 (defines_list -> defines_list_element .)
    LEMMA           reduce using rule 202 (defines_list -> defines_list_element .)
    LOCALE          reduce using rule 202 (defines_list -> defines_list_element .)
    METHOD          reduce using rule 202 (defines_list -> defines_list_element .)
    SECTION         reduce using rule 202 (defines_list -> defines_list_element .)
    TEXT            reduce using rule 202 (defines_list -> defines_list_element .)
    TYPE_SYNONYM    reduce using rule 202 (defines_list -> defines_list_element .)
    TYPEDECL        reduce using rule 202 (defines_list -> defines_list_element .)
    END             reduce using rule 202 (defines_list -> defines_list_element .)
    AND             shift and go to state 330


state 253

    (204) defines_list_element -> ID .
    (208) defines_list_element -> ID . prop_pat
    (114) thmbind -> ID .
    (115) thmbind -> ID . attributes
    (102) prop_pat -> . LEFT_PAREN prop_pat_terms RIGHT_PAREN
    (117) attributes -> . LEFT_BRACKET attributes_list RIGHT_BRACKET

    AND             reduce using rule 204 (defines_list_element -> ID .)
    FIXES           reduce using rule 204 (defines_list_element -> ID .)
    CONSTRAINS      reduce using rule 204 (defines_list_element -> ID .)
    ASSUMES         reduce using rule 204 (defines_list_element -> ID .)
    DEFINES         reduce using rule 204 (defines_list_element -> ID .)
    NOTES           reduce using rule 204 (defines_list_element -> ID .)
    BEGIN           reduce using rule 204 (defines_list_element -> ID .)
    OPENING         reduce using rule 204 (defines_list_element -> ID .)
    AXIOMATIZATION  reduce using rule 204 (defines_list_element -> ID .)
    FUN             reduce using rule 204 (defines_list_element -> ID .)
    FUNCTION        reduce using rule 204 (defines_list_element -> ID .)
    INTERPRETATION  reduce using rule 204 (defines_list_element -> ID .)
    LEMMA           reduce using rule 204 (defines_list_element -> ID .)
    LOCALE          reduce using rule 204 (defines_list_element -> ID .)
    METHOD          reduce using rule 204 (defines_list_element -> ID .)
    SECTION         reduce using rule 204 (defines_list_element -> ID .)
    TEXT            reduce using rule 204 (defines_list_element -> ID .)
    TYPE_SYNONYM    reduce using rule 204 (defines_list_element -> ID .)
    TYPEDECL        reduce using rule 204 (defines_list_element -> ID .)
    END             reduce using rule 204 (defines_list_element -> ID .)
    COLON           reduce using rule 114 (thmbind -> ID .)
    LEFT_PAREN      shift and go to state 332
    LEFT_BRACKET    shift and go to state 81

    prop_pat                       shift and go to state 331
    attributes                     shift and go to state 132

state 254

    (205) defines_list_element -> QUOTED_STRING .
    (209) defines_list_element -> QUOTED_STRING . prop_pat
    (102) prop_pat -> . LEFT_PAREN prop_pat_terms RIGHT_PAREN

    AND             reduce using rule 205 (defines_list_element -> QUOTED_STRING .)
    FIXES           reduce using rule 205 (defines_list_element -> QUOTED_STRING .)
    CONSTRAINS      reduce using rule 205 (defines_list_element -> QUOTED_STRING .)
    ASSUMES         reduce using rule 205 (defines_list_element -> QUOTED_STRING .)
    DEFINES         reduce using rule 205 (defines_list_element -> QUOTED_STRING .)
    NOTES           reduce using rule 205 (defines_list_element -> QUOTED_STRING .)
    BEGIN           reduce using rule 205 (defines_list_element -> QUOTED_STRING .)
    OPENING         reduce using rule 205 (defines_list_element -> QUOTED_STRING .)
    AXIOMATIZATION  reduce using rule 205 (defines_list_element -> QUOTED_STRING .)
    FUN             reduce using rule 205 (defines_list_element -> QUOTED_STRING .)
    FUNCTION        reduce using rule 205 (defines_list_element -> QUOTED_STRING .)
    INTERPRETATION  reduce using rule 205 (defines_list_element -> QUOTED_STRING .)
    LEMMA           reduce using rule 205 (defines_list_element -> QUOTED_STRING .)
    LOCALE          reduce using rule 205 (defines_list_element -> QUOTED_STRING .)
    METHOD          reduce using rule 205 (defines_list_element -> QUOTED_STRING .)
    SECTION         reduce using rule 205 (defines_list_element -> QUOTED_STRING .)
    TEXT            reduce using rule 205 (defines_list_element -> QUOTED_STRING .)
    TYPE_SYNONYM    reduce using rule 205 (defines_list_element -> QUOTED_STRING .)
    TYPEDECL        reduce using rule 205 (defines_list_element -> QUOTED_STRING .)
    END             reduce using rule 205 (defines_list_element -> QUOTED_STRING .)
    LEFT_PAREN      shift and go to state 332

    prop_pat                       shift and go to state 333

state 255

    (206) defines_list_element -> thmdecl . ID
    (207) defines_list_element -> thmdecl . QUOTED_STRING
    (210) defines_list_element -> thmdecl . ID prop_pat
    (211) defines_list_element -> thmdecl . QUOTED_STRING prop_pat

    ID              shift and go to state 334
    QUOTED_STRING   shift and go to state 335


state 256

    (199) context_elem -> NOTES notes_list .

    FIXES           reduce using rule 199 (context_elem -> NOTES notes_list .)
    CONSTRAINS      reduce using rule 199 (context_elem -> NOTES notes_list .)
    ASSUMES         reduce using rule 199 (context_elem -> NOTES notes_list .)
    DEFINES         reduce using rule 199 (context_elem -> NOTES notes_list .)
    NOTES           reduce using rule 199 (context_elem -> NOTES notes_list .)
    BEGIN           reduce using rule 199 (context_elem -> NOTES notes_list .)
    OPENING         reduce using rule 199 (context_elem -> NOTES notes_list .)
    AXIOMATIZATION  reduce using rule 199 (context_elem -> NOTES notes_list .)
    FUN             reduce using rule 199 (context_elem -> NOTES notes_list .)
    FUNCTION        reduce using rule 199 (context_elem -> NOTES notes_list .)
    INTERPRETATION  reduce using rule 199 (context_elem -> NOTES notes_list .)
    LEMMA           reduce using rule 199 (context_elem -> NOTES notes_list .)
    LOCALE          reduce using rule 199 (context_elem -> NOTES notes_list .)
    METHOD          reduce using rule 199 (context_elem -> NOTES notes_list .)
    SECTION         reduce using rule 199 (context_elem -> NOTES notes_list .)
    TEXT            reduce using rule 199 (context_elem -> NOTES notes_list .)
    TYPE_SYNONYM    reduce using rule 199 (context_elem -> NOTES notes_list .)
    TYPEDECL        reduce using rule 199 (context_elem -> NOTES notes_list .)
    END             reduce using rule 199 (context_elem -> NOTES notes_list .)


state 257

    (212) notes_list -> notes_list_element .
    (213) notes_list -> notes_list_element . AND notes_list

    FIXES           reduce using rule 212 (notes_list -> notes_list_element .)
    CONSTRAINS      reduce using rule 212 (notes_list -> notes_list_element .)
    ASSUMES         reduce using rule 212 (notes_list -> notes_list_element .)
    DEFINES         reduce using rule 212 (notes_list -> notes_list_element .)
    NOTES           reduce using rule 212 (notes_list -> notes_list_element .)
    BEGIN           reduce using rule 212 (notes_list -> notes_list_element .)
    OPENING         reduce using rule 212 (notes_list -> notes_list_element .)
    AXIOMATIZATION  reduce using rule 212 (notes_list -> notes_list_element .)
    FUN             reduce using rule 212 (notes_list -> notes_list_element .)
    FUNCTION        reduce using rule 212 (notes_list -> notes_list_element .)
    INTERPRETATION  reduce using rule 212 (notes_list -> notes_list_element .)
    LEMMA           reduce using rule 212 (notes_list -> notes_list_element .)
    LOCALE          reduce using rule 212 (notes_list -> notes_list_element .)
    METHOD          reduce using rule 212 (notes_list -> notes_list_element .)
    SECTION         reduce using rule 212 (notes_list -> notes_list_element .)
    TEXT            reduce using rule 212 (notes_list -> notes_list_element .)
    TYPE_SYNONYM    reduce using rule 212 (notes_list -> notes_list_element .)
    TYPEDECL        reduce using rule 212 (notes_list -> notes_list_element .)
    END             reduce using rule 212 (notes_list -> notes_list_element .)
    AND             shift and go to state 336


state 258

    (214) notes_list_element -> thmdef . thms
    (112) thms -> . thm
    (113) thms -> . thm thms
    (109) thm -> . ID attributes
    (110) thm -> . ID
    (111) thm -> . attributes
    (117) attributes -> . LEFT_BRACKET attributes_list RIGHT_BRACKET

    ID              shift and go to state 338
    LEFT_BRACKET    shift and go to state 81

    thms                           shift and go to state 337
    thm                            shift and go to state 261
    attributes                     shift and go to state 339

state 259

    (215) notes_list_element -> thms .

    AND             reduce using rule 215 (notes_list_element -> thms .)
    FIXES           reduce using rule 215 (notes_list_element -> thms .)
    CONSTRAINS      reduce using rule 215 (notes_list_element -> thms .)
    ASSUMES         reduce using rule 215 (notes_list_element -> thms .)
    DEFINES         reduce using rule 215 (notes_list_element -> thms .)
    NOTES           reduce using rule 215 (notes_list_element -> thms .)
    BEGIN           reduce using rule 215 (notes_list_element -> thms .)
    OPENING         reduce using rule 215 (notes_list_element -> thms .)
    AXIOMATIZATION  reduce using rule 215 (notes_list_element -> thms .)
    FUN             reduce using rule 215 (notes_list_element -> thms .)
    FUNCTION        reduce using rule 215 (notes_list_element -> thms .)
    INTERPRETATION  reduce using rule 215 (notes_list_element -> thms .)
    LEMMA           reduce using rule 215 (notes_list_element -> thms .)
    LOCALE          reduce using rule 215 (notes_list_element -> thms .)
    METHOD          reduce using rule 215 (notes_list_element -> thms .)
    SECTION         reduce using rule 215 (notes_list_element -> thms .)
    TEXT            reduce using rule 215 (notes_list_element -> thms .)
    TYPE_SYNONYM    reduce using rule 215 (notes_list_element -> thms .)
    TYPEDECL        reduce using rule 215 (notes_list_element -> thms .)
    END             reduce using rule 215 (notes_list_element -> thms .)


state 260

    (108) thmdef -> thmbind . EQ

    EQ              shift and go to state 340


state 261

    (112) thms -> thm .
    (113) thms -> thm . thms
    (112) thms -> . thm
    (113) thms -> . thm thms
    (109) thm -> . ID attributes
    (110) thm -> . ID
    (111) thm -> . attributes
    (117) attributes -> . LEFT_BRACKET attributes_list RIGHT_BRACKET

    AND             reduce using rule 112 (thms -> thm .)
    FIXES           reduce using rule 112 (thms -> thm .)
    CONSTRAINS      reduce using rule 112 (thms -> thm .)
    ASSUMES         reduce using rule 112 (thms -> thm .)
    DEFINES         reduce using rule 112 (thms -> thm .)
    NOTES           reduce using rule 112 (thms -> thm .)
    BEGIN           reduce using rule 112 (thms -> thm .)
    OPENING         reduce using rule 112 (thms -> thm .)
    AXIOMATIZATION  reduce using rule 112 (thms -> thm .)
    FUN             reduce using rule 112 (thms -> thm .)
    FUNCTION        reduce using rule 112 (thms -> thm .)
    INTERPRETATION  reduce using rule 112 (thms -> thm .)
    LEMMA           reduce using rule 112 (thms -> thm .)
    LOCALE          reduce using rule 112 (thms -> thm .)
    METHOD          reduce using rule 112 (thms -> thm .)
    SECTION         reduce using rule 112 (thms -> thm .)
    TEXT            reduce using rule 112 (thms -> thm .)
    TYPE_SYNONYM    reduce using rule 112 (thms -> thm .)
    TYPEDECL        reduce using rule 112 (thms -> thm .)
    END             reduce using rule 112 (thms -> thm .)
    ID              shift and go to state 338
    LEFT_BRACKET    shift and go to state 81

    thm                            shift and go to state 261
    thms                           shift and go to state 341
    attributes                     shift and go to state 339

state 262

    (114) thmbind -> ID .
    (115) thmbind -> ID . attributes
    (109) thm -> ID . attributes
    (110) thm -> ID .
    (117) attributes -> . LEFT_BRACKET attributes_list RIGHT_BRACKET

  ! shift/reduce conflict for LEFT_BRACKET resolved as shift
    EQ              reduce using rule 114 (thmbind -> ID .)
    ID              reduce using rule 110 (thm -> ID .)
    AND             reduce using rule 110 (thm -> ID .)
    FIXES           reduce using rule 110 (thm -> ID .)
    CONSTRAINS      reduce using rule 110 (thm -> ID .)
    ASSUMES         reduce using rule 110 (thm -> ID .)
    DEFINES         reduce using rule 110 (thm -> ID .)
    NOTES           reduce using rule 110 (thm -> ID .)
    BEGIN           reduce using rule 110 (thm -> ID .)
    OPENING         reduce using rule 110 (thm -> ID .)
    AXIOMATIZATION  reduce using rule 110 (thm -> ID .)
    FUN             reduce using rule 110 (thm -> ID .)
    FUNCTION        reduce using rule 110 (thm -> ID .)
    INTERPRETATION  reduce using rule 110 (thm -> ID .)
    LEMMA           reduce using rule 110 (thm -> ID .)
    LOCALE          reduce using rule 110 (thm -> ID .)
    METHOD          reduce using rule 110 (thm -> ID .)
    SECTION         reduce using rule 110 (thm -> ID .)
    TEXT            reduce using rule 110 (thm -> ID .)
    TYPE_SYNONYM    reduce using rule 110 (thm -> ID .)
    TYPEDECL        reduce using rule 110 (thm -> ID .)
    END             reduce using rule 110 (thm -> ID .)
    LEFT_BRACKET    shift and go to state 81

  ! LEFT_BRACKET    [ reduce using rule 110 (thm -> ID .) ]

    attributes                     shift and go to state 342

state 263

    (116) thmbind -> attributes .
    (111) thm -> attributes .

    EQ              reduce using rule 116 (thmbind -> attributes .)
    ID              reduce using rule 111 (thm -> attributes .)
    LEFT_BRACKET    reduce using rule 111 (thm -> attributes .)
    AND             reduce using rule 111 (thm -> attributes .)
    FIXES           reduce using rule 111 (thm -> attributes .)
    CONSTRAINS      reduce using rule 111 (thm -> attributes .)
    ASSUMES         reduce using rule 111 (thm -> attributes .)
    DEFINES         reduce using rule 111 (thm -> attributes .)
    NOTES           reduce using rule 111 (thm -> attributes .)
    BEGIN           reduce using rule 111 (thm -> attributes .)
    OPENING         reduce using rule 111 (thm -> attributes .)
    AXIOMATIZATION  reduce using rule 111 (thm -> attributes .)
    FUN             reduce using rule 111 (thm -> attributes .)
    FUNCTION        reduce using rule 111 (thm -> attributes .)
    INTERPRETATION  reduce using rule 111 (thm -> attributes .)
    LEMMA           reduce using rule 111 (thm -> attributes .)
    LOCALE          reduce using rule 111 (thm -> attributes .)
    METHOD          reduce using rule 111 (thm -> attributes .)
    SECTION         reduce using rule 111 (thm -> attributes .)
    TEXT            reduce using rule 111 (thm -> attributes .)
    TYPE_SYNONYM    reduce using rule 111 (thm -> attributes .)
    TYPEDECL        reduce using rule 111 (thm -> attributes .)
    END             reduce using rule 111 (thm -> attributes .)


state 264

    (25) instruction -> single_instruction instruction_modifier .
    (26) instruction -> single_instruction instruction_modifier . COMMA instruction

    AXIOMATIZATION  reduce using rule 25 (instruction -> single_instruction instruction_modifier .)
    FUN             reduce using rule 25 (instruction -> single_instruction instruction_modifier .)
    FUNCTION        reduce using rule 25 (instruction -> single_instruction instruction_modifier .)
    INTERPRETATION  reduce using rule 25 (instruction -> single_instruction instruction_modifier .)
    LEMMA           reduce using rule 25 (instruction -> single_instruction instruction_modifier .)
    LOCALE          reduce using rule 25 (instruction -> single_instruction instruction_modifier .)
    METHOD          reduce using rule 25 (instruction -> single_instruction instruction_modifier .)
    SECTION         reduce using rule 25 (instruction -> single_instruction instruction_modifier .)
    TEXT            reduce using rule 25 (instruction -> single_instruction instruction_modifier .)
    TYPE_SYNONYM    reduce using rule 25 (instruction -> single_instruction instruction_modifier .)
    TYPEDECL        reduce using rule 25 (instruction -> single_instruction instruction_modifier .)
    END             reduce using rule 25 (instruction -> single_instruction instruction_modifier .)
    RIGHT_PAREN     reduce using rule 25 (instruction -> single_instruction instruction_modifier .)
    APPLY           reduce using rule 25 (instruction -> single_instruction instruction_modifier .)
    USING           reduce using rule 25 (instruction -> single_instruction instruction_modifier .)
    BY              reduce using rule 25 (instruction -> single_instruction instruction_modifier .)
    DONE            reduce using rule 25 (instruction -> single_instruction instruction_modifier .)
    SORRY           reduce using rule 25 (instruction -> single_instruction instruction_modifier .)
    SUBGOAL         reduce using rule 25 (instruction -> single_instruction instruction_modifier .)
    COMMA           shift and go to state 343


state 265

    (28) instruction -> single_instruction COMMA . instruction
    (24) instruction -> . single_instruction
    (25) instruction -> . single_instruction instruction_modifier
    (26) instruction -> . single_instruction instruction_modifier COMMA instruction
    (27) instruction -> . single_instruction SEMICOLON instruction
    (28) instruction -> . single_instruction COMMA instruction
    (29) instruction -> . LEFT_PAREN instruction RIGHT_PAREN
    (30) instruction -> . LEFT_PAREN instruction RIGHT_PAREN instruction_modifier
    (33) single_instruction -> . ID
    (34) single_instruction -> . ID method_args
    (35) single_instruction -> . LEFT_PAREN ID method_args RIGHT_PAREN
    (36) single_instruction -> . LEFT_PAREN ID method_args RIGHT_PAREN instruction_modifier

    LEFT_PAREN      shift and go to state 187
    ID              shift and go to state 188

    single_instruction             shift and go to state 186
    instruction                    shift and go to state 344

state 266

    (27) instruction -> single_instruction SEMICOLON . instruction
    (24) instruction -> . single_instruction
    (25) instruction -> . single_instruction instruction_modifier
    (26) instruction -> . single_instruction instruction_modifier COMMA instruction
    (27) instruction -> . single_instruction SEMICOLON instruction
    (28) instruction -> . single_instruction COMMA instruction
    (29) instruction -> . LEFT_PAREN instruction RIGHT_PAREN
    (30) instruction -> . LEFT_PAREN instruction RIGHT_PAREN instruction_modifier
    (33) single_instruction -> . ID
    (34) single_instruction -> . ID method_args
    (35) single_instruction -> . LEFT_PAREN ID method_args RIGHT_PAREN
    (36) single_instruction -> . LEFT_PAREN ID method_args RIGHT_PAREN instruction_modifier

    LEFT_PAREN      shift and go to state 187
    ID              shift and go to state 188

    single_instruction             shift and go to state 186
    instruction                    shift and go to state 345

state 267

    (31) instruction_modifier -> PLUS .

    COMMA           reduce using rule 31 (instruction_modifier -> PLUS .)
    AXIOMATIZATION  reduce using rule 31 (instruction_modifier -> PLUS .)
    FUN             reduce using rule 31 (instruction_modifier -> PLUS .)
    FUNCTION        reduce using rule 31 (instruction_modifier -> PLUS .)
    INTERPRETATION  reduce using rule 31 (instruction_modifier -> PLUS .)
    LEMMA           reduce using rule 31 (instruction_modifier -> PLUS .)
    LOCALE          reduce using rule 31 (instruction_modifier -> PLUS .)
    METHOD          reduce using rule 31 (instruction_modifier -> PLUS .)
    SECTION         reduce using rule 31 (instruction_modifier -> PLUS .)
    TEXT            reduce using rule 31 (instruction_modifier -> PLUS .)
    TYPE_SYNONYM    reduce using rule 31 (instruction_modifier -> PLUS .)
    TYPEDECL        reduce using rule 31 (instruction_modifier -> PLUS .)
    END             reduce using rule 31 (instruction_modifier -> PLUS .)
    RIGHT_PAREN     reduce using rule 31 (instruction_modifier -> PLUS .)
    APPLY           reduce using rule 31 (instruction_modifier -> PLUS .)
    USING           reduce using rule 31 (instruction_modifier -> PLUS .)
    BY              reduce using rule 31 (instruction_modifier -> PLUS .)
    DONE            reduce using rule 31 (instruction_modifier -> PLUS .)
    SORRY           reduce using rule 31 (instruction_modifier -> PLUS .)
    SUBGOAL         reduce using rule 31 (instruction_modifier -> PLUS .)
    SEMICOLON       reduce using rule 31 (instruction_modifier -> PLUS .)
    PLUS            reduce using rule 31 (instruction_modifier -> PLUS .)
    QUESTION_MARK   reduce using rule 31 (instruction_modifier -> PLUS .)


state 268

    (32) instruction_modifier -> QUESTION_MARK .

    COMMA           reduce using rule 32 (instruction_modifier -> QUESTION_MARK .)
    AXIOMATIZATION  reduce using rule 32 (instruction_modifier -> QUESTION_MARK .)
    FUN             reduce using rule 32 (instruction_modifier -> QUESTION_MARK .)
    FUNCTION        reduce using rule 32 (instruction_modifier -> QUESTION_MARK .)
    INTERPRETATION  reduce using rule 32 (instruction_modifier -> QUESTION_MARK .)
    LEMMA           reduce using rule 32 (instruction_modifier -> QUESTION_MARK .)
    LOCALE          reduce using rule 32 (instruction_modifier -> QUESTION_MARK .)
    METHOD          reduce using rule 32 (instruction_modifier -> QUESTION_MARK .)
    SECTION         reduce using rule 32 (instruction_modifier -> QUESTION_MARK .)
    TEXT            reduce using rule 32 (instruction_modifier -> QUESTION_MARK .)
    TYPE_SYNONYM    reduce using rule 32 (instruction_modifier -> QUESTION_MARK .)
    TYPEDECL        reduce using rule 32 (instruction_modifier -> QUESTION_MARK .)
    END             reduce using rule 32 (instruction_modifier -> QUESTION_MARK .)
    RIGHT_PAREN     reduce using rule 32 (instruction_modifier -> QUESTION_MARK .)
    APPLY           reduce using rule 32 (instruction_modifier -> QUESTION_MARK .)
    USING           reduce using rule 32 (instruction_modifier -> QUESTION_MARK .)
    BY              reduce using rule 32 (instruction_modifier -> QUESTION_MARK .)
    DONE            reduce using rule 32 (instruction_modifier -> QUESTION_MARK .)
    SORRY           reduce using rule 32 (instruction_modifier -> QUESTION_MARK .)
    SUBGOAL         reduce using rule 32 (instruction_modifier -> QUESTION_MARK .)
    SEMICOLON       reduce using rule 32 (instruction_modifier -> QUESTION_MARK .)
    PLUS            reduce using rule 32 (instruction_modifier -> QUESTION_MARK .)
    QUESTION_MARK   reduce using rule 32 (instruction_modifier -> QUESTION_MARK .)


state 269

    (29) instruction -> LEFT_PAREN instruction . RIGHT_PAREN
    (30) instruction -> LEFT_PAREN instruction . RIGHT_PAREN instruction_modifier

    RIGHT_PAREN     shift and go to state 346


state 270

    (35) single_instruction -> LEFT_PAREN ID . method_args RIGHT_PAREN
    (36) single_instruction -> LEFT_PAREN ID . method_args RIGHT_PAREN instruction_modifier
    (33) single_instruction -> ID .
    (34) single_instruction -> ID . method_args
    (37) method_args -> . ID COLON method_arg method_args
    (38) method_args -> . method_arg method_args
    (39) method_args -> . empty
    (40) method_arg -> . ID
    (41) method_arg -> . ID LEFT_PAREN NAT RIGHT_PAREN
    (42) method_arg -> . ID DOT ID
    (43) method_arg -> . ID DOT ID LEFT_PAREN NAT RIGHT_PAREN
    (44) method_arg -> . QUOTED_STRING
    (261) empty -> .

  ! reduce/reduce conflict for RIGHT_PAREN resolved using rule 33 (single_instruction -> ID .)
  ! reduce/reduce conflict for SEMICOLON resolved using rule 33 (single_instruction -> ID .)
  ! reduce/reduce conflict for COMMA resolved using rule 33 (single_instruction -> ID .)
  ! reduce/reduce conflict for PLUS resolved using rule 33 (single_instruction -> ID .)
  ! reduce/reduce conflict for QUESTION_MARK resolved using rule 33 (single_instruction -> ID .)
    SEMICOLON       reduce using rule 33 (single_instruction -> ID .)
    COMMA           reduce using rule 33 (single_instruction -> ID .)
    PLUS            reduce using rule 33 (single_instruction -> ID .)
    QUESTION_MARK   reduce using rule 33 (single_instruction -> ID .)
    RIGHT_PAREN     reduce using rule 33 (single_instruction -> ID .)
    ID              shift and go to state 271
    QUOTED_STRING   shift and go to state 275

  ! RIGHT_PAREN     [ reduce using rule 261 (empty -> .) ]
  ! SEMICOLON       [ reduce using rule 261 (empty -> .) ]
  ! COMMA           [ reduce using rule 261 (empty -> .) ]
  ! PLUS            [ reduce using rule 261 (empty -> .) ]
  ! QUESTION_MARK   [ reduce using rule 261 (empty -> .) ]

    method_args                    shift and go to state 347
    method_arg                     shift and go to state 273
    empty                          shift and go to state 274

state 271

    (37) method_args -> ID . COLON method_arg method_args
    (40) method_arg -> ID .
    (41) method_arg -> ID . LEFT_PAREN NAT RIGHT_PAREN
    (42) method_arg -> ID . DOT ID
    (43) method_arg -> ID . DOT ID LEFT_PAREN NAT RIGHT_PAREN

    COLON           shift and go to state 348
    ID              reduce using rule 40 (method_arg -> ID .)
    QUOTED_STRING   reduce using rule 40 (method_arg -> ID .)
    SEMICOLON       reduce using rule 40 (method_arg -> ID .)
    COMMA           reduce using rule 40 (method_arg -> ID .)
    PLUS            reduce using rule 40 (method_arg -> ID .)
    QUESTION_MARK   reduce using rule 40 (method_arg -> ID .)
    AXIOMATIZATION  reduce using rule 40 (method_arg -> ID .)
    FUN             reduce using rule 40 (method_arg -> ID .)
    FUNCTION        reduce using rule 40 (method_arg -> ID .)
    INTERPRETATION  reduce using rule 40 (method_arg -> ID .)
    LEMMA           reduce using rule 40 (method_arg -> ID .)
    LOCALE          reduce using rule 40 (method_arg -> ID .)
    METHOD          reduce using rule 40 (method_arg -> ID .)
    SECTION         reduce using rule 40 (method_arg -> ID .)
    TEXT            reduce using rule 40 (method_arg -> ID .)
    TYPE_SYNONYM    reduce using rule 40 (method_arg -> ID .)
    TYPEDECL        reduce using rule 40 (method_arg -> ID .)
    END             reduce using rule 40 (method_arg -> ID .)
    RIGHT_PAREN     reduce using rule 40 (method_arg -> ID .)
    APPLY           reduce using rule 40 (method_arg -> ID .)
    USING           reduce using rule 40 (method_arg -> ID .)
    BY              reduce using rule 40 (method_arg -> ID .)
    DONE            reduce using rule 40 (method_arg -> ID .)
    SORRY           reduce using rule 40 (method_arg -> ID .)
    SUBGOAL         reduce using rule 40 (method_arg -> ID .)
    LEFT_PAREN      shift and go to state 349
    DOT             shift and go to state 350


state 272

    (34) single_instruction -> ID method_args .

    SEMICOLON       reduce using rule 34 (single_instruction -> ID method_args .)
    COMMA           reduce using rule 34 (single_instruction -> ID method_args .)
    PLUS            reduce using rule 34 (single_instruction -> ID method_args .)
    QUESTION_MARK   reduce using rule 34 (single_instruction -> ID method_args .)
    AXIOMATIZATION  reduce using rule 34 (single_instruction -> ID method_args .)
    FUN             reduce using rule 34 (single_instruction -> ID method_args .)
    FUNCTION        reduce using rule 34 (single_instruction -> ID method_args .)
    INTERPRETATION  reduce using rule 34 (single_instruction -> ID method_args .)
    LEMMA           reduce using rule 34 (single_instruction -> ID method_args .)
    LOCALE          reduce using rule 34 (single_instruction -> ID method_args .)
    METHOD          reduce using rule 34 (single_instruction -> ID method_args .)
    SECTION         reduce using rule 34 (single_instruction -> ID method_args .)
    TEXT            reduce using rule 34 (single_instruction -> ID method_args .)
    TYPE_SYNONYM    reduce using rule 34 (single_instruction -> ID method_args .)
    TYPEDECL        reduce using rule 34 (single_instruction -> ID method_args .)
    END             reduce using rule 34 (single_instruction -> ID method_args .)
    RIGHT_PAREN     reduce using rule 34 (single_instruction -> ID method_args .)
    APPLY           reduce using rule 34 (single_instruction -> ID method_args .)
    USING           reduce using rule 34 (single_instruction -> ID method_args .)
    BY              reduce using rule 34 (single_instruction -> ID method_args .)
    DONE            reduce using rule 34 (single_instruction -> ID method_args .)
    SORRY           reduce using rule 34 (single_instruction -> ID method_args .)
    SUBGOAL         reduce using rule 34 (single_instruction -> ID method_args .)


state 273

    (38) method_args -> method_arg . method_args
    (37) method_args -> . ID COLON method_arg method_args
    (38) method_args -> . method_arg method_args
    (39) method_args -> . empty
    (40) method_arg -> . ID
    (41) method_arg -> . ID LEFT_PAREN NAT RIGHT_PAREN
    (42) method_arg -> . ID DOT ID
    (43) method_arg -> . ID DOT ID LEFT_PAREN NAT RIGHT_PAREN
    (44) method_arg -> . QUOTED_STRING
    (261) empty -> .

    ID              shift and go to state 271
    QUOTED_STRING   shift and go to state 275
    SEMICOLON       reduce using rule 261 (empty -> .)
    COMMA           reduce using rule 261 (empty -> .)
    PLUS            reduce using rule 261 (empty -> .)
    QUESTION_MARK   reduce using rule 261 (empty -> .)
    AXIOMATIZATION  reduce using rule 261 (empty -> .)
    FUN             reduce using rule 261 (empty -> .)
    FUNCTION        reduce using rule 261 (empty -> .)
    INTERPRETATION  reduce using rule 261 (empty -> .)
    LEMMA           reduce using rule 261 (empty -> .)
    LOCALE          reduce using rule 261 (empty -> .)
    METHOD          reduce using rule 261 (empty -> .)
    SECTION         reduce using rule 261 (empty -> .)
    TEXT            reduce using rule 261 (empty -> .)
    TYPE_SYNONYM    reduce using rule 261 (empty -> .)
    TYPEDECL        reduce using rule 261 (empty -> .)
    END             reduce using rule 261 (empty -> .)
    RIGHT_PAREN     reduce using rule 261 (empty -> .)
    APPLY           reduce using rule 261 (empty -> .)
    USING           reduce using rule 261 (empty -> .)
    BY              reduce using rule 261 (empty -> .)
    DONE            reduce using rule 261 (empty -> .)
    SORRY           reduce using rule 261 (empty -> .)
    SUBGOAL         reduce using rule 261 (empty -> .)

    method_arg                     shift and go to state 273
    method_args                    shift and go to state 351
    empty                          shift and go to state 274

state 274

    (39) method_args -> empty .

    SEMICOLON       reduce using rule 39 (method_args -> empty .)
    COMMA           reduce using rule 39 (method_args -> empty .)
    PLUS            reduce using rule 39 (method_args -> empty .)
    QUESTION_MARK   reduce using rule 39 (method_args -> empty .)
    AXIOMATIZATION  reduce using rule 39 (method_args -> empty .)
    FUN             reduce using rule 39 (method_args -> empty .)
    FUNCTION        reduce using rule 39 (method_args -> empty .)
    INTERPRETATION  reduce using rule 39 (method_args -> empty .)
    LEMMA           reduce using rule 39 (method_args -> empty .)
    LOCALE          reduce using rule 39 (method_args -> empty .)
    METHOD          reduce using rule 39 (method_args -> empty .)
    SECTION         reduce using rule 39 (method_args -> empty .)
    TEXT            reduce using rule 39 (method_args -> empty .)
    TYPE_SYNONYM    reduce using rule 39 (method_args -> empty .)
    TYPEDECL        reduce using rule 39 (method_args -> empty .)
    END             reduce using rule 39 (method_args -> empty .)
    RIGHT_PAREN     reduce using rule 39 (method_args -> empty .)
    APPLY           reduce using rule 39 (method_args -> empty .)
    USING           reduce using rule 39 (method_args -> empty .)
    BY              reduce using rule 39 (method_args -> empty .)
    DONE            reduce using rule 39 (method_args -> empty .)
    SORRY           reduce using rule 39 (method_args -> empty .)
    SUBGOAL         reduce using rule 39 (method_args -> empty .)


state 275

    (44) method_arg -> QUOTED_STRING .

    ID              reduce using rule 44 (method_arg -> QUOTED_STRING .)
    QUOTED_STRING   reduce using rule 44 (method_arg -> QUOTED_STRING .)
    SEMICOLON       reduce using rule 44 (method_arg -> QUOTED_STRING .)
    COMMA           reduce using rule 44 (method_arg -> QUOTED_STRING .)
    PLUS            reduce using rule 44 (method_arg -> QUOTED_STRING .)
    QUESTION_MARK   reduce using rule 44 (method_arg -> QUOTED_STRING .)
    AXIOMATIZATION  reduce using rule 44 (method_arg -> QUOTED_STRING .)
    FUN             reduce using rule 44 (method_arg -> QUOTED_STRING .)
    FUNCTION        reduce using rule 44 (method_arg -> QUOTED_STRING .)
    INTERPRETATION  reduce using rule 44 (method_arg -> QUOTED_STRING .)
    LEMMA           reduce using rule 44 (method_arg -> QUOTED_STRING .)
    LOCALE          reduce using rule 44 (method_arg -> QUOTED_STRING .)
    METHOD          reduce using rule 44 (method_arg -> QUOTED_STRING .)
    SECTION         reduce using rule 44 (method_arg -> QUOTED_STRING .)
    TEXT            reduce using rule 44 (method_arg -> QUOTED_STRING .)
    TYPE_SYNONYM    reduce using rule 44 (method_arg -> QUOTED_STRING .)
    TYPEDECL        reduce using rule 44 (method_arg -> QUOTED_STRING .)
    END             reduce using rule 44 (method_arg -> QUOTED_STRING .)
    RIGHT_PAREN     reduce using rule 44 (method_arg -> QUOTED_STRING .)
    APPLY           reduce using rule 44 (method_arg -> QUOTED_STRING .)
    USING           reduce using rule 44 (method_arg -> QUOTED_STRING .)
    BY              reduce using rule 44 (method_arg -> QUOTED_STRING .)
    DONE            reduce using rule 44 (method_arg -> QUOTED_STRING .)
    SORRY           reduce using rule 44 (method_arg -> QUOTED_STRING .)
    SUBGOAL         reduce using rule 44 (method_arg -> QUOTED_STRING .)


state 276

    (220) type_synonym -> TYPE_SYNONYM typespec EQUALS ID mixfix .

    AXIOMATIZATION  reduce using rule 220 (type_synonym -> TYPE_SYNONYM typespec EQUALS ID mixfix .)
    FUN             reduce using rule 220 (type_synonym -> TYPE_SYNONYM typespec EQUALS ID mixfix .)
    FUNCTION        reduce using rule 220 (type_synonym -> TYPE_SYNONYM typespec EQUALS ID mixfix .)
    INTERPRETATION  reduce using rule 220 (type_synonym -> TYPE_SYNONYM typespec EQUALS ID mixfix .)
    LEMMA           reduce using rule 220 (type_synonym -> TYPE_SYNONYM typespec EQUALS ID mixfix .)
    LOCALE          reduce using rule 220 (type_synonym -> TYPE_SYNONYM typespec EQUALS ID mixfix .)
    METHOD          reduce using rule 220 (type_synonym -> TYPE_SYNONYM typespec EQUALS ID mixfix .)
    SECTION         reduce using rule 220 (type_synonym -> TYPE_SYNONYM typespec EQUALS ID mixfix .)
    TEXT            reduce using rule 220 (type_synonym -> TYPE_SYNONYM typespec EQUALS ID mixfix .)
    TYPE_SYNONYM    reduce using rule 220 (type_synonym -> TYPE_SYNONYM typespec EQUALS ID mixfix .)
    TYPEDECL        reduce using rule 220 (type_synonym -> TYPE_SYNONYM typespec EQUALS ID mixfix .)
    END             reduce using rule 220 (type_synonym -> TYPE_SYNONYM typespec EQUALS ID mixfix .)


state 277

    (80) typearg -> ID COLON COLON ID .

    COMMA           reduce using rule 80 (typearg -> ID COLON COLON ID .)
    ID              reduce using rule 80 (typearg -> ID COLON COLON ID .)
    RIGHT_PAREN     reduce using rule 80 (typearg -> ID COLON COLON ID .)


state 278

    (140) prop_list -> ID prop_list .

    FOR             reduce using rule 140 (prop_list -> ID prop_list .)
    PIPE            reduce using rule 140 (prop_list -> ID prop_list .)
    AXIOMATIZATION  reduce using rule 140 (prop_list -> ID prop_list .)
    FUN             reduce using rule 140 (prop_list -> ID prop_list .)
    FUNCTION        reduce using rule 140 (prop_list -> ID prop_list .)
    INTERPRETATION  reduce using rule 140 (prop_list -> ID prop_list .)
    LEMMA           reduce using rule 140 (prop_list -> ID prop_list .)
    LOCALE          reduce using rule 140 (prop_list -> ID prop_list .)
    METHOD          reduce using rule 140 (prop_list -> ID prop_list .)
    SECTION         reduce using rule 140 (prop_list -> ID prop_list .)
    TEXT            reduce using rule 140 (prop_list -> ID prop_list .)
    TYPE_SYNONYM    reduce using rule 140 (prop_list -> ID prop_list .)
    TYPEDECL        reduce using rule 140 (prop_list -> ID prop_list .)
    END             reduce using rule 140 (prop_list -> ID prop_list .)
    FIXES           reduce using rule 140 (prop_list -> ID prop_list .)
    CONSTRAINS      reduce using rule 140 (prop_list -> ID prop_list .)
    ASSUMES         reduce using rule 140 (prop_list -> ID prop_list .)
    DEFINES         reduce using rule 140 (prop_list -> ID prop_list .)
    NOTES           reduce using rule 140 (prop_list -> ID prop_list .)
    BEGIN           reduce using rule 140 (prop_list -> ID prop_list .)
    OPENING         reduce using rule 140 (prop_list -> ID prop_list .)


state 279

    (141) prop_list -> ID AND . prop_list
    (139) prop_list -> . ID
    (140) prop_list -> . ID prop_list
    (141) prop_list -> . ID AND prop_list

    ID              shift and go to state 195

    prop_list                      shift and go to state 352

state 280

    (151) axiomatization_header -> thmdecl ID AND axiomatization_header .

    IF              reduce using rule 151 (axiomatization_header -> thmdecl ID AND axiomatization_header .)
    FOR             reduce using rule 151 (axiomatization_header -> thmdecl ID AND axiomatization_header .)


state 281

    (152) axiomatization_header -> thmdecl QUOTED_STRING AND axiomatization_header .

    IF              reduce using rule 152 (axiomatization_header -> thmdecl QUOTED_STRING AND axiomatization_header .)
    FOR             reduce using rule 152 (axiomatization_header -> thmdecl QUOTED_STRING AND axiomatization_header .)


state 282

    (120) attributes_list -> attribute COMMA attributes_list .

    RIGHT_BRACKET   reduce using rule 120 (attributes_list -> attribute COMMA attributes_list .)


state 283

    (124) args -> arg args .

    COMMA           reduce using rule 124 (args -> arg args .)
    RIGHT_BRACKET   reduce using rule 124 (args -> arg args .)
    RIGHT_PAREN     reduce using rule 124 (args -> arg args .)


state 284

    (126) arg -> LEFT_PAREN args . RIGHT_PAREN

    RIGHT_PAREN     shift and go to state 353


state 285

    (127) arg -> LEFT_BRACKET args . RIGHT_BRACKET

    RIGHT_BRACKET   shift and go to state 354


state 286

    (94) var -> ID COLON COLON ID mixfix .

    AND             reduce using rule 94 (var -> ID COLON COLON ID mixfix .)
    WHERE           reduce using rule 94 (var -> ID COLON COLON ID mixfix .)
    AXIOMATIZATION  reduce using rule 94 (var -> ID COLON COLON ID mixfix .)
    FUN             reduce using rule 94 (var -> ID COLON COLON ID mixfix .)
    FUNCTION        reduce using rule 94 (var -> ID COLON COLON ID mixfix .)
    INTERPRETATION  reduce using rule 94 (var -> ID COLON COLON ID mixfix .)
    LEMMA           reduce using rule 94 (var -> ID COLON COLON ID mixfix .)
    LOCALE          reduce using rule 94 (var -> ID COLON COLON ID mixfix .)
    METHOD          reduce using rule 94 (var -> ID COLON COLON ID mixfix .)
    SECTION         reduce using rule 94 (var -> ID COLON COLON ID mixfix .)
    TEXT            reduce using rule 94 (var -> ID COLON COLON ID mixfix .)
    TYPE_SYNONYM    reduce using rule 94 (var -> ID COLON COLON ID mixfix .)
    TYPEDECL        reduce using rule 94 (var -> ID COLON COLON ID mixfix .)
    END             reduce using rule 94 (var -> ID COLON COLON ID mixfix .)
    OPENING         reduce using rule 94 (var -> ID COLON COLON ID mixfix .)
    BEGIN           reduce using rule 94 (var -> ID COLON COLON ID mixfix .)
    PIPE            reduce using rule 94 (var -> ID COLON COLON ID mixfix .)
    FIXES           reduce using rule 94 (var -> ID COLON COLON ID mixfix .)
    CONSTRAINS      reduce using rule 94 (var -> ID COLON COLON ID mixfix .)
    ASSUMES         reduce using rule 94 (var -> ID COLON COLON ID mixfix .)
    DEFINES         reduce using rule 94 (var -> ID COLON COLON ID mixfix .)
    NOTES           reduce using rule 94 (var -> ID COLON COLON ID mixfix .)


state 287

    (96) var -> ID COLON COLON QUOTED_STRING mixfix .

    AND             reduce using rule 96 (var -> ID COLON COLON QUOTED_STRING mixfix .)
    WHERE           reduce using rule 96 (var -> ID COLON COLON QUOTED_STRING mixfix .)
    AXIOMATIZATION  reduce using rule 96 (var -> ID COLON COLON QUOTED_STRING mixfix .)
    FUN             reduce using rule 96 (var -> ID COLON COLON QUOTED_STRING mixfix .)
    FUNCTION        reduce using rule 96 (var -> ID COLON COLON QUOTED_STRING mixfix .)
    INTERPRETATION  reduce using rule 96 (var -> ID COLON COLON QUOTED_STRING mixfix .)
    LEMMA           reduce using rule 96 (var -> ID COLON COLON QUOTED_STRING mixfix .)
    LOCALE          reduce using rule 96 (var -> ID COLON COLON QUOTED_STRING mixfix .)
    METHOD          reduce using rule 96 (var -> ID COLON COLON QUOTED_STRING mixfix .)
    SECTION         reduce using rule 96 (var -> ID COLON COLON QUOTED_STRING mixfix .)
    TEXT            reduce using rule 96 (var -> ID COLON COLON QUOTED_STRING mixfix .)
    TYPE_SYNONYM    reduce using rule 96 (var -> ID COLON COLON QUOTED_STRING mixfix .)
    TYPEDECL        reduce using rule 96 (var -> ID COLON COLON QUOTED_STRING mixfix .)
    END             reduce using rule 96 (var -> ID COLON COLON QUOTED_STRING mixfix .)
    OPENING         reduce using rule 96 (var -> ID COLON COLON QUOTED_STRING mixfix .)
    BEGIN           reduce using rule 96 (var -> ID COLON COLON QUOTED_STRING mixfix .)
    PIPE            reduce using rule 96 (var -> ID COLON COLON QUOTED_STRING mixfix .)
    FIXES           reduce using rule 96 (var -> ID COLON COLON QUOTED_STRING mixfix .)
    CONSTRAINS      reduce using rule 96 (var -> ID COLON COLON QUOTED_STRING mixfix .)
    ASSUMES         reduce using rule 96 (var -> ID COLON COLON QUOTED_STRING mixfix .)
    DEFINES         reduce using rule 96 (var -> ID COLON COLON QUOTED_STRING mixfix .)
    NOTES           reduce using rule 96 (var -> ID COLON COLON QUOTED_STRING mixfix .)


state 288

    (222) mixfix -> LEFT_PAREN template prios RIGHT_PAREN .

    AND             reduce using rule 222 (mixfix -> LEFT_PAREN template prios RIGHT_PAREN .)
    WHERE           reduce using rule 222 (mixfix -> LEFT_PAREN template prios RIGHT_PAREN .)
    AXIOMATIZATION  reduce using rule 222 (mixfix -> LEFT_PAREN template prios RIGHT_PAREN .)
    FUN             reduce using rule 222 (mixfix -> LEFT_PAREN template prios RIGHT_PAREN .)
    FUNCTION        reduce using rule 222 (mixfix -> LEFT_PAREN template prios RIGHT_PAREN .)
    INTERPRETATION  reduce using rule 222 (mixfix -> LEFT_PAREN template prios RIGHT_PAREN .)
    LEMMA           reduce using rule 222 (mixfix -> LEFT_PAREN template prios RIGHT_PAREN .)
    LOCALE          reduce using rule 222 (mixfix -> LEFT_PAREN template prios RIGHT_PAREN .)
    METHOD          reduce using rule 222 (mixfix -> LEFT_PAREN template prios RIGHT_PAREN .)
    SECTION         reduce using rule 222 (mixfix -> LEFT_PAREN template prios RIGHT_PAREN .)
    TEXT            reduce using rule 222 (mixfix -> LEFT_PAREN template prios RIGHT_PAREN .)
    TYPE_SYNONYM    reduce using rule 222 (mixfix -> LEFT_PAREN template prios RIGHT_PAREN .)
    TYPEDECL        reduce using rule 222 (mixfix -> LEFT_PAREN template prios RIGHT_PAREN .)
    END             reduce using rule 222 (mixfix -> LEFT_PAREN template prios RIGHT_PAREN .)
    OPENING         reduce using rule 222 (mixfix -> LEFT_PAREN template prios RIGHT_PAREN .)
    BEGIN           reduce using rule 222 (mixfix -> LEFT_PAREN template prios RIGHT_PAREN .)
    PIPE            reduce using rule 222 (mixfix -> LEFT_PAREN template prios RIGHT_PAREN .)
    FIXES           reduce using rule 222 (mixfix -> LEFT_PAREN template prios RIGHT_PAREN .)
    CONSTRAINS      reduce using rule 222 (mixfix -> LEFT_PAREN template prios RIGHT_PAREN .)
    ASSUMES         reduce using rule 222 (mixfix -> LEFT_PAREN template prios RIGHT_PAREN .)
    DEFINES         reduce using rule 222 (mixfix -> LEFT_PAREN template prios RIGHT_PAREN .)
    NOTES           reduce using rule 222 (mixfix -> LEFT_PAREN template prios RIGHT_PAREN .)


state 289

    (224) mixfix -> LEFT_PAREN template prios NAT . RIGHT_PAREN

    RIGHT_PAREN     shift and go to state 355


state 290

    (223) mixfix -> LEFT_PAREN template NAT RIGHT_PAREN .

    AND             reduce using rule 223 (mixfix -> LEFT_PAREN template NAT RIGHT_PAREN .)
    WHERE           reduce using rule 223 (mixfix -> LEFT_PAREN template NAT RIGHT_PAREN .)
    AXIOMATIZATION  reduce using rule 223 (mixfix -> LEFT_PAREN template NAT RIGHT_PAREN .)
    FUN             reduce using rule 223 (mixfix -> LEFT_PAREN template NAT RIGHT_PAREN .)
    FUNCTION        reduce using rule 223 (mixfix -> LEFT_PAREN template NAT RIGHT_PAREN .)
    INTERPRETATION  reduce using rule 223 (mixfix -> LEFT_PAREN template NAT RIGHT_PAREN .)
    LEMMA           reduce using rule 223 (mixfix -> LEFT_PAREN template NAT RIGHT_PAREN .)
    LOCALE          reduce using rule 223 (mixfix -> LEFT_PAREN template NAT RIGHT_PAREN .)
    METHOD          reduce using rule 223 (mixfix -> LEFT_PAREN template NAT RIGHT_PAREN .)
    SECTION         reduce using rule 223 (mixfix -> LEFT_PAREN template NAT RIGHT_PAREN .)
    TEXT            reduce using rule 223 (mixfix -> LEFT_PAREN template NAT RIGHT_PAREN .)
    TYPE_SYNONYM    reduce using rule 223 (mixfix -> LEFT_PAREN template NAT RIGHT_PAREN .)
    TYPEDECL        reduce using rule 223 (mixfix -> LEFT_PAREN template NAT RIGHT_PAREN .)
    END             reduce using rule 223 (mixfix -> LEFT_PAREN template NAT RIGHT_PAREN .)
    OPENING         reduce using rule 223 (mixfix -> LEFT_PAREN template NAT RIGHT_PAREN .)
    BEGIN           reduce using rule 223 (mixfix -> LEFT_PAREN template NAT RIGHT_PAREN .)
    PIPE            reduce using rule 223 (mixfix -> LEFT_PAREN template NAT RIGHT_PAREN .)
    FIXES           reduce using rule 223 (mixfix -> LEFT_PAREN template NAT RIGHT_PAREN .)
    CONSTRAINS      reduce using rule 223 (mixfix -> LEFT_PAREN template NAT RIGHT_PAREN .)
    ASSUMES         reduce using rule 223 (mixfix -> LEFT_PAREN template NAT RIGHT_PAREN .)
    DEFINES         reduce using rule 223 (mixfix -> LEFT_PAREN template NAT RIGHT_PAREN .)
    NOTES           reduce using rule 223 (mixfix -> LEFT_PAREN template NAT RIGHT_PAREN .)


state 291

    (233) prios -> LEFT_BRACKET nat_list . RIGHT_BRACKET

    RIGHT_BRACKET   shift and go to state 356


state 292

    (235) nat_list -> NAT .
    (236) nat_list -> NAT . COMMA nat_list

    RIGHT_BRACKET   reduce using rule 235 (nat_list -> NAT .)
    COMMA           shift and go to state 357


state 293

    (225) mixfix -> LEFT_PAREN INFIX template NAT . RIGHT_PAREN

    RIGHT_PAREN     shift and go to state 358


state 294

    (226) mixfix -> LEFT_PAREN INFIXL template NAT . RIGHT_PAREN

    RIGHT_PAREN     shift and go to state 359


state 295

    (227) mixfix -> LEFT_PAREN INFIXR template NAT . RIGHT_PAREN

    RIGHT_PAREN     shift and go to state 360


state 296

    (228) mixfix -> BINDER template NAT RIGHT_PAREN .

    AND             reduce using rule 228 (mixfix -> BINDER template NAT RIGHT_PAREN .)
    WHERE           reduce using rule 228 (mixfix -> BINDER template NAT RIGHT_PAREN .)
    AXIOMATIZATION  reduce using rule 228 (mixfix -> BINDER template NAT RIGHT_PAREN .)
    FUN             reduce using rule 228 (mixfix -> BINDER template NAT RIGHT_PAREN .)
    FUNCTION        reduce using rule 228 (mixfix -> BINDER template NAT RIGHT_PAREN .)
    INTERPRETATION  reduce using rule 228 (mixfix -> BINDER template NAT RIGHT_PAREN .)
    LEMMA           reduce using rule 228 (mixfix -> BINDER template NAT RIGHT_PAREN .)
    LOCALE          reduce using rule 228 (mixfix -> BINDER template NAT RIGHT_PAREN .)
    METHOD          reduce using rule 228 (mixfix -> BINDER template NAT RIGHT_PAREN .)
    SECTION         reduce using rule 228 (mixfix -> BINDER template NAT RIGHT_PAREN .)
    TEXT            reduce using rule 228 (mixfix -> BINDER template NAT RIGHT_PAREN .)
    TYPE_SYNONYM    reduce using rule 228 (mixfix -> BINDER template NAT RIGHT_PAREN .)
    TYPEDECL        reduce using rule 228 (mixfix -> BINDER template NAT RIGHT_PAREN .)
    END             reduce using rule 228 (mixfix -> BINDER template NAT RIGHT_PAREN .)
    OPENING         reduce using rule 228 (mixfix -> BINDER template NAT RIGHT_PAREN .)
    BEGIN           reduce using rule 228 (mixfix -> BINDER template NAT RIGHT_PAREN .)
    PIPE            reduce using rule 228 (mixfix -> BINDER template NAT RIGHT_PAREN .)
    FIXES           reduce using rule 228 (mixfix -> BINDER template NAT RIGHT_PAREN .)
    CONSTRAINS      reduce using rule 228 (mixfix -> BINDER template NAT RIGHT_PAREN .)
    ASSUMES         reduce using rule 228 (mixfix -> BINDER template NAT RIGHT_PAREN .)
    DEFINES         reduce using rule 228 (mixfix -> BINDER template NAT RIGHT_PAREN .)
    NOTES           reduce using rule 228 (mixfix -> BINDER template NAT RIGHT_PAREN .)


state 297

    (229) mixfix -> BINDER template prio NAT . RIGHT_PAREN

    RIGHT_PAREN     shift and go to state 361


state 298

    (234) prio -> LEFT_BRACKET NAT . RIGHT_BRACKET

    RIGHT_BRACKET   shift and go to state 362


state 299

    (95) var -> GREEK COLON COLON ID mixfix .

    AND             reduce using rule 95 (var -> GREEK COLON COLON ID mixfix .)
    WHERE           reduce using rule 95 (var -> GREEK COLON COLON ID mixfix .)
    AXIOMATIZATION  reduce using rule 95 (var -> GREEK COLON COLON ID mixfix .)
    FUN             reduce using rule 95 (var -> GREEK COLON COLON ID mixfix .)
    FUNCTION        reduce using rule 95 (var -> GREEK COLON COLON ID mixfix .)
    INTERPRETATION  reduce using rule 95 (var -> GREEK COLON COLON ID mixfix .)
    LEMMA           reduce using rule 95 (var -> GREEK COLON COLON ID mixfix .)
    LOCALE          reduce using rule 95 (var -> GREEK COLON COLON ID mixfix .)
    METHOD          reduce using rule 95 (var -> GREEK COLON COLON ID mixfix .)
    SECTION         reduce using rule 95 (var -> GREEK COLON COLON ID mixfix .)
    TEXT            reduce using rule 95 (var -> GREEK COLON COLON ID mixfix .)
    TYPE_SYNONYM    reduce using rule 95 (var -> GREEK COLON COLON ID mixfix .)
    TYPEDECL        reduce using rule 95 (var -> GREEK COLON COLON ID mixfix .)
    END             reduce using rule 95 (var -> GREEK COLON COLON ID mixfix .)
    OPENING         reduce using rule 95 (var -> GREEK COLON COLON ID mixfix .)
    BEGIN           reduce using rule 95 (var -> GREEK COLON COLON ID mixfix .)
    PIPE            reduce using rule 95 (var -> GREEK COLON COLON ID mixfix .)
    FIXES           reduce using rule 95 (var -> GREEK COLON COLON ID mixfix .)
    CONSTRAINS      reduce using rule 95 (var -> GREEK COLON COLON ID mixfix .)
    ASSUMES         reduce using rule 95 (var -> GREEK COLON COLON ID mixfix .)
    DEFINES         reduce using rule 95 (var -> GREEK COLON COLON ID mixfix .)
    NOTES           reduce using rule 95 (var -> GREEK COLON COLON ID mixfix .)


state 300

    (97) var -> GREEK COLON COLON QUOTED_STRING mixfix .

    AND             reduce using rule 97 (var -> GREEK COLON COLON QUOTED_STRING mixfix .)
    WHERE           reduce using rule 97 (var -> GREEK COLON COLON QUOTED_STRING mixfix .)
    AXIOMATIZATION  reduce using rule 97 (var -> GREEK COLON COLON QUOTED_STRING mixfix .)
    FUN             reduce using rule 97 (var -> GREEK COLON COLON QUOTED_STRING mixfix .)
    FUNCTION        reduce using rule 97 (var -> GREEK COLON COLON QUOTED_STRING mixfix .)
    INTERPRETATION  reduce using rule 97 (var -> GREEK COLON COLON QUOTED_STRING mixfix .)
    LEMMA           reduce using rule 97 (var -> GREEK COLON COLON QUOTED_STRING mixfix .)
    LOCALE          reduce using rule 97 (var -> GREEK COLON COLON QUOTED_STRING mixfix .)
    METHOD          reduce using rule 97 (var -> GREEK COLON COLON QUOTED_STRING mixfix .)
    SECTION         reduce using rule 97 (var -> GREEK COLON COLON QUOTED_STRING mixfix .)
    TEXT            reduce using rule 97 (var -> GREEK COLON COLON QUOTED_STRING mixfix .)
    TYPE_SYNONYM    reduce using rule 97 (var -> GREEK COLON COLON QUOTED_STRING mixfix .)
    TYPEDECL        reduce using rule 97 (var -> GREEK COLON COLON QUOTED_STRING mixfix .)
    END             reduce using rule 97 (var -> GREEK COLON COLON QUOTED_STRING mixfix .)
    OPENING         reduce using rule 97 (var -> GREEK COLON COLON QUOTED_STRING mixfix .)
    BEGIN           reduce using rule 97 (var -> GREEK COLON COLON QUOTED_STRING mixfix .)
    PIPE            reduce using rule 97 (var -> GREEK COLON COLON QUOTED_STRING mixfix .)
    FIXES           reduce using rule 97 (var -> GREEK COLON COLON QUOTED_STRING mixfix .)
    CONSTRAINS      reduce using rule 97 (var -> GREEK COLON COLON QUOTED_STRING mixfix .)
    ASSUMES         reduce using rule 97 (var -> GREEK COLON COLON QUOTED_STRING mixfix .)
    DEFINES         reduce using rule 97 (var -> GREEK COLON COLON QUOTED_STRING mixfix .)
    NOTES           reduce using rule 97 (var -> GREEK COLON COLON QUOTED_STRING mixfix .)


state 301

    (130) multi_specs -> structured_spec PIPE multi_specs .

    AXIOMATIZATION  reduce using rule 130 (multi_specs -> structured_spec PIPE multi_specs .)
    FUN             reduce using rule 130 (multi_specs -> structured_spec PIPE multi_specs .)
    FUNCTION        reduce using rule 130 (multi_specs -> structured_spec PIPE multi_specs .)
    INTERPRETATION  reduce using rule 130 (multi_specs -> structured_spec PIPE multi_specs .)
    LEMMA           reduce using rule 130 (multi_specs -> structured_spec PIPE multi_specs .)
    LOCALE          reduce using rule 130 (multi_specs -> structured_spec PIPE multi_specs .)
    METHOD          reduce using rule 130 (multi_specs -> structured_spec PIPE multi_specs .)
    SECTION         reduce using rule 130 (multi_specs -> structured_spec PIPE multi_specs .)
    TEXT            reduce using rule 130 (multi_specs -> structured_spec PIPE multi_specs .)
    TYPE_SYNONYM    reduce using rule 130 (multi_specs -> structured_spec PIPE multi_specs .)
    TYPEDECL        reduce using rule 130 (multi_specs -> structured_spec PIPE multi_specs .)
    END             reduce using rule 130 (multi_specs -> structured_spec PIPE multi_specs .)


state 302

    (132) structured_spec -> ID spec_prems for_fixes .

    PIPE            reduce using rule 132 (structured_spec -> ID spec_prems for_fixes .)
    AXIOMATIZATION  reduce using rule 132 (structured_spec -> ID spec_prems for_fixes .)
    FUN             reduce using rule 132 (structured_spec -> ID spec_prems for_fixes .)
    FUNCTION        reduce using rule 132 (structured_spec -> ID spec_prems for_fixes .)
    INTERPRETATION  reduce using rule 132 (structured_spec -> ID spec_prems for_fixes .)
    LEMMA           reduce using rule 132 (structured_spec -> ID spec_prems for_fixes .)
    LOCALE          reduce using rule 132 (structured_spec -> ID spec_prems for_fixes .)
    METHOD          reduce using rule 132 (structured_spec -> ID spec_prems for_fixes .)
    SECTION         reduce using rule 132 (structured_spec -> ID spec_prems for_fixes .)
    TEXT            reduce using rule 132 (structured_spec -> ID spec_prems for_fixes .)
    TYPE_SYNONYM    reduce using rule 132 (structured_spec -> ID spec_prems for_fixes .)
    TYPEDECL        reduce using rule 132 (structured_spec -> ID spec_prems for_fixes .)
    END             reduce using rule 132 (structured_spec -> ID spec_prems for_fixes .)


state 303

    (134) structured_spec -> QUOTED_STRING spec_prems for_fixes .

    PIPE            reduce using rule 134 (structured_spec -> QUOTED_STRING spec_prems for_fixes .)
    AXIOMATIZATION  reduce using rule 134 (structured_spec -> QUOTED_STRING spec_prems for_fixes .)
    FUN             reduce using rule 134 (structured_spec -> QUOTED_STRING spec_prems for_fixes .)
    FUNCTION        reduce using rule 134 (structured_spec -> QUOTED_STRING spec_prems for_fixes .)
    INTERPRETATION  reduce using rule 134 (structured_spec -> QUOTED_STRING spec_prems for_fixes .)
    LEMMA           reduce using rule 134 (structured_spec -> QUOTED_STRING spec_prems for_fixes .)
    LOCALE          reduce using rule 134 (structured_spec -> QUOTED_STRING spec_prems for_fixes .)
    METHOD          reduce using rule 134 (structured_spec -> QUOTED_STRING spec_prems for_fixes .)
    SECTION         reduce using rule 134 (structured_spec -> QUOTED_STRING spec_prems for_fixes .)
    TEXT            reduce using rule 134 (structured_spec -> QUOTED_STRING spec_prems for_fixes .)
    TYPE_SYNONYM    reduce using rule 134 (structured_spec -> QUOTED_STRING spec_prems for_fixes .)
    TYPEDECL        reduce using rule 134 (structured_spec -> QUOTED_STRING spec_prems for_fixes .)
    END             reduce using rule 134 (structured_spec -> QUOTED_STRING spec_prems for_fixes .)


state 304

    (135) structured_spec -> thmdecl ID spec_prems . for_fixes
    (128) for_fixes -> . FOR vars

    FOR             shift and go to state 100

    for_fixes                      shift and go to state 363

state 305

    (136) structured_spec -> thmdecl QUOTED_STRING spec_prems . for_fixes
    (128) for_fixes -> . FOR vars

    FOR             shift and go to state 100

    for_fixes                      shift and go to state 364

state 306

    (177) name_insts_list -> ID EQUALS ID .
    (179) name_insts_list -> ID EQUALS ID . name_insts_list
    (177) name_insts_list -> . ID EQUALS ID
    (178) name_insts_list -> . ID EQUALS QUOTED_STRING
    (179) name_insts_list -> . ID EQUALS ID name_insts_list
    (180) name_insts_list -> . ID EQUALS QUOTED_STRING name_insts_list

    PLUS            reduce using rule 177 (name_insts_list -> ID EQUALS ID .)
    FOR             reduce using rule 177 (name_insts_list -> ID EQUALS ID .)
    AXIOMATIZATION  reduce using rule 177 (name_insts_list -> ID EQUALS ID .)
    FUN             reduce using rule 177 (name_insts_list -> ID EQUALS ID .)
    FUNCTION        reduce using rule 177 (name_insts_list -> ID EQUALS ID .)
    INTERPRETATION  reduce using rule 177 (name_insts_list -> ID EQUALS ID .)
    LEMMA           reduce using rule 177 (name_insts_list -> ID EQUALS ID .)
    LOCALE          reduce using rule 177 (name_insts_list -> ID EQUALS ID .)
    METHOD          reduce using rule 177 (name_insts_list -> ID EQUALS ID .)
    SECTION         reduce using rule 177 (name_insts_list -> ID EQUALS ID .)
    TEXT            reduce using rule 177 (name_insts_list -> ID EQUALS ID .)
    TYPE_SYNONYM    reduce using rule 177 (name_insts_list -> ID EQUALS ID .)
    TYPEDECL        reduce using rule 177 (name_insts_list -> ID EQUALS ID .)
    END             reduce using rule 177 (name_insts_list -> ID EQUALS ID .)
    OPENING         reduce using rule 177 (name_insts_list -> ID EQUALS ID .)
    BEGIN           reduce using rule 177 (name_insts_list -> ID EQUALS ID .)
    ID              shift and go to state 167

    name_insts_list                shift and go to state 365

state 307

    (178) name_insts_list -> ID EQUALS QUOTED_STRING .
    (180) name_insts_list -> ID EQUALS QUOTED_STRING . name_insts_list
    (177) name_insts_list -> . ID EQUALS ID
    (178) name_insts_list -> . ID EQUALS QUOTED_STRING
    (179) name_insts_list -> . ID EQUALS ID name_insts_list
    (180) name_insts_list -> . ID EQUALS QUOTED_STRING name_insts_list

    PLUS            reduce using rule 178 (name_insts_list -> ID EQUALS QUOTED_STRING .)
    FOR             reduce using rule 178 (name_insts_list -> ID EQUALS QUOTED_STRING .)
    AXIOMATIZATION  reduce using rule 178 (name_insts_list -> ID EQUALS QUOTED_STRING .)
    FUN             reduce using rule 178 (name_insts_list -> ID EQUALS QUOTED_STRING .)
    FUNCTION        reduce using rule 178 (name_insts_list -> ID EQUALS QUOTED_STRING .)
    INTERPRETATION  reduce using rule 178 (name_insts_list -> ID EQUALS QUOTED_STRING .)
    LEMMA           reduce using rule 178 (name_insts_list -> ID EQUALS QUOTED_STRING .)
    LOCALE          reduce using rule 178 (name_insts_list -> ID EQUALS QUOTED_STRING .)
    METHOD          reduce using rule 178 (name_insts_list -> ID EQUALS QUOTED_STRING .)
    SECTION         reduce using rule 178 (name_insts_list -> ID EQUALS QUOTED_STRING .)
    TEXT            reduce using rule 178 (name_insts_list -> ID EQUALS QUOTED_STRING .)
    TYPE_SYNONYM    reduce using rule 178 (name_insts_list -> ID EQUALS QUOTED_STRING .)
    TYPEDECL        reduce using rule 178 (name_insts_list -> ID EQUALS QUOTED_STRING .)
    END             reduce using rule 178 (name_insts_list -> ID EQUALS QUOTED_STRING .)
    OPENING         reduce using rule 178 (name_insts_list -> ID EQUALS QUOTED_STRING .)
    BEGIN           reduce using rule 178 (name_insts_list -> ID EQUALS QUOTED_STRING .)
    ID              shift and go to state 167

    name_insts_list                shift and go to state 366

state 308

    (45) lemma_block -> LEMMA ID COLON assumes_block shows_clause lemma_proof_block .

    AXIOMATIZATION  reduce using rule 45 (lemma_block -> LEMMA ID COLON assumes_block shows_clause lemma_proof_block .)
    FUN             reduce using rule 45 (lemma_block -> LEMMA ID COLON assumes_block shows_clause lemma_proof_block .)
    FUNCTION        reduce using rule 45 (lemma_block -> LEMMA ID COLON assumes_block shows_clause lemma_proof_block .)
    INTERPRETATION  reduce using rule 45 (lemma_block -> LEMMA ID COLON assumes_block shows_clause lemma_proof_block .)
    LEMMA           reduce using rule 45 (lemma_block -> LEMMA ID COLON assumes_block shows_clause lemma_proof_block .)
    LOCALE          reduce using rule 45 (lemma_block -> LEMMA ID COLON assumes_block shows_clause lemma_proof_block .)
    METHOD          reduce using rule 45 (lemma_block -> LEMMA ID COLON assumes_block shows_clause lemma_proof_block .)
    SECTION         reduce using rule 45 (lemma_block -> LEMMA ID COLON assumes_block shows_clause lemma_proof_block .)
    TEXT            reduce using rule 45 (lemma_block -> LEMMA ID COLON assumes_block shows_clause lemma_proof_block .)
    TYPE_SYNONYM    reduce using rule 45 (lemma_block -> LEMMA ID COLON assumes_block shows_clause lemma_proof_block .)
    TYPEDECL        reduce using rule 45 (lemma_block -> LEMMA ID COLON assumes_block shows_clause lemma_proof_block .)
    END             reduce using rule 45 (lemma_block -> LEMMA ID COLON assumes_block shows_clause lemma_proof_block .)


state 309

    (46) lemma_proof_block -> PROOF . apply_block
    (55) apply_block -> . single_apply apply_block
    (56) apply_block -> . subgoal apply_block
    (57) apply_block -> . empty
    (58) single_apply -> . APPLY instruction
    (59) single_apply -> . APPLY LEFT_PAREN instruction RIGHT_PAREN
    (60) single_apply -> . USING using_block APPLY DASH
    (61) single_apply -> . USING using_block APPLY instruction
    (62) single_apply -> . USING using_block APPLY LEFT_PAREN instruction RIGHT_PAREN
    (63) single_apply -> . BY instruction
    (64) single_apply -> . BY LEFT_PAREN instruction RIGHT_PAREN
    (65) single_apply -> . USING using_block BY instruction
    (66) single_apply -> . USING using_block BY LEFT_PAREN instruction RIGHT_PAREN
    (67) single_apply -> . DONE
    (68) single_apply -> . SORRY
    (76) subgoal -> . SUBGOAL QUOTED_STRING apply_block
    (261) empty -> .

    APPLY           shift and go to state 314
    USING           shift and go to state 315
    BY              shift and go to state 316
    DONE            shift and go to state 317
    SORRY           shift and go to state 318
    SUBGOAL         shift and go to state 319
    AXIOMATIZATION  reduce using rule 261 (empty -> .)
    FUN             reduce using rule 261 (empty -> .)
    FUNCTION        reduce using rule 261 (empty -> .)
    INTERPRETATION  reduce using rule 261 (empty -> .)
    LEMMA           reduce using rule 261 (empty -> .)
    LOCALE          reduce using rule 261 (empty -> .)
    METHOD          reduce using rule 261 (empty -> .)
    SECTION         reduce using rule 261 (empty -> .)
    TEXT            reduce using rule 261 (empty -> .)
    TYPE_SYNONYM    reduce using rule 261 (empty -> .)
    TYPEDECL        reduce using rule 261 (empty -> .)
    END             reduce using rule 261 (empty -> .)

    apply_block                    shift and go to state 367
    single_apply                   shift and go to state 312
    subgoal                        shift and go to state 313
    empty                          shift and go to state 368

state 310

    (47) lemma_proof_block -> apply_block .

    AXIOMATIZATION  reduce using rule 47 (lemma_proof_block -> apply_block .)
    FUN             reduce using rule 47 (lemma_proof_block -> apply_block .)
    FUNCTION        reduce using rule 47 (lemma_proof_block -> apply_block .)
    INTERPRETATION  reduce using rule 47 (lemma_proof_block -> apply_block .)
    LEMMA           reduce using rule 47 (lemma_proof_block -> apply_block .)
    LOCALE          reduce using rule 47 (lemma_proof_block -> apply_block .)
    METHOD          reduce using rule 47 (lemma_proof_block -> apply_block .)
    SECTION         reduce using rule 47 (lemma_proof_block -> apply_block .)
    TEXT            reduce using rule 47 (lemma_proof_block -> apply_block .)
    TYPE_SYNONYM    reduce using rule 47 (lemma_proof_block -> apply_block .)
    TYPEDECL        reduce using rule 47 (lemma_proof_block -> apply_block .)
    END             reduce using rule 47 (lemma_proof_block -> apply_block .)


state 311

    (48) lemma_proof_block -> empty .
    (57) apply_block -> empty .

  ! reduce/reduce conflict for AXIOMATIZATION resolved using rule 48 (lemma_proof_block -> empty .)
  ! reduce/reduce conflict for FUN resolved using rule 48 (lemma_proof_block -> empty .)
  ! reduce/reduce conflict for FUNCTION resolved using rule 48 (lemma_proof_block -> empty .)
  ! reduce/reduce conflict for INTERPRETATION resolved using rule 48 (lemma_proof_block -> empty .)
  ! reduce/reduce conflict for LEMMA resolved using rule 48 (lemma_proof_block -> empty .)
  ! reduce/reduce conflict for LOCALE resolved using rule 48 (lemma_proof_block -> empty .)
  ! reduce/reduce conflict for METHOD resolved using rule 48 (lemma_proof_block -> empty .)
  ! reduce/reduce conflict for SECTION resolved using rule 48 (lemma_proof_block -> empty .)
  ! reduce/reduce conflict for TEXT resolved using rule 48 (lemma_proof_block -> empty .)
  ! reduce/reduce conflict for TYPE_SYNONYM resolved using rule 48 (lemma_proof_block -> empty .)
  ! reduce/reduce conflict for TYPEDECL resolved using rule 48 (lemma_proof_block -> empty .)
  ! reduce/reduce conflict for END resolved using rule 48 (lemma_proof_block -> empty .)
    AXIOMATIZATION  reduce using rule 48 (lemma_proof_block -> empty .)
    FUN             reduce using rule 48 (lemma_proof_block -> empty .)
    FUNCTION        reduce using rule 48 (lemma_proof_block -> empty .)
    INTERPRETATION  reduce using rule 48 (lemma_proof_block -> empty .)
    LEMMA           reduce using rule 48 (lemma_proof_block -> empty .)
    LOCALE          reduce using rule 48 (lemma_proof_block -> empty .)
    METHOD          reduce using rule 48 (lemma_proof_block -> empty .)
    SECTION         reduce using rule 48 (lemma_proof_block -> empty .)
    TEXT            reduce using rule 48 (lemma_proof_block -> empty .)
    TYPE_SYNONYM    reduce using rule 48 (lemma_proof_block -> empty .)
    TYPEDECL        reduce using rule 48 (lemma_proof_block -> empty .)
    END             reduce using rule 48 (lemma_proof_block -> empty .)

  ! AXIOMATIZATION  [ reduce using rule 57 (apply_block -> empty .) ]
  ! FUN             [ reduce using rule 57 (apply_block -> empty .) ]
  ! FUNCTION        [ reduce using rule 57 (apply_block -> empty .) ]
  ! INTERPRETATION  [ reduce using rule 57 (apply_block -> empty .) ]
  ! LEMMA           [ reduce using rule 57 (apply_block -> empty .) ]
  ! LOCALE          [ reduce using rule 57 (apply_block -> empty .) ]
  ! METHOD          [ reduce using rule 57 (apply_block -> empty .) ]
  ! SECTION         [ reduce using rule 57 (apply_block -> empty .) ]
  ! TEXT            [ reduce using rule 57 (apply_block -> empty .) ]
  ! TYPE_SYNONYM    [ reduce using rule 57 (apply_block -> empty .) ]
  ! TYPEDECL        [ reduce using rule 57 (apply_block -> empty .) ]
  ! END             [ reduce using rule 57 (apply_block -> empty .) ]


state 312

    (55) apply_block -> single_apply . apply_block
    (55) apply_block -> . single_apply apply_block
    (56) apply_block -> . subgoal apply_block
    (57) apply_block -> . empty
    (58) single_apply -> . APPLY instruction
    (59) single_apply -> . APPLY LEFT_PAREN instruction RIGHT_PAREN
    (60) single_apply -> . USING using_block APPLY DASH
    (61) single_apply -> . USING using_block APPLY instruction
    (62) single_apply -> . USING using_block APPLY LEFT_PAREN instruction RIGHT_PAREN
    (63) single_apply -> . BY instruction
    (64) single_apply -> . BY LEFT_PAREN instruction RIGHT_PAREN
    (65) single_apply -> . USING using_block BY instruction
    (66) single_apply -> . USING using_block BY LEFT_PAREN instruction RIGHT_PAREN
    (67) single_apply -> . DONE
    (68) single_apply -> . SORRY
    (76) subgoal -> . SUBGOAL QUOTED_STRING apply_block
    (261) empty -> .

  ! shift/reduce conflict for APPLY resolved as shift
  ! shift/reduce conflict for USING resolved as shift
  ! shift/reduce conflict for BY resolved as shift
  ! shift/reduce conflict for DONE resolved as shift
  ! shift/reduce conflict for SORRY resolved as shift
  ! shift/reduce conflict for SUBGOAL resolved as shift
    APPLY           shift and go to state 314
    USING           shift and go to state 315
    BY              shift and go to state 316
    DONE            shift and go to state 317
    SORRY           shift and go to state 318
    SUBGOAL         shift and go to state 319
    AXIOMATIZATION  reduce using rule 261 (empty -> .)
    FUN             reduce using rule 261 (empty -> .)
    FUNCTION        reduce using rule 261 (empty -> .)
    INTERPRETATION  reduce using rule 261 (empty -> .)
    LEMMA           reduce using rule 261 (empty -> .)
    LOCALE          reduce using rule 261 (empty -> .)
    METHOD          reduce using rule 261 (empty -> .)
    SECTION         reduce using rule 261 (empty -> .)
    TEXT            reduce using rule 261 (empty -> .)
    TYPE_SYNONYM    reduce using rule 261 (empty -> .)
    TYPEDECL        reduce using rule 261 (empty -> .)
    END             reduce using rule 261 (empty -> .)

  ! APPLY           [ reduce using rule 261 (empty -> .) ]
  ! USING           [ reduce using rule 261 (empty -> .) ]
  ! BY              [ reduce using rule 261 (empty -> .) ]
  ! DONE            [ reduce using rule 261 (empty -> .) ]
  ! SORRY           [ reduce using rule 261 (empty -> .) ]
  ! SUBGOAL         [ reduce using rule 261 (empty -> .) ]

    single_apply                   shift and go to state 312
    apply_block                    shift and go to state 369
    subgoal                        shift and go to state 313
    empty                          shift and go to state 368

state 313

    (56) apply_block -> subgoal . apply_block
    (55) apply_block -> . single_apply apply_block
    (56) apply_block -> . subgoal apply_block
    (57) apply_block -> . empty
    (58) single_apply -> . APPLY instruction
    (59) single_apply -> . APPLY LEFT_PAREN instruction RIGHT_PAREN
    (60) single_apply -> . USING using_block APPLY DASH
    (61) single_apply -> . USING using_block APPLY instruction
    (62) single_apply -> . USING using_block APPLY LEFT_PAREN instruction RIGHT_PAREN
    (63) single_apply -> . BY instruction
    (64) single_apply -> . BY LEFT_PAREN instruction RIGHT_PAREN
    (65) single_apply -> . USING using_block BY instruction
    (66) single_apply -> . USING using_block BY LEFT_PAREN instruction RIGHT_PAREN
    (67) single_apply -> . DONE
    (68) single_apply -> . SORRY
    (76) subgoal -> . SUBGOAL QUOTED_STRING apply_block
    (261) empty -> .

  ! shift/reduce conflict for APPLY resolved as shift
  ! shift/reduce conflict for USING resolved as shift
  ! shift/reduce conflict for BY resolved as shift
  ! shift/reduce conflict for DONE resolved as shift
  ! shift/reduce conflict for SORRY resolved as shift
  ! shift/reduce conflict for SUBGOAL resolved as shift
    APPLY           shift and go to state 314
    USING           shift and go to state 315
    BY              shift and go to state 316
    DONE            shift and go to state 317
    SORRY           shift and go to state 318
    SUBGOAL         shift and go to state 319
    AXIOMATIZATION  reduce using rule 261 (empty -> .)
    FUN             reduce using rule 261 (empty -> .)
    FUNCTION        reduce using rule 261 (empty -> .)
    INTERPRETATION  reduce using rule 261 (empty -> .)
    LEMMA           reduce using rule 261 (empty -> .)
    LOCALE          reduce using rule 261 (empty -> .)
    METHOD          reduce using rule 261 (empty -> .)
    SECTION         reduce using rule 261 (empty -> .)
    TEXT            reduce using rule 261 (empty -> .)
    TYPE_SYNONYM    reduce using rule 261 (empty -> .)
    TYPEDECL        reduce using rule 261 (empty -> .)
    END             reduce using rule 261 (empty -> .)

  ! APPLY           [ reduce using rule 261 (empty -> .) ]
  ! USING           [ reduce using rule 261 (empty -> .) ]
  ! BY              [ reduce using rule 261 (empty -> .) ]
  ! DONE            [ reduce using rule 261 (empty -> .) ]
  ! SORRY           [ reduce using rule 261 (empty -> .) ]
  ! SUBGOAL         [ reduce using rule 261 (empty -> .) ]

    subgoal                        shift and go to state 313
    apply_block                    shift and go to state 370
    single_apply                   shift and go to state 312
    empty                          shift and go to state 368

state 314

    (58) single_apply -> APPLY . instruction
    (59) single_apply -> APPLY . LEFT_PAREN instruction RIGHT_PAREN
    (24) instruction -> . single_instruction
    (25) instruction -> . single_instruction instruction_modifier
    (26) instruction -> . single_instruction instruction_modifier COMMA instruction
    (27) instruction -> . single_instruction SEMICOLON instruction
    (28) instruction -> . single_instruction COMMA instruction
    (29) instruction -> . LEFT_PAREN instruction RIGHT_PAREN
    (30) instruction -> . LEFT_PAREN instruction RIGHT_PAREN instruction_modifier
    (33) single_instruction -> . ID
    (34) single_instruction -> . ID method_args
    (35) single_instruction -> . LEFT_PAREN ID method_args RIGHT_PAREN
    (36) single_instruction -> . LEFT_PAREN ID method_args RIGHT_PAREN instruction_modifier

    LEFT_PAREN      shift and go to state 372
    ID              shift and go to state 188

    instruction                    shift and go to state 371
    single_instruction             shift and go to state 186

state 315

    (60) single_apply -> USING . using_block APPLY DASH
    (61) single_apply -> USING . using_block APPLY instruction
    (62) single_apply -> USING . using_block APPLY LEFT_PAREN instruction RIGHT_PAREN
    (65) single_apply -> USING . using_block BY instruction
    (66) single_apply -> USING . using_block BY LEFT_PAREN instruction RIGHT_PAREN
    (69) using_block -> . ASSMS using_block
    (70) using_block -> . ASSMS LEFT_PAREN NAT RIGHT_PAREN using_block
    (71) using_block -> . ASSMS LEFT_PAREN NAT COMMA NAT RIGHT_PAREN using_block
    (72) using_block -> . ASSMS LEFT_PAREN NAT DASH NAT RIGHT_PAREN using_block
    (73) using_block -> . empty
    (261) empty -> .

    ASSMS           shift and go to state 374
    APPLY           reduce using rule 261 (empty -> .)
    BY              reduce using rule 261 (empty -> .)

    using_block                    shift and go to state 373
    empty                          shift and go to state 375

state 316

    (63) single_apply -> BY . instruction
    (64) single_apply -> BY . LEFT_PAREN instruction RIGHT_PAREN
    (24) instruction -> . single_instruction
    (25) instruction -> . single_instruction instruction_modifier
    (26) instruction -> . single_instruction instruction_modifier COMMA instruction
    (27) instruction -> . single_instruction SEMICOLON instruction
    (28) instruction -> . single_instruction COMMA instruction
    (29) instruction -> . LEFT_PAREN instruction RIGHT_PAREN
    (30) instruction -> . LEFT_PAREN instruction RIGHT_PAREN instruction_modifier
    (33) single_instruction -> . ID
    (34) single_instruction -> . ID method_args
    (35) single_instruction -> . LEFT_PAREN ID method_args RIGHT_PAREN
    (36) single_instruction -> . LEFT_PAREN ID method_args RIGHT_PAREN instruction_modifier

    LEFT_PAREN      shift and go to state 377
    ID              shift and go to state 188

    instruction                    shift and go to state 376
    single_instruction             shift and go to state 186

state 317

    (67) single_apply -> DONE .

    APPLY           reduce using rule 67 (single_apply -> DONE .)
    USING           reduce using rule 67 (single_apply -> DONE .)
    BY              reduce using rule 67 (single_apply -> DONE .)
    DONE            reduce using rule 67 (single_apply -> DONE .)
    SORRY           reduce using rule 67 (single_apply -> DONE .)
    SUBGOAL         reduce using rule 67 (single_apply -> DONE .)
    AXIOMATIZATION  reduce using rule 67 (single_apply -> DONE .)
    FUN             reduce using rule 67 (single_apply -> DONE .)
    FUNCTION        reduce using rule 67 (single_apply -> DONE .)
    INTERPRETATION  reduce using rule 67 (single_apply -> DONE .)
    LEMMA           reduce using rule 67 (single_apply -> DONE .)
    LOCALE          reduce using rule 67 (single_apply -> DONE .)
    METHOD          reduce using rule 67 (single_apply -> DONE .)
    SECTION         reduce using rule 67 (single_apply -> DONE .)
    TEXT            reduce using rule 67 (single_apply -> DONE .)
    TYPE_SYNONYM    reduce using rule 67 (single_apply -> DONE .)
    TYPEDECL        reduce using rule 67 (single_apply -> DONE .)
    END             reduce using rule 67 (single_apply -> DONE .)


state 318

    (68) single_apply -> SORRY .

    APPLY           reduce using rule 68 (single_apply -> SORRY .)
    USING           reduce using rule 68 (single_apply -> SORRY .)
    BY              reduce using rule 68 (single_apply -> SORRY .)
    DONE            reduce using rule 68 (single_apply -> SORRY .)
    SORRY           reduce using rule 68 (single_apply -> SORRY .)
    SUBGOAL         reduce using rule 68 (single_apply -> SORRY .)
    AXIOMATIZATION  reduce using rule 68 (single_apply -> SORRY .)
    FUN             reduce using rule 68 (single_apply -> SORRY .)
    FUNCTION        reduce using rule 68 (single_apply -> SORRY .)
    INTERPRETATION  reduce using rule 68 (single_apply -> SORRY .)
    LEMMA           reduce using rule 68 (single_apply -> SORRY .)
    LOCALE          reduce using rule 68 (single_apply -> SORRY .)
    METHOD          reduce using rule 68 (single_apply -> SORRY .)
    SECTION         reduce using rule 68 (single_apply -> SORRY .)
    TEXT            reduce using rule 68 (single_apply -> SORRY .)
    TYPE_SYNONYM    reduce using rule 68 (single_apply -> SORRY .)
    TYPEDECL        reduce using rule 68 (single_apply -> SORRY .)
    END             reduce using rule 68 (single_apply -> SORRY .)


state 319

    (76) subgoal -> SUBGOAL . QUOTED_STRING apply_block

    QUOTED_STRING   shift and go to state 378


state 320

    (54) shows_clause -> SHOWS QUOTED_STRING .

    PROOF           reduce using rule 54 (shows_clause -> SHOWS QUOTED_STRING .)
    APPLY           reduce using rule 54 (shows_clause -> SHOWS QUOTED_STRING .)
    USING           reduce using rule 54 (shows_clause -> SHOWS QUOTED_STRING .)
    BY              reduce using rule 54 (shows_clause -> SHOWS QUOTED_STRING .)
    DONE            reduce using rule 54 (shows_clause -> SHOWS QUOTED_STRING .)
    SORRY           reduce using rule 54 (shows_clause -> SHOWS QUOTED_STRING .)
    SUBGOAL         reduce using rule 54 (shows_clause -> SHOWS QUOTED_STRING .)
    AXIOMATIZATION  reduce using rule 54 (shows_clause -> SHOWS QUOTED_STRING .)
    FUN             reduce using rule 54 (shows_clause -> SHOWS QUOTED_STRING .)
    FUNCTION        reduce using rule 54 (shows_clause -> SHOWS QUOTED_STRING .)
    INTERPRETATION  reduce using rule 54 (shows_clause -> SHOWS QUOTED_STRING .)
    LEMMA           reduce using rule 54 (shows_clause -> SHOWS QUOTED_STRING .)
    LOCALE          reduce using rule 54 (shows_clause -> SHOWS QUOTED_STRING .)
    METHOD          reduce using rule 54 (shows_clause -> SHOWS QUOTED_STRING .)
    SECTION         reduce using rule 54 (shows_clause -> SHOWS QUOTED_STRING .)
    TEXT            reduce using rule 54 (shows_clause -> SHOWS QUOTED_STRING .)
    TYPE_SYNONYM    reduce using rule 54 (shows_clause -> SHOWS QUOTED_STRING .)
    TYPEDECL        reduce using rule 54 (shows_clause -> SHOWS QUOTED_STRING .)
    END             reduce using rule 54 (shows_clause -> SHOWS QUOTED_STRING .)


state 321

    (50) assumptions_list -> assumption AND . assumptions_list
    (50) assumptions_list -> . assumption AND assumptions_list
    (51) assumptions_list -> . assumption
    (52) assumption -> . QUOTED_STRING
    (53) assumption -> . NAT COLON QUOTED_STRING

    QUOTED_STRING   shift and go to state 236
    NAT             shift and go to state 237

    assumption                     shift and go to state 235
    assumptions_list               shift and go to state 379

state 322

    (53) assumption -> NAT COLON . QUOTED_STRING

    QUOTED_STRING   shift and go to state 380


state 323

    (183) locale_block -> LOCALE ID comment_block BEGIN content END .

    AXIOMATIZATION  reduce using rule 183 (locale_block -> LOCALE ID comment_block BEGIN content END .)
    FUN             reduce using rule 183 (locale_block -> LOCALE ID comment_block BEGIN content END .)
    FUNCTION        reduce using rule 183 (locale_block -> LOCALE ID comment_block BEGIN content END .)
    INTERPRETATION  reduce using rule 183 (locale_block -> LOCALE ID comment_block BEGIN content END .)
    LEMMA           reduce using rule 183 (locale_block -> LOCALE ID comment_block BEGIN content END .)
    LOCALE          reduce using rule 183 (locale_block -> LOCALE ID comment_block BEGIN content END .)
    METHOD          reduce using rule 183 (locale_block -> LOCALE ID comment_block BEGIN content END .)
    SECTION         reduce using rule 183 (locale_block -> LOCALE ID comment_block BEGIN content END .)
    TEXT            reduce using rule 183 (locale_block -> LOCALE ID comment_block BEGIN content END .)
    TYPE_SYNONYM    reduce using rule 183 (locale_block -> LOCALE ID comment_block BEGIN content END .)
    TYPEDECL        reduce using rule 183 (locale_block -> LOCALE ID comment_block BEGIN content END .)
    END             reduce using rule 183 (locale_block -> LOCALE ID comment_block BEGIN content END .)


state 324

    (185) locale_block -> LOCALE ID EQ locale BEGIN content . END

    END             shift and go to state 381


state 325

    (191) locale -> locale opening PLUS . context_elem_list
    (193) context_elem_list -> . context_elem
    (194) context_elem_list -> . context_elem context_elem_list
    (195) context_elem -> . FIXES vars
    (196) context_elem -> . CONSTRAINS name_type_list
    (197) context_elem -> . ASSUMES prop_list
    (198) context_elem -> . DEFINES defines_list
    (199) context_elem -> . NOTES notes_list

    FIXES           shift and go to state 179
    CONSTRAINS      shift and go to state 180
    ASSUMES         shift and go to state 181
    DEFINES         shift and go to state 182
    NOTES           shift and go to state 183

    context_elem_list              shift and go to state 382
    context_elem                   shift and go to state 177

state 326

    (188) locale -> opening PLUS context_elem_list .

    BEGIN           reduce using rule 188 (locale -> opening PLUS context_elem_list .)
    OPENING         reduce using rule 188 (locale -> opening PLUS context_elem_list .)
    AXIOMATIZATION  reduce using rule 188 (locale -> opening PLUS context_elem_list .)
    FUN             reduce using rule 188 (locale -> opening PLUS context_elem_list .)
    FUNCTION        reduce using rule 188 (locale -> opening PLUS context_elem_list .)
    INTERPRETATION  reduce using rule 188 (locale -> opening PLUS context_elem_list .)
    LEMMA           reduce using rule 188 (locale -> opening PLUS context_elem_list .)
    LOCALE          reduce using rule 188 (locale -> opening PLUS context_elem_list .)
    METHOD          reduce using rule 188 (locale -> opening PLUS context_elem_list .)
    SECTION         reduce using rule 188 (locale -> opening PLUS context_elem_list .)
    TEXT            reduce using rule 188 (locale -> opening PLUS context_elem_list .)
    TYPE_SYNONYM    reduce using rule 188 (locale -> opening PLUS context_elem_list .)
    TYPEDECL        reduce using rule 188 (locale -> opening PLUS context_elem_list .)
    END             reduce using rule 188 (locale -> opening PLUS context_elem_list .)


state 327

    (192) locale -> locale_expr opening PLUS . context_elem_list
    (193) context_elem_list -> . context_elem
    (194) context_elem_list -> . context_elem context_elem_list
    (195) context_elem -> . FIXES vars
    (196) context_elem -> . CONSTRAINS name_type_list
    (197) context_elem -> . ASSUMES prop_list
    (198) context_elem -> . DEFINES defines_list
    (199) context_elem -> . NOTES notes_list

    FIXES           shift and go to state 179
    CONSTRAINS      shift and go to state 180
    ASSUMES         shift and go to state 181
    DEFINES         shift and go to state 182
    NOTES           shift and go to state 183

    context_elem_list              shift and go to state 383
    context_elem                   shift and go to state 177

state 328

    (101) names_list -> ID names .

    PLUS            reduce using rule 101 (names_list -> ID names .)
    BEGIN           reduce using rule 101 (names_list -> ID names .)
    OPENING         reduce using rule 101 (names_list -> ID names .)
    AXIOMATIZATION  reduce using rule 101 (names_list -> ID names .)
    FUN             reduce using rule 101 (names_list -> ID names .)
    FUNCTION        reduce using rule 101 (names_list -> ID names .)
    INTERPRETATION  reduce using rule 101 (names_list -> ID names .)
    LEMMA           reduce using rule 101 (names_list -> ID names .)
    LOCALE          reduce using rule 101 (names_list -> ID names .)
    METHOD          reduce using rule 101 (names_list -> ID names .)
    SECTION         reduce using rule 101 (names_list -> ID names .)
    TEXT            reduce using rule 101 (names_list -> ID names .)
    TYPE_SYNONYM    reduce using rule 101 (names_list -> ID names .)
    TYPEDECL        reduce using rule 101 (names_list -> ID names .)
    END             reduce using rule 101 (names_list -> ID names .)


state 329

    (200) name_type_list -> ID COLON . COLON ID
    (201) name_type_list -> ID COLON . COLON ID AND name_type_list

    COLON           shift and go to state 384


state 330

    (203) defines_list -> defines_list_element AND . defines_list
    (202) defines_list -> . defines_list_element
    (203) defines_list -> . defines_list_element AND defines_list
    (204) defines_list_element -> . ID
    (205) defines_list_element -> . QUOTED_STRING
    (206) defines_list_element -> . thmdecl ID
    (207) defines_list_element -> . thmdecl QUOTED_STRING
    (208) defines_list_element -> . ID prop_pat
    (209) defines_list_element -> . QUOTED_STRING prop_pat
    (210) defines_list_element -> . thmdecl ID prop_pat
    (211) defines_list_element -> . thmdecl QUOTED_STRING prop_pat
    (107) thmdecl -> . thmbind COLON
    (114) thmbind -> . ID
    (115) thmbind -> . ID attributes
    (116) thmbind -> . attributes
    (117) attributes -> . LEFT_BRACKET attributes_list RIGHT_BRACKET

    ID              shift and go to state 253
    QUOTED_STRING   shift and go to state 254
    LEFT_BRACKET    shift and go to state 81

    defines_list_element           shift and go to state 252
    defines_list                   shift and go to state 385
    thmdecl                        shift and go to state 255
    thmbind                        shift and go to state 79
    attributes                     shift and go to state 80

state 331

    (208) defines_list_element -> ID prop_pat .

    AND             reduce using rule 208 (defines_list_element -> ID prop_pat .)
    FIXES           reduce using rule 208 (defines_list_element -> ID prop_pat .)
    CONSTRAINS      reduce using rule 208 (defines_list_element -> ID prop_pat .)
    ASSUMES         reduce using rule 208 (defines_list_element -> ID prop_pat .)
    DEFINES         reduce using rule 208 (defines_list_element -> ID prop_pat .)
    NOTES           reduce using rule 208 (defines_list_element -> ID prop_pat .)
    BEGIN           reduce using rule 208 (defines_list_element -> ID prop_pat .)
    OPENING         reduce using rule 208 (defines_list_element -> ID prop_pat .)
    AXIOMATIZATION  reduce using rule 208 (defines_list_element -> ID prop_pat .)
    FUN             reduce using rule 208 (defines_list_element -> ID prop_pat .)
    FUNCTION        reduce using rule 208 (defines_list_element -> ID prop_pat .)
    INTERPRETATION  reduce using rule 208 (defines_list_element -> ID prop_pat .)
    LEMMA           reduce using rule 208 (defines_list_element -> ID prop_pat .)
    LOCALE          reduce using rule 208 (defines_list_element -> ID prop_pat .)
    METHOD          reduce using rule 208 (defines_list_element -> ID prop_pat .)
    SECTION         reduce using rule 208 (defines_list_element -> ID prop_pat .)
    TEXT            reduce using rule 208 (defines_list_element -> ID prop_pat .)
    TYPE_SYNONYM    reduce using rule 208 (defines_list_element -> ID prop_pat .)
    TYPEDECL        reduce using rule 208 (defines_list_element -> ID prop_pat .)
    END             reduce using rule 208 (defines_list_element -> ID prop_pat .)


state 332

    (102) prop_pat -> LEFT_PAREN . prop_pat_terms RIGHT_PAREN
    (103) prop_pat_terms -> . prop_pat_term
    (104) prop_pat_terms -> . prop_pat_term prop_pat_terms
    (105) prop_pat_term -> . IS ID
    (106) prop_pat_term -> . IS QUOTED_STRING

    IS              shift and go to state 388

    prop_pat_terms                 shift and go to state 386
    prop_pat_term                  shift and go to state 387

state 333

    (209) defines_list_element -> QUOTED_STRING prop_pat .

    AND             reduce using rule 209 (defines_list_element -> QUOTED_STRING prop_pat .)
    FIXES           reduce using rule 209 (defines_list_element -> QUOTED_STRING prop_pat .)
    CONSTRAINS      reduce using rule 209 (defines_list_element -> QUOTED_STRING prop_pat .)
    ASSUMES         reduce using rule 209 (defines_list_element -> QUOTED_STRING prop_pat .)
    DEFINES         reduce using rule 209 (defines_list_element -> QUOTED_STRING prop_pat .)
    NOTES           reduce using rule 209 (defines_list_element -> QUOTED_STRING prop_pat .)
    BEGIN           reduce using rule 209 (defines_list_element -> QUOTED_STRING prop_pat .)
    OPENING         reduce using rule 209 (defines_list_element -> QUOTED_STRING prop_pat .)
    AXIOMATIZATION  reduce using rule 209 (defines_list_element -> QUOTED_STRING prop_pat .)
    FUN             reduce using rule 209 (defines_list_element -> QUOTED_STRING prop_pat .)
    FUNCTION        reduce using rule 209 (defines_list_element -> QUOTED_STRING prop_pat .)
    INTERPRETATION  reduce using rule 209 (defines_list_element -> QUOTED_STRING prop_pat .)
    LEMMA           reduce using rule 209 (defines_list_element -> QUOTED_STRING prop_pat .)
    LOCALE          reduce using rule 209 (defines_list_element -> QUOTED_STRING prop_pat .)
    METHOD          reduce using rule 209 (defines_list_element -> QUOTED_STRING prop_pat .)
    SECTION         reduce using rule 209 (defines_list_element -> QUOTED_STRING prop_pat .)
    TEXT            reduce using rule 209 (defines_list_element -> QUOTED_STRING prop_pat .)
    TYPE_SYNONYM    reduce using rule 209 (defines_list_element -> QUOTED_STRING prop_pat .)
    TYPEDECL        reduce using rule 209 (defines_list_element -> QUOTED_STRING prop_pat .)
    END             reduce using rule 209 (defines_list_element -> QUOTED_STRING prop_pat .)


state 334

    (206) defines_list_element -> thmdecl ID .
    (210) defines_list_element -> thmdecl ID . prop_pat
    (102) prop_pat -> . LEFT_PAREN prop_pat_terms RIGHT_PAREN

    AND             reduce using rule 206 (defines_list_element -> thmdecl ID .)
    FIXES           reduce using rule 206 (defines_list_element -> thmdecl ID .)
    CONSTRAINS      reduce using rule 206 (defines_list_element -> thmdecl ID .)
    ASSUMES         reduce using rule 206 (defines_list_element -> thmdecl ID .)
    DEFINES         reduce using rule 206 (defines_list_element -> thmdecl ID .)
    NOTES           reduce using rule 206 (defines_list_element -> thmdecl ID .)
    BEGIN           reduce using rule 206 (defines_list_element -> thmdecl ID .)
    OPENING         reduce using rule 206 (defines_list_element -> thmdecl ID .)
    AXIOMATIZATION  reduce using rule 206 (defines_list_element -> thmdecl ID .)
    FUN             reduce using rule 206 (defines_list_element -> thmdecl ID .)
    FUNCTION        reduce using rule 206 (defines_list_element -> thmdecl ID .)
    INTERPRETATION  reduce using rule 206 (defines_list_element -> thmdecl ID .)
    LEMMA           reduce using rule 206 (defines_list_element -> thmdecl ID .)
    LOCALE          reduce using rule 206 (defines_list_element -> thmdecl ID .)
    METHOD          reduce using rule 206 (defines_list_element -> thmdecl ID .)
    SECTION         reduce using rule 206 (defines_list_element -> thmdecl ID .)
    TEXT            reduce using rule 206 (defines_list_element -> thmdecl ID .)
    TYPE_SYNONYM    reduce using rule 206 (defines_list_element -> thmdecl ID .)
    TYPEDECL        reduce using rule 206 (defines_list_element -> thmdecl ID .)
    END             reduce using rule 206 (defines_list_element -> thmdecl ID .)
    LEFT_PAREN      shift and go to state 332

    prop_pat                       shift and go to state 389

state 335

    (207) defines_list_element -> thmdecl QUOTED_STRING .
    (211) defines_list_element -> thmdecl QUOTED_STRING . prop_pat
    (102) prop_pat -> . LEFT_PAREN prop_pat_terms RIGHT_PAREN

    AND             reduce using rule 207 (defines_list_element -> thmdecl QUOTED_STRING .)
    FIXES           reduce using rule 207 (defines_list_element -> thmdecl QUOTED_STRING .)
    CONSTRAINS      reduce using rule 207 (defines_list_element -> thmdecl QUOTED_STRING .)
    ASSUMES         reduce using rule 207 (defines_list_element -> thmdecl QUOTED_STRING .)
    DEFINES         reduce using rule 207 (defines_list_element -> thmdecl QUOTED_STRING .)
    NOTES           reduce using rule 207 (defines_list_element -> thmdecl QUOTED_STRING .)
    BEGIN           reduce using rule 207 (defines_list_element -> thmdecl QUOTED_STRING .)
    OPENING         reduce using rule 207 (defines_list_element -> thmdecl QUOTED_STRING .)
    AXIOMATIZATION  reduce using rule 207 (defines_list_element -> thmdecl QUOTED_STRING .)
    FUN             reduce using rule 207 (defines_list_element -> thmdecl QUOTED_STRING .)
    FUNCTION        reduce using rule 207 (defines_list_element -> thmdecl QUOTED_STRING .)
    INTERPRETATION  reduce using rule 207 (defines_list_element -> thmdecl QUOTED_STRING .)
    LEMMA           reduce using rule 207 (defines_list_element -> thmdecl QUOTED_STRING .)
    LOCALE          reduce using rule 207 (defines_list_element -> thmdecl QUOTED_STRING .)
    METHOD          reduce using rule 207 (defines_list_element -> thmdecl QUOTED_STRING .)
    SECTION         reduce using rule 207 (defines_list_element -> thmdecl QUOTED_STRING .)
    TEXT            reduce using rule 207 (defines_list_element -> thmdecl QUOTED_STRING .)
    TYPE_SYNONYM    reduce using rule 207 (defines_list_element -> thmdecl QUOTED_STRING .)
    TYPEDECL        reduce using rule 207 (defines_list_element -> thmdecl QUOTED_STRING .)
    END             reduce using rule 207 (defines_list_element -> thmdecl QUOTED_STRING .)
    LEFT_PAREN      shift and go to state 332

    prop_pat                       shift and go to state 390

state 336

    (213) notes_list -> notes_list_element AND . notes_list
    (212) notes_list -> . notes_list_element
    (213) notes_list -> . notes_list_element AND notes_list
    (214) notes_list_element -> . thmdef thms
    (215) notes_list_element -> . thms
    (108) thmdef -> . thmbind EQ
    (112) thms -> . thm
    (113) thms -> . thm thms
    (114) thmbind -> . ID
    (115) thmbind -> . ID attributes
    (116) thmbind -> . attributes
    (109) thm -> . ID attributes
    (110) thm -> . ID
    (111) thm -> . attributes
    (117) attributes -> . LEFT_BRACKET attributes_list RIGHT_BRACKET

    ID              shift and go to state 262
    LEFT_BRACKET    shift and go to state 81

    notes_list_element             shift and go to state 257
    notes_list                     shift and go to state 391
    thmdef                         shift and go to state 258
    thms                           shift and go to state 259
    thmbind                        shift and go to state 260
    thm                            shift and go to state 261
    attributes                     shift and go to state 263

state 337

    (214) notes_list_element -> thmdef thms .

    AND             reduce using rule 214 (notes_list_element -> thmdef thms .)
    FIXES           reduce using rule 214 (notes_list_element -> thmdef thms .)
    CONSTRAINS      reduce using rule 214 (notes_list_element -> thmdef thms .)
    ASSUMES         reduce using rule 214 (notes_list_element -> thmdef thms .)
    DEFINES         reduce using rule 214 (notes_list_element -> thmdef thms .)
    NOTES           reduce using rule 214 (notes_list_element -> thmdef thms .)
    BEGIN           reduce using rule 214 (notes_list_element -> thmdef thms .)
    OPENING         reduce using rule 214 (notes_list_element -> thmdef thms .)
    AXIOMATIZATION  reduce using rule 214 (notes_list_element -> thmdef thms .)
    FUN             reduce using rule 214 (notes_list_element -> thmdef thms .)
    FUNCTION        reduce using rule 214 (notes_list_element -> thmdef thms .)
    INTERPRETATION  reduce using rule 214 (notes_list_element -> thmdef thms .)
    LEMMA           reduce using rule 214 (notes_list_element -> thmdef thms .)
    LOCALE          reduce using rule 214 (notes_list_element -> thmdef thms .)
    METHOD          reduce using rule 214 (notes_list_element -> thmdef thms .)
    SECTION         reduce using rule 214 (notes_list_element -> thmdef thms .)
    TEXT            reduce using rule 214 (notes_list_element -> thmdef thms .)
    TYPE_SYNONYM    reduce using rule 214 (notes_list_element -> thmdef thms .)
    TYPEDECL        reduce using rule 214 (notes_list_element -> thmdef thms .)
    END             reduce using rule 214 (notes_list_element -> thmdef thms .)


state 338

    (109) thm -> ID . attributes
    (110) thm -> ID .
    (117) attributes -> . LEFT_BRACKET attributes_list RIGHT_BRACKET

  ! shift/reduce conflict for LEFT_BRACKET resolved as shift
    ID              reduce using rule 110 (thm -> ID .)
    AND             reduce using rule 110 (thm -> ID .)
    FIXES           reduce using rule 110 (thm -> ID .)
    CONSTRAINS      reduce using rule 110 (thm -> ID .)
    ASSUMES         reduce using rule 110 (thm -> ID .)
    DEFINES         reduce using rule 110 (thm -> ID .)
    NOTES           reduce using rule 110 (thm -> ID .)
    BEGIN           reduce using rule 110 (thm -> ID .)
    OPENING         reduce using rule 110 (thm -> ID .)
    AXIOMATIZATION  reduce using rule 110 (thm -> ID .)
    FUN             reduce using rule 110 (thm -> ID .)
    FUNCTION        reduce using rule 110 (thm -> ID .)
    INTERPRETATION  reduce using rule 110 (thm -> ID .)
    LEMMA           reduce using rule 110 (thm -> ID .)
    LOCALE          reduce using rule 110 (thm -> ID .)
    METHOD          reduce using rule 110 (thm -> ID .)
    SECTION         reduce using rule 110 (thm -> ID .)
    TEXT            reduce using rule 110 (thm -> ID .)
    TYPE_SYNONYM    reduce using rule 110 (thm -> ID .)
    TYPEDECL        reduce using rule 110 (thm -> ID .)
    END             reduce using rule 110 (thm -> ID .)
    LEFT_BRACKET    shift and go to state 81

  ! LEFT_BRACKET    [ reduce using rule 110 (thm -> ID .) ]

    attributes                     shift and go to state 392

state 339

    (111) thm -> attributes .

    ID              reduce using rule 111 (thm -> attributes .)
    LEFT_BRACKET    reduce using rule 111 (thm -> attributes .)
    AND             reduce using rule 111 (thm -> attributes .)
    FIXES           reduce using rule 111 (thm -> attributes .)
    CONSTRAINS      reduce using rule 111 (thm -> attributes .)
    ASSUMES         reduce using rule 111 (thm -> attributes .)
    DEFINES         reduce using rule 111 (thm -> attributes .)
    NOTES           reduce using rule 111 (thm -> attributes .)
    BEGIN           reduce using rule 111 (thm -> attributes .)
    OPENING         reduce using rule 111 (thm -> attributes .)
    AXIOMATIZATION  reduce using rule 111 (thm -> attributes .)
    FUN             reduce using rule 111 (thm -> attributes .)
    FUNCTION        reduce using rule 111 (thm -> attributes .)
    INTERPRETATION  reduce using rule 111 (thm -> attributes .)
    LEMMA           reduce using rule 111 (thm -> attributes .)
    LOCALE          reduce using rule 111 (thm -> attributes .)
    METHOD          reduce using rule 111 (thm -> attributes .)
    SECTION         reduce using rule 111 (thm -> attributes .)
    TEXT            reduce using rule 111 (thm -> attributes .)
    TYPE_SYNONYM    reduce using rule 111 (thm -> attributes .)
    TYPEDECL        reduce using rule 111 (thm -> attributes .)
    END             reduce using rule 111 (thm -> attributes .)


state 340

    (108) thmdef -> thmbind EQ .

    ID              reduce using rule 108 (thmdef -> thmbind EQ .)
    LEFT_BRACKET    reduce using rule 108 (thmdef -> thmbind EQ .)


state 341

    (113) thms -> thm thms .

    AND             reduce using rule 113 (thms -> thm thms .)
    FIXES           reduce using rule 113 (thms -> thm thms .)
    CONSTRAINS      reduce using rule 113 (thms -> thm thms .)
    ASSUMES         reduce using rule 113 (thms -> thm thms .)
    DEFINES         reduce using rule 113 (thms -> thm thms .)
    NOTES           reduce using rule 113 (thms -> thm thms .)
    BEGIN           reduce using rule 113 (thms -> thm thms .)
    OPENING         reduce using rule 113 (thms -> thm thms .)
    AXIOMATIZATION  reduce using rule 113 (thms -> thm thms .)
    FUN             reduce using rule 113 (thms -> thm thms .)
    FUNCTION        reduce using rule 113 (thms -> thm thms .)
    INTERPRETATION  reduce using rule 113 (thms -> thm thms .)
    LEMMA           reduce using rule 113 (thms -> thm thms .)
    LOCALE          reduce using rule 113 (thms -> thm thms .)
    METHOD          reduce using rule 113 (thms -> thm thms .)
    SECTION         reduce using rule 113 (thms -> thm thms .)
    TEXT            reduce using rule 113 (thms -> thm thms .)
    TYPE_SYNONYM    reduce using rule 113 (thms -> thm thms .)
    TYPEDECL        reduce using rule 113 (thms -> thm thms .)
    END             reduce using rule 113 (thms -> thm thms .)


state 342

    (115) thmbind -> ID attributes .
    (109) thm -> ID attributes .

    EQ              reduce using rule 115 (thmbind -> ID attributes .)
    ID              reduce using rule 109 (thm -> ID attributes .)
    LEFT_BRACKET    reduce using rule 109 (thm -> ID attributes .)
    AND             reduce using rule 109 (thm -> ID attributes .)
    FIXES           reduce using rule 109 (thm -> ID attributes .)
    CONSTRAINS      reduce using rule 109 (thm -> ID attributes .)
    ASSUMES         reduce using rule 109 (thm -> ID attributes .)
    DEFINES         reduce using rule 109 (thm -> ID attributes .)
    NOTES           reduce using rule 109 (thm -> ID attributes .)
    BEGIN           reduce using rule 109 (thm -> ID attributes .)
    OPENING         reduce using rule 109 (thm -> ID attributes .)
    AXIOMATIZATION  reduce using rule 109 (thm -> ID attributes .)
    FUN             reduce using rule 109 (thm -> ID attributes .)
    FUNCTION        reduce using rule 109 (thm -> ID attributes .)
    INTERPRETATION  reduce using rule 109 (thm -> ID attributes .)
    LEMMA           reduce using rule 109 (thm -> ID attributes .)
    LOCALE          reduce using rule 109 (thm -> ID attributes .)
    METHOD          reduce using rule 109 (thm -> ID attributes .)
    SECTION         reduce using rule 109 (thm -> ID attributes .)
    TEXT            reduce using rule 109 (thm -> ID attributes .)
    TYPE_SYNONYM    reduce using rule 109 (thm -> ID attributes .)
    TYPEDECL        reduce using rule 109 (thm -> ID attributes .)
    END             reduce using rule 109 (thm -> ID attributes .)


state 343

    (26) instruction -> single_instruction instruction_modifier COMMA . instruction
    (24) instruction -> . single_instruction
    (25) instruction -> . single_instruction instruction_modifier
    (26) instruction -> . single_instruction instruction_modifier COMMA instruction
    (27) instruction -> . single_instruction SEMICOLON instruction
    (28) instruction -> . single_instruction COMMA instruction
    (29) instruction -> . LEFT_PAREN instruction RIGHT_PAREN
    (30) instruction -> . LEFT_PAREN instruction RIGHT_PAREN instruction_modifier
    (33) single_instruction -> . ID
    (34) single_instruction -> . ID method_args
    (35) single_instruction -> . LEFT_PAREN ID method_args RIGHT_PAREN
    (36) single_instruction -> . LEFT_PAREN ID method_args RIGHT_PAREN instruction_modifier

    LEFT_PAREN      shift and go to state 187
    ID              shift and go to state 188

    single_instruction             shift and go to state 186
    instruction                    shift and go to state 393

state 344

    (28) instruction -> single_instruction COMMA instruction .

    AXIOMATIZATION  reduce using rule 28 (instruction -> single_instruction COMMA instruction .)
    FUN             reduce using rule 28 (instruction -> single_instruction COMMA instruction .)
    FUNCTION        reduce using rule 28 (instruction -> single_instruction COMMA instruction .)
    INTERPRETATION  reduce using rule 28 (instruction -> single_instruction COMMA instruction .)
    LEMMA           reduce using rule 28 (instruction -> single_instruction COMMA instruction .)
    LOCALE          reduce using rule 28 (instruction -> single_instruction COMMA instruction .)
    METHOD          reduce using rule 28 (instruction -> single_instruction COMMA instruction .)
    SECTION         reduce using rule 28 (instruction -> single_instruction COMMA instruction .)
    TEXT            reduce using rule 28 (instruction -> single_instruction COMMA instruction .)
    TYPE_SYNONYM    reduce using rule 28 (instruction -> single_instruction COMMA instruction .)
    TYPEDECL        reduce using rule 28 (instruction -> single_instruction COMMA instruction .)
    END             reduce using rule 28 (instruction -> single_instruction COMMA instruction .)
    RIGHT_PAREN     reduce using rule 28 (instruction -> single_instruction COMMA instruction .)
    APPLY           reduce using rule 28 (instruction -> single_instruction COMMA instruction .)
    USING           reduce using rule 28 (instruction -> single_instruction COMMA instruction .)
    BY              reduce using rule 28 (instruction -> single_instruction COMMA instruction .)
    DONE            reduce using rule 28 (instruction -> single_instruction COMMA instruction .)
    SORRY           reduce using rule 28 (instruction -> single_instruction COMMA instruction .)
    SUBGOAL         reduce using rule 28 (instruction -> single_instruction COMMA instruction .)


state 345

    (27) instruction -> single_instruction SEMICOLON instruction .

    AXIOMATIZATION  reduce using rule 27 (instruction -> single_instruction SEMICOLON instruction .)
    FUN             reduce using rule 27 (instruction -> single_instruction SEMICOLON instruction .)
    FUNCTION        reduce using rule 27 (instruction -> single_instruction SEMICOLON instruction .)
    INTERPRETATION  reduce using rule 27 (instruction -> single_instruction SEMICOLON instruction .)
    LEMMA           reduce using rule 27 (instruction -> single_instruction SEMICOLON instruction .)
    LOCALE          reduce using rule 27 (instruction -> single_instruction SEMICOLON instruction .)
    METHOD          reduce using rule 27 (instruction -> single_instruction SEMICOLON instruction .)
    SECTION         reduce using rule 27 (instruction -> single_instruction SEMICOLON instruction .)
    TEXT            reduce using rule 27 (instruction -> single_instruction SEMICOLON instruction .)
    TYPE_SYNONYM    reduce using rule 27 (instruction -> single_instruction SEMICOLON instruction .)
    TYPEDECL        reduce using rule 27 (instruction -> single_instruction SEMICOLON instruction .)
    END             reduce using rule 27 (instruction -> single_instruction SEMICOLON instruction .)
    RIGHT_PAREN     reduce using rule 27 (instruction -> single_instruction SEMICOLON instruction .)
    APPLY           reduce using rule 27 (instruction -> single_instruction SEMICOLON instruction .)
    USING           reduce using rule 27 (instruction -> single_instruction SEMICOLON instruction .)
    BY              reduce using rule 27 (instruction -> single_instruction SEMICOLON instruction .)
    DONE            reduce using rule 27 (instruction -> single_instruction SEMICOLON instruction .)
    SORRY           reduce using rule 27 (instruction -> single_instruction SEMICOLON instruction .)
    SUBGOAL         reduce using rule 27 (instruction -> single_instruction SEMICOLON instruction .)


state 346

    (29) instruction -> LEFT_PAREN instruction RIGHT_PAREN .
    (30) instruction -> LEFT_PAREN instruction RIGHT_PAREN . instruction_modifier
    (31) instruction_modifier -> . PLUS
    (32) instruction_modifier -> . QUESTION_MARK

    AXIOMATIZATION  reduce using rule 29 (instruction -> LEFT_PAREN instruction RIGHT_PAREN .)
    FUN             reduce using rule 29 (instruction -> LEFT_PAREN instruction RIGHT_PAREN .)
    FUNCTION        reduce using rule 29 (instruction -> LEFT_PAREN instruction RIGHT_PAREN .)
    INTERPRETATION  reduce using rule 29 (instruction -> LEFT_PAREN instruction RIGHT_PAREN .)
    LEMMA           reduce using rule 29 (instruction -> LEFT_PAREN instruction RIGHT_PAREN .)
    LOCALE          reduce using rule 29 (instruction -> LEFT_PAREN instruction RIGHT_PAREN .)
    METHOD          reduce using rule 29 (instruction -> LEFT_PAREN instruction RIGHT_PAREN .)
    SECTION         reduce using rule 29 (instruction -> LEFT_PAREN instruction RIGHT_PAREN .)
    TEXT            reduce using rule 29 (instruction -> LEFT_PAREN instruction RIGHT_PAREN .)
    TYPE_SYNONYM    reduce using rule 29 (instruction -> LEFT_PAREN instruction RIGHT_PAREN .)
    TYPEDECL        reduce using rule 29 (instruction -> LEFT_PAREN instruction RIGHT_PAREN .)
    END             reduce using rule 29 (instruction -> LEFT_PAREN instruction RIGHT_PAREN .)
    RIGHT_PAREN     reduce using rule 29 (instruction -> LEFT_PAREN instruction RIGHT_PAREN .)
    APPLY           reduce using rule 29 (instruction -> LEFT_PAREN instruction RIGHT_PAREN .)
    USING           reduce using rule 29 (instruction -> LEFT_PAREN instruction RIGHT_PAREN .)
    BY              reduce using rule 29 (instruction -> LEFT_PAREN instruction RIGHT_PAREN .)
    DONE            reduce using rule 29 (instruction -> LEFT_PAREN instruction RIGHT_PAREN .)
    SORRY           reduce using rule 29 (instruction -> LEFT_PAREN instruction RIGHT_PAREN .)
    SUBGOAL         reduce using rule 29 (instruction -> LEFT_PAREN instruction RIGHT_PAREN .)
    PLUS            shift and go to state 267
    QUESTION_MARK   shift and go to state 268

    instruction_modifier           shift and go to state 394

state 347

    (35) single_instruction -> LEFT_PAREN ID method_args . RIGHT_PAREN
    (36) single_instruction -> LEFT_PAREN ID method_args . RIGHT_PAREN instruction_modifier
    (34) single_instruction -> ID method_args .

  ! shift/reduce conflict for RIGHT_PAREN resolved as shift
    RIGHT_PAREN     shift and go to state 395
    SEMICOLON       reduce using rule 34 (single_instruction -> ID method_args .)
    COMMA           reduce using rule 34 (single_instruction -> ID method_args .)
    PLUS            reduce using rule 34 (single_instruction -> ID method_args .)
    QUESTION_MARK   reduce using rule 34 (single_instruction -> ID method_args .)

  ! RIGHT_PAREN     [ reduce using rule 34 (single_instruction -> ID method_args .) ]


state 348

    (37) method_args -> ID COLON . method_arg method_args
    (40) method_arg -> . ID
    (41) method_arg -> . ID LEFT_PAREN NAT RIGHT_PAREN
    (42) method_arg -> . ID DOT ID
    (43) method_arg -> . ID DOT ID LEFT_PAREN NAT RIGHT_PAREN
    (44) method_arg -> . QUOTED_STRING

    ID              shift and go to state 396
    QUOTED_STRING   shift and go to state 275

    method_arg                     shift and go to state 397

state 349

    (41) method_arg -> ID LEFT_PAREN . NAT RIGHT_PAREN

    NAT             shift and go to state 398


state 350

    (42) method_arg -> ID DOT . ID
    (43) method_arg -> ID DOT . ID LEFT_PAREN NAT RIGHT_PAREN

    ID              shift and go to state 399


state 351

    (38) method_args -> method_arg method_args .

    SEMICOLON       reduce using rule 38 (method_args -> method_arg method_args .)
    COMMA           reduce using rule 38 (method_args -> method_arg method_args .)
    PLUS            reduce using rule 38 (method_args -> method_arg method_args .)
    QUESTION_MARK   reduce using rule 38 (method_args -> method_arg method_args .)
    AXIOMATIZATION  reduce using rule 38 (method_args -> method_arg method_args .)
    FUN             reduce using rule 38 (method_args -> method_arg method_args .)
    FUNCTION        reduce using rule 38 (method_args -> method_arg method_args .)
    INTERPRETATION  reduce using rule 38 (method_args -> method_arg method_args .)
    LEMMA           reduce using rule 38 (method_args -> method_arg method_args .)
    LOCALE          reduce using rule 38 (method_args -> method_arg method_args .)
    METHOD          reduce using rule 38 (method_args -> method_arg method_args .)
    SECTION         reduce using rule 38 (method_args -> method_arg method_args .)
    TEXT            reduce using rule 38 (method_args -> method_arg method_args .)
    TYPE_SYNONYM    reduce using rule 38 (method_args -> method_arg method_args .)
    TYPEDECL        reduce using rule 38 (method_args -> method_arg method_args .)
    END             reduce using rule 38 (method_args -> method_arg method_args .)
    RIGHT_PAREN     reduce using rule 38 (method_args -> method_arg method_args .)
    APPLY           reduce using rule 38 (method_args -> method_arg method_args .)
    USING           reduce using rule 38 (method_args -> method_arg method_args .)
    BY              reduce using rule 38 (method_args -> method_arg method_args .)
    DONE            reduce using rule 38 (method_args -> method_arg method_args .)
    SORRY           reduce using rule 38 (method_args -> method_arg method_args .)
    SUBGOAL         reduce using rule 38 (method_args -> method_arg method_args .)


state 352

    (141) prop_list -> ID AND prop_list .

    FOR             reduce using rule 141 (prop_list -> ID AND prop_list .)
    PIPE            reduce using rule 141 (prop_list -> ID AND prop_list .)
    AXIOMATIZATION  reduce using rule 141 (prop_list -> ID AND prop_list .)
    FUN             reduce using rule 141 (prop_list -> ID AND prop_list .)
    FUNCTION        reduce using rule 141 (prop_list -> ID AND prop_list .)
    INTERPRETATION  reduce using rule 141 (prop_list -> ID AND prop_list .)
    LEMMA           reduce using rule 141 (prop_list -> ID AND prop_list .)
    LOCALE          reduce using rule 141 (prop_list -> ID AND prop_list .)
    METHOD          reduce using rule 141 (prop_list -> ID AND prop_list .)
    SECTION         reduce using rule 141 (prop_list -> ID AND prop_list .)
    TEXT            reduce using rule 141 (prop_list -> ID AND prop_list .)
    TYPE_SYNONYM    reduce using rule 141 (prop_list -> ID AND prop_list .)
    TYPEDECL        reduce using rule 141 (prop_list -> ID AND prop_list .)
    END             reduce using rule 141 (prop_list -> ID AND prop_list .)
    FIXES           reduce using rule 141 (prop_list -> ID AND prop_list .)
    CONSTRAINS      reduce using rule 141 (prop_list -> ID AND prop_list .)
    ASSUMES         reduce using rule 141 (prop_list -> ID AND prop_list .)
    DEFINES         reduce using rule 141 (prop_list -> ID AND prop_list .)
    NOTES           reduce using rule 141 (prop_list -> ID AND prop_list .)
    BEGIN           reduce using rule 141 (prop_list -> ID AND prop_list .)
    OPENING         reduce using rule 141 (prop_list -> ID AND prop_list .)


state 353

    (126) arg -> LEFT_PAREN args RIGHT_PAREN .

    ID              reduce using rule 126 (arg -> LEFT_PAREN args RIGHT_PAREN .)
    LEFT_PAREN      reduce using rule 126 (arg -> LEFT_PAREN args RIGHT_PAREN .)
    LEFT_BRACKET    reduce using rule 126 (arg -> LEFT_PAREN args RIGHT_PAREN .)
    COMMA           reduce using rule 126 (arg -> LEFT_PAREN args RIGHT_PAREN .)
    RIGHT_BRACKET   reduce using rule 126 (arg -> LEFT_PAREN args RIGHT_PAREN .)
    RIGHT_PAREN     reduce using rule 126 (arg -> LEFT_PAREN args RIGHT_PAREN .)


state 354

    (127) arg -> LEFT_BRACKET args RIGHT_BRACKET .

    ID              reduce using rule 127 (arg -> LEFT_BRACKET args RIGHT_BRACKET .)
    LEFT_PAREN      reduce using rule 127 (arg -> LEFT_BRACKET args RIGHT_BRACKET .)
    LEFT_BRACKET    reduce using rule 127 (arg -> LEFT_BRACKET args RIGHT_BRACKET .)
    COMMA           reduce using rule 127 (arg -> LEFT_BRACKET args RIGHT_BRACKET .)
    RIGHT_BRACKET   reduce using rule 127 (arg -> LEFT_BRACKET args RIGHT_BRACKET .)
    RIGHT_PAREN     reduce using rule 127 (arg -> LEFT_BRACKET args RIGHT_BRACKET .)


state 355

    (224) mixfix -> LEFT_PAREN template prios NAT RIGHT_PAREN .

    AND             reduce using rule 224 (mixfix -> LEFT_PAREN template prios NAT RIGHT_PAREN .)
    WHERE           reduce using rule 224 (mixfix -> LEFT_PAREN template prios NAT RIGHT_PAREN .)
    AXIOMATIZATION  reduce using rule 224 (mixfix -> LEFT_PAREN template prios NAT RIGHT_PAREN .)
    FUN             reduce using rule 224 (mixfix -> LEFT_PAREN template prios NAT RIGHT_PAREN .)
    FUNCTION        reduce using rule 224 (mixfix -> LEFT_PAREN template prios NAT RIGHT_PAREN .)
    INTERPRETATION  reduce using rule 224 (mixfix -> LEFT_PAREN template prios NAT RIGHT_PAREN .)
    LEMMA           reduce using rule 224 (mixfix -> LEFT_PAREN template prios NAT RIGHT_PAREN .)
    LOCALE          reduce using rule 224 (mixfix -> LEFT_PAREN template prios NAT RIGHT_PAREN .)
    METHOD          reduce using rule 224 (mixfix -> LEFT_PAREN template prios NAT RIGHT_PAREN .)
    SECTION         reduce using rule 224 (mixfix -> LEFT_PAREN template prios NAT RIGHT_PAREN .)
    TEXT            reduce using rule 224 (mixfix -> LEFT_PAREN template prios NAT RIGHT_PAREN .)
    TYPE_SYNONYM    reduce using rule 224 (mixfix -> LEFT_PAREN template prios NAT RIGHT_PAREN .)
    TYPEDECL        reduce using rule 224 (mixfix -> LEFT_PAREN template prios NAT RIGHT_PAREN .)
    END             reduce using rule 224 (mixfix -> LEFT_PAREN template prios NAT RIGHT_PAREN .)
    OPENING         reduce using rule 224 (mixfix -> LEFT_PAREN template prios NAT RIGHT_PAREN .)
    BEGIN           reduce using rule 224 (mixfix -> LEFT_PAREN template prios NAT RIGHT_PAREN .)
    PIPE            reduce using rule 224 (mixfix -> LEFT_PAREN template prios NAT RIGHT_PAREN .)
    FIXES           reduce using rule 224 (mixfix -> LEFT_PAREN template prios NAT RIGHT_PAREN .)
    CONSTRAINS      reduce using rule 224 (mixfix -> LEFT_PAREN template prios NAT RIGHT_PAREN .)
    ASSUMES         reduce using rule 224 (mixfix -> LEFT_PAREN template prios NAT RIGHT_PAREN .)
    DEFINES         reduce using rule 224 (mixfix -> LEFT_PAREN template prios NAT RIGHT_PAREN .)
    NOTES           reduce using rule 224 (mixfix -> LEFT_PAREN template prios NAT RIGHT_PAREN .)


state 356

    (233) prios -> LEFT_BRACKET nat_list RIGHT_BRACKET .

    RIGHT_PAREN     reduce using rule 233 (prios -> LEFT_BRACKET nat_list RIGHT_BRACKET .)
    NAT             reduce using rule 233 (prios -> LEFT_BRACKET nat_list RIGHT_BRACKET .)


state 357

    (236) nat_list -> NAT COMMA . nat_list
    (235) nat_list -> . NAT
    (236) nat_list -> . NAT COMMA nat_list

    NAT             shift and go to state 292

    nat_list                       shift and go to state 400

state 358

    (225) mixfix -> LEFT_PAREN INFIX template NAT RIGHT_PAREN .

    AND             reduce using rule 225 (mixfix -> LEFT_PAREN INFIX template NAT RIGHT_PAREN .)
    WHERE           reduce using rule 225 (mixfix -> LEFT_PAREN INFIX template NAT RIGHT_PAREN .)
    AXIOMATIZATION  reduce using rule 225 (mixfix -> LEFT_PAREN INFIX template NAT RIGHT_PAREN .)
    FUN             reduce using rule 225 (mixfix -> LEFT_PAREN INFIX template NAT RIGHT_PAREN .)
    FUNCTION        reduce using rule 225 (mixfix -> LEFT_PAREN INFIX template NAT RIGHT_PAREN .)
    INTERPRETATION  reduce using rule 225 (mixfix -> LEFT_PAREN INFIX template NAT RIGHT_PAREN .)
    LEMMA           reduce using rule 225 (mixfix -> LEFT_PAREN INFIX template NAT RIGHT_PAREN .)
    LOCALE          reduce using rule 225 (mixfix -> LEFT_PAREN INFIX template NAT RIGHT_PAREN .)
    METHOD          reduce using rule 225 (mixfix -> LEFT_PAREN INFIX template NAT RIGHT_PAREN .)
    SECTION         reduce using rule 225 (mixfix -> LEFT_PAREN INFIX template NAT RIGHT_PAREN .)
    TEXT            reduce using rule 225 (mixfix -> LEFT_PAREN INFIX template NAT RIGHT_PAREN .)
    TYPE_SYNONYM    reduce using rule 225 (mixfix -> LEFT_PAREN INFIX template NAT RIGHT_PAREN .)
    TYPEDECL        reduce using rule 225 (mixfix -> LEFT_PAREN INFIX template NAT RIGHT_PAREN .)
    END             reduce using rule 225 (mixfix -> LEFT_PAREN INFIX template NAT RIGHT_PAREN .)
    OPENING         reduce using rule 225 (mixfix -> LEFT_PAREN INFIX template NAT RIGHT_PAREN .)
    BEGIN           reduce using rule 225 (mixfix -> LEFT_PAREN INFIX template NAT RIGHT_PAREN .)
    PIPE            reduce using rule 225 (mixfix -> LEFT_PAREN INFIX template NAT RIGHT_PAREN .)
    FIXES           reduce using rule 225 (mixfix -> LEFT_PAREN INFIX template NAT RIGHT_PAREN .)
    CONSTRAINS      reduce using rule 225 (mixfix -> LEFT_PAREN INFIX template NAT RIGHT_PAREN .)
    ASSUMES         reduce using rule 225 (mixfix -> LEFT_PAREN INFIX template NAT RIGHT_PAREN .)
    DEFINES         reduce using rule 225 (mixfix -> LEFT_PAREN INFIX template NAT RIGHT_PAREN .)
    NOTES           reduce using rule 225 (mixfix -> LEFT_PAREN INFIX template NAT RIGHT_PAREN .)


state 359

    (226) mixfix -> LEFT_PAREN INFIXL template NAT RIGHT_PAREN .

    AND             reduce using rule 226 (mixfix -> LEFT_PAREN INFIXL template NAT RIGHT_PAREN .)
    WHERE           reduce using rule 226 (mixfix -> LEFT_PAREN INFIXL template NAT RIGHT_PAREN .)
    AXIOMATIZATION  reduce using rule 226 (mixfix -> LEFT_PAREN INFIXL template NAT RIGHT_PAREN .)
    FUN             reduce using rule 226 (mixfix -> LEFT_PAREN INFIXL template NAT RIGHT_PAREN .)
    FUNCTION        reduce using rule 226 (mixfix -> LEFT_PAREN INFIXL template NAT RIGHT_PAREN .)
    INTERPRETATION  reduce using rule 226 (mixfix -> LEFT_PAREN INFIXL template NAT RIGHT_PAREN .)
    LEMMA           reduce using rule 226 (mixfix -> LEFT_PAREN INFIXL template NAT RIGHT_PAREN .)
    LOCALE          reduce using rule 226 (mixfix -> LEFT_PAREN INFIXL template NAT RIGHT_PAREN .)
    METHOD          reduce using rule 226 (mixfix -> LEFT_PAREN INFIXL template NAT RIGHT_PAREN .)
    SECTION         reduce using rule 226 (mixfix -> LEFT_PAREN INFIXL template NAT RIGHT_PAREN .)
    TEXT            reduce using rule 226 (mixfix -> LEFT_PAREN INFIXL template NAT RIGHT_PAREN .)
    TYPE_SYNONYM    reduce using rule 226 (mixfix -> LEFT_PAREN INFIXL template NAT RIGHT_PAREN .)
    TYPEDECL        reduce using rule 226 (mixfix -> LEFT_PAREN INFIXL template NAT RIGHT_PAREN .)
    END             reduce using rule 226 (mixfix -> LEFT_PAREN INFIXL template NAT RIGHT_PAREN .)
    OPENING         reduce using rule 226 (mixfix -> LEFT_PAREN INFIXL template NAT RIGHT_PAREN .)
    BEGIN           reduce using rule 226 (mixfix -> LEFT_PAREN INFIXL template NAT RIGHT_PAREN .)
    PIPE            reduce using rule 226 (mixfix -> LEFT_PAREN INFIXL template NAT RIGHT_PAREN .)
    FIXES           reduce using rule 226 (mixfix -> LEFT_PAREN INFIXL template NAT RIGHT_PAREN .)
    CONSTRAINS      reduce using rule 226 (mixfix -> LEFT_PAREN INFIXL template NAT RIGHT_PAREN .)
    ASSUMES         reduce using rule 226 (mixfix -> LEFT_PAREN INFIXL template NAT RIGHT_PAREN .)
    DEFINES         reduce using rule 226 (mixfix -> LEFT_PAREN INFIXL template NAT RIGHT_PAREN .)
    NOTES           reduce using rule 226 (mixfix -> LEFT_PAREN INFIXL template NAT RIGHT_PAREN .)


state 360

    (227) mixfix -> LEFT_PAREN INFIXR template NAT RIGHT_PAREN .

    AND             reduce using rule 227 (mixfix -> LEFT_PAREN INFIXR template NAT RIGHT_PAREN .)
    WHERE           reduce using rule 227 (mixfix -> LEFT_PAREN INFIXR template NAT RIGHT_PAREN .)
    AXIOMATIZATION  reduce using rule 227 (mixfix -> LEFT_PAREN INFIXR template NAT RIGHT_PAREN .)
    FUN             reduce using rule 227 (mixfix -> LEFT_PAREN INFIXR template NAT RIGHT_PAREN .)
    FUNCTION        reduce using rule 227 (mixfix -> LEFT_PAREN INFIXR template NAT RIGHT_PAREN .)
    INTERPRETATION  reduce using rule 227 (mixfix -> LEFT_PAREN INFIXR template NAT RIGHT_PAREN .)
    LEMMA           reduce using rule 227 (mixfix -> LEFT_PAREN INFIXR template NAT RIGHT_PAREN .)
    LOCALE          reduce using rule 227 (mixfix -> LEFT_PAREN INFIXR template NAT RIGHT_PAREN .)
    METHOD          reduce using rule 227 (mixfix -> LEFT_PAREN INFIXR template NAT RIGHT_PAREN .)
    SECTION         reduce using rule 227 (mixfix -> LEFT_PAREN INFIXR template NAT RIGHT_PAREN .)
    TEXT            reduce using rule 227 (mixfix -> LEFT_PAREN INFIXR template NAT RIGHT_PAREN .)
    TYPE_SYNONYM    reduce using rule 227 (mixfix -> LEFT_PAREN INFIXR template NAT RIGHT_PAREN .)
    TYPEDECL        reduce using rule 227 (mixfix -> LEFT_PAREN INFIXR template NAT RIGHT_PAREN .)
    END             reduce using rule 227 (mixfix -> LEFT_PAREN INFIXR template NAT RIGHT_PAREN .)
    OPENING         reduce using rule 227 (mixfix -> LEFT_PAREN INFIXR template NAT RIGHT_PAREN .)
    BEGIN           reduce using rule 227 (mixfix -> LEFT_PAREN INFIXR template NAT RIGHT_PAREN .)
    PIPE            reduce using rule 227 (mixfix -> LEFT_PAREN INFIXR template NAT RIGHT_PAREN .)
    FIXES           reduce using rule 227 (mixfix -> LEFT_PAREN INFIXR template NAT RIGHT_PAREN .)
    CONSTRAINS      reduce using rule 227 (mixfix -> LEFT_PAREN INFIXR template NAT RIGHT_PAREN .)
    ASSUMES         reduce using rule 227 (mixfix -> LEFT_PAREN INFIXR template NAT RIGHT_PAREN .)
    DEFINES         reduce using rule 227 (mixfix -> LEFT_PAREN INFIXR template NAT RIGHT_PAREN .)
    NOTES           reduce using rule 227 (mixfix -> LEFT_PAREN INFIXR template NAT RIGHT_PAREN .)


state 361

    (229) mixfix -> BINDER template prio NAT RIGHT_PAREN .

    AND             reduce using rule 229 (mixfix -> BINDER template prio NAT RIGHT_PAREN .)
    WHERE           reduce using rule 229 (mixfix -> BINDER template prio NAT RIGHT_PAREN .)
    AXIOMATIZATION  reduce using rule 229 (mixfix -> BINDER template prio NAT RIGHT_PAREN .)
    FUN             reduce using rule 229 (mixfix -> BINDER template prio NAT RIGHT_PAREN .)
    FUNCTION        reduce using rule 229 (mixfix -> BINDER template prio NAT RIGHT_PAREN .)
    INTERPRETATION  reduce using rule 229 (mixfix -> BINDER template prio NAT RIGHT_PAREN .)
    LEMMA           reduce using rule 229 (mixfix -> BINDER template prio NAT RIGHT_PAREN .)
    LOCALE          reduce using rule 229 (mixfix -> BINDER template prio NAT RIGHT_PAREN .)
    METHOD          reduce using rule 229 (mixfix -> BINDER template prio NAT RIGHT_PAREN .)
    SECTION         reduce using rule 229 (mixfix -> BINDER template prio NAT RIGHT_PAREN .)
    TEXT            reduce using rule 229 (mixfix -> BINDER template prio NAT RIGHT_PAREN .)
    TYPE_SYNONYM    reduce using rule 229 (mixfix -> BINDER template prio NAT RIGHT_PAREN .)
    TYPEDECL        reduce using rule 229 (mixfix -> BINDER template prio NAT RIGHT_PAREN .)
    END             reduce using rule 229 (mixfix -> BINDER template prio NAT RIGHT_PAREN .)
    OPENING         reduce using rule 229 (mixfix -> BINDER template prio NAT RIGHT_PAREN .)
    BEGIN           reduce using rule 229 (mixfix -> BINDER template prio NAT RIGHT_PAREN .)
    PIPE            reduce using rule 229 (mixfix -> BINDER template prio NAT RIGHT_PAREN .)
    FIXES           reduce using rule 229 (mixfix -> BINDER template prio NAT RIGHT_PAREN .)
    CONSTRAINS      reduce using rule 229 (mixfix -> BINDER template prio NAT RIGHT_PAREN .)
    ASSUMES         reduce using rule 229 (mixfix -> BINDER template prio NAT RIGHT_PAREN .)
    DEFINES         reduce using rule 229 (mixfix -> BINDER template prio NAT RIGHT_PAREN .)
    NOTES           reduce using rule 229 (mixfix -> BINDER template prio NAT RIGHT_PAREN .)


state 362

    (234) prio -> LEFT_BRACKET NAT RIGHT_BRACKET .

    NAT             reduce using rule 234 (prio -> LEFT_BRACKET NAT RIGHT_BRACKET .)


state 363

    (135) structured_spec -> thmdecl ID spec_prems for_fixes .

    PIPE            reduce using rule 135 (structured_spec -> thmdecl ID spec_prems for_fixes .)
    AXIOMATIZATION  reduce using rule 135 (structured_spec -> thmdecl ID spec_prems for_fixes .)
    FUN             reduce using rule 135 (structured_spec -> thmdecl ID spec_prems for_fixes .)
    FUNCTION        reduce using rule 135 (structured_spec -> thmdecl ID spec_prems for_fixes .)
    INTERPRETATION  reduce using rule 135 (structured_spec -> thmdecl ID spec_prems for_fixes .)
    LEMMA           reduce using rule 135 (structured_spec -> thmdecl ID spec_prems for_fixes .)
    LOCALE          reduce using rule 135 (structured_spec -> thmdecl ID spec_prems for_fixes .)
    METHOD          reduce using rule 135 (structured_spec -> thmdecl ID spec_prems for_fixes .)
    SECTION         reduce using rule 135 (structured_spec -> thmdecl ID spec_prems for_fixes .)
    TEXT            reduce using rule 135 (structured_spec -> thmdecl ID spec_prems for_fixes .)
    TYPE_SYNONYM    reduce using rule 135 (structured_spec -> thmdecl ID spec_prems for_fixes .)
    TYPEDECL        reduce using rule 135 (structured_spec -> thmdecl ID spec_prems for_fixes .)
    END             reduce using rule 135 (structured_spec -> thmdecl ID spec_prems for_fixes .)


state 364

    (136) structured_spec -> thmdecl QUOTED_STRING spec_prems for_fixes .

    PIPE            reduce using rule 136 (structured_spec -> thmdecl QUOTED_STRING spec_prems for_fixes .)
    AXIOMATIZATION  reduce using rule 136 (structured_spec -> thmdecl QUOTED_STRING spec_prems for_fixes .)
    FUN             reduce using rule 136 (structured_spec -> thmdecl QUOTED_STRING spec_prems for_fixes .)
    FUNCTION        reduce using rule 136 (structured_spec -> thmdecl QUOTED_STRING spec_prems for_fixes .)
    INTERPRETATION  reduce using rule 136 (structured_spec -> thmdecl QUOTED_STRING spec_prems for_fixes .)
    LEMMA           reduce using rule 136 (structured_spec -> thmdecl QUOTED_STRING spec_prems for_fixes .)
    LOCALE          reduce using rule 136 (structured_spec -> thmdecl QUOTED_STRING spec_prems for_fixes .)
    METHOD          reduce using rule 136 (structured_spec -> thmdecl QUOTED_STRING spec_prems for_fixes .)
    SECTION         reduce using rule 136 (structured_spec -> thmdecl QUOTED_STRING spec_prems for_fixes .)
    TEXT            reduce using rule 136 (structured_spec -> thmdecl QUOTED_STRING spec_prems for_fixes .)
    TYPE_SYNONYM    reduce using rule 136 (structured_spec -> thmdecl QUOTED_STRING spec_prems for_fixes .)
    TYPEDECL        reduce using rule 136 (structured_spec -> thmdecl QUOTED_STRING spec_prems for_fixes .)
    END             reduce using rule 136 (structured_spec -> thmdecl QUOTED_STRING spec_prems for_fixes .)


state 365

    (179) name_insts_list -> ID EQUALS ID name_insts_list .

    PLUS            reduce using rule 179 (name_insts_list -> ID EQUALS ID name_insts_list .)
    FOR             reduce using rule 179 (name_insts_list -> ID EQUALS ID name_insts_list .)
    AXIOMATIZATION  reduce using rule 179 (name_insts_list -> ID EQUALS ID name_insts_list .)
    FUN             reduce using rule 179 (name_insts_list -> ID EQUALS ID name_insts_list .)
    FUNCTION        reduce using rule 179 (name_insts_list -> ID EQUALS ID name_insts_list .)
    INTERPRETATION  reduce using rule 179 (name_insts_list -> ID EQUALS ID name_insts_list .)
    LEMMA           reduce using rule 179 (name_insts_list -> ID EQUALS ID name_insts_list .)
    LOCALE          reduce using rule 179 (name_insts_list -> ID EQUALS ID name_insts_list .)
    METHOD          reduce using rule 179 (name_insts_list -> ID EQUALS ID name_insts_list .)
    SECTION         reduce using rule 179 (name_insts_list -> ID EQUALS ID name_insts_list .)
    TEXT            reduce using rule 179 (name_insts_list -> ID EQUALS ID name_insts_list .)
    TYPE_SYNONYM    reduce using rule 179 (name_insts_list -> ID EQUALS ID name_insts_list .)
    TYPEDECL        reduce using rule 179 (name_insts_list -> ID EQUALS ID name_insts_list .)
    END             reduce using rule 179 (name_insts_list -> ID EQUALS ID name_insts_list .)
    OPENING         reduce using rule 179 (name_insts_list -> ID EQUALS ID name_insts_list .)
    BEGIN           reduce using rule 179 (name_insts_list -> ID EQUALS ID name_insts_list .)


state 366

    (180) name_insts_list -> ID EQUALS QUOTED_STRING name_insts_list .

    PLUS            reduce using rule 180 (name_insts_list -> ID EQUALS QUOTED_STRING name_insts_list .)
    FOR             reduce using rule 180 (name_insts_list -> ID EQUALS QUOTED_STRING name_insts_list .)
    AXIOMATIZATION  reduce using rule 180 (name_insts_list -> ID EQUALS QUOTED_STRING name_insts_list .)
    FUN             reduce using rule 180 (name_insts_list -> ID EQUALS QUOTED_STRING name_insts_list .)
    FUNCTION        reduce using rule 180 (name_insts_list -> ID EQUALS QUOTED_STRING name_insts_list .)
    INTERPRETATION  reduce using rule 180 (name_insts_list -> ID EQUALS QUOTED_STRING name_insts_list .)
    LEMMA           reduce using rule 180 (name_insts_list -> ID EQUALS QUOTED_STRING name_insts_list .)
    LOCALE          reduce using rule 180 (name_insts_list -> ID EQUALS QUOTED_STRING name_insts_list .)
    METHOD          reduce using rule 180 (name_insts_list -> ID EQUALS QUOTED_STRING name_insts_list .)
    SECTION         reduce using rule 180 (name_insts_list -> ID EQUALS QUOTED_STRING name_insts_list .)
    TEXT            reduce using rule 180 (name_insts_list -> ID EQUALS QUOTED_STRING name_insts_list .)
    TYPE_SYNONYM    reduce using rule 180 (name_insts_list -> ID EQUALS QUOTED_STRING name_insts_list .)
    TYPEDECL        reduce using rule 180 (name_insts_list -> ID EQUALS QUOTED_STRING name_insts_list .)
    END             reduce using rule 180 (name_insts_list -> ID EQUALS QUOTED_STRING name_insts_list .)
    OPENING         reduce using rule 180 (name_insts_list -> ID EQUALS QUOTED_STRING name_insts_list .)
    BEGIN           reduce using rule 180 (name_insts_list -> ID EQUALS QUOTED_STRING name_insts_list .)


state 367

    (46) lemma_proof_block -> PROOF apply_block .

    AXIOMATIZATION  reduce using rule 46 (lemma_proof_block -> PROOF apply_block .)
    FUN             reduce using rule 46 (lemma_proof_block -> PROOF apply_block .)
    FUNCTION        reduce using rule 46 (lemma_proof_block -> PROOF apply_block .)
    INTERPRETATION  reduce using rule 46 (lemma_proof_block -> PROOF apply_block .)
    LEMMA           reduce using rule 46 (lemma_proof_block -> PROOF apply_block .)
    LOCALE          reduce using rule 46 (lemma_proof_block -> PROOF apply_block .)
    METHOD          reduce using rule 46 (lemma_proof_block -> PROOF apply_block .)
    SECTION         reduce using rule 46 (lemma_proof_block -> PROOF apply_block .)
    TEXT            reduce using rule 46 (lemma_proof_block -> PROOF apply_block .)
    TYPE_SYNONYM    reduce using rule 46 (lemma_proof_block -> PROOF apply_block .)
    TYPEDECL        reduce using rule 46 (lemma_proof_block -> PROOF apply_block .)
    END             reduce using rule 46 (lemma_proof_block -> PROOF apply_block .)


state 368

    (57) apply_block -> empty .

    AXIOMATIZATION  reduce using rule 57 (apply_block -> empty .)
    FUN             reduce using rule 57 (apply_block -> empty .)
    FUNCTION        reduce using rule 57 (apply_block -> empty .)
    INTERPRETATION  reduce using rule 57 (apply_block -> empty .)
    LEMMA           reduce using rule 57 (apply_block -> empty .)
    LOCALE          reduce using rule 57 (apply_block -> empty .)
    METHOD          reduce using rule 57 (apply_block -> empty .)
    SECTION         reduce using rule 57 (apply_block -> empty .)
    TEXT            reduce using rule 57 (apply_block -> empty .)
    TYPE_SYNONYM    reduce using rule 57 (apply_block -> empty .)
    TYPEDECL        reduce using rule 57 (apply_block -> empty .)
    END             reduce using rule 57 (apply_block -> empty .)
    APPLY           reduce using rule 57 (apply_block -> empty .)
    USING           reduce using rule 57 (apply_block -> empty .)
    BY              reduce using rule 57 (apply_block -> empty .)
    DONE            reduce using rule 57 (apply_block -> empty .)
    SORRY           reduce using rule 57 (apply_block -> empty .)
    SUBGOAL         reduce using rule 57 (apply_block -> empty .)


state 369

    (55) apply_block -> single_apply apply_block .

    AXIOMATIZATION  reduce using rule 55 (apply_block -> single_apply apply_block .)
    FUN             reduce using rule 55 (apply_block -> single_apply apply_block .)
    FUNCTION        reduce using rule 55 (apply_block -> single_apply apply_block .)
    INTERPRETATION  reduce using rule 55 (apply_block -> single_apply apply_block .)
    LEMMA           reduce using rule 55 (apply_block -> single_apply apply_block .)
    LOCALE          reduce using rule 55 (apply_block -> single_apply apply_block .)
    METHOD          reduce using rule 55 (apply_block -> single_apply apply_block .)
    SECTION         reduce using rule 55 (apply_block -> single_apply apply_block .)
    TEXT            reduce using rule 55 (apply_block -> single_apply apply_block .)
    TYPE_SYNONYM    reduce using rule 55 (apply_block -> single_apply apply_block .)
    TYPEDECL        reduce using rule 55 (apply_block -> single_apply apply_block .)
    END             reduce using rule 55 (apply_block -> single_apply apply_block .)
    APPLY           reduce using rule 55 (apply_block -> single_apply apply_block .)
    USING           reduce using rule 55 (apply_block -> single_apply apply_block .)
    BY              reduce using rule 55 (apply_block -> single_apply apply_block .)
    DONE            reduce using rule 55 (apply_block -> single_apply apply_block .)
    SORRY           reduce using rule 55 (apply_block -> single_apply apply_block .)
    SUBGOAL         reduce using rule 55 (apply_block -> single_apply apply_block .)


state 370

    (56) apply_block -> subgoal apply_block .

    AXIOMATIZATION  reduce using rule 56 (apply_block -> subgoal apply_block .)
    FUN             reduce using rule 56 (apply_block -> subgoal apply_block .)
    FUNCTION        reduce using rule 56 (apply_block -> subgoal apply_block .)
    INTERPRETATION  reduce using rule 56 (apply_block -> subgoal apply_block .)
    LEMMA           reduce using rule 56 (apply_block -> subgoal apply_block .)
    LOCALE          reduce using rule 56 (apply_block -> subgoal apply_block .)
    METHOD          reduce using rule 56 (apply_block -> subgoal apply_block .)
    SECTION         reduce using rule 56 (apply_block -> subgoal apply_block .)
    TEXT            reduce using rule 56 (apply_block -> subgoal apply_block .)
    TYPE_SYNONYM    reduce using rule 56 (apply_block -> subgoal apply_block .)
    TYPEDECL        reduce using rule 56 (apply_block -> subgoal apply_block .)
    END             reduce using rule 56 (apply_block -> subgoal apply_block .)
    APPLY           reduce using rule 56 (apply_block -> subgoal apply_block .)
    USING           reduce using rule 56 (apply_block -> subgoal apply_block .)
    BY              reduce using rule 56 (apply_block -> subgoal apply_block .)
    DONE            reduce using rule 56 (apply_block -> subgoal apply_block .)
    SORRY           reduce using rule 56 (apply_block -> subgoal apply_block .)
    SUBGOAL         reduce using rule 56 (apply_block -> subgoal apply_block .)


state 371

    (58) single_apply -> APPLY instruction .

    APPLY           reduce using rule 58 (single_apply -> APPLY instruction .)
    USING           reduce using rule 58 (single_apply -> APPLY instruction .)
    BY              reduce using rule 58 (single_apply -> APPLY instruction .)
    DONE            reduce using rule 58 (single_apply -> APPLY instruction .)
    SORRY           reduce using rule 58 (single_apply -> APPLY instruction .)
    SUBGOAL         reduce using rule 58 (single_apply -> APPLY instruction .)
    AXIOMATIZATION  reduce using rule 58 (single_apply -> APPLY instruction .)
    FUN             reduce using rule 58 (single_apply -> APPLY instruction .)
    FUNCTION        reduce using rule 58 (single_apply -> APPLY instruction .)
    INTERPRETATION  reduce using rule 58 (single_apply -> APPLY instruction .)
    LEMMA           reduce using rule 58 (single_apply -> APPLY instruction .)
    LOCALE          reduce using rule 58 (single_apply -> APPLY instruction .)
    METHOD          reduce using rule 58 (single_apply -> APPLY instruction .)
    SECTION         reduce using rule 58 (single_apply -> APPLY instruction .)
    TEXT            reduce using rule 58 (single_apply -> APPLY instruction .)
    TYPE_SYNONYM    reduce using rule 58 (single_apply -> APPLY instruction .)
    TYPEDECL        reduce using rule 58 (single_apply -> APPLY instruction .)
    END             reduce using rule 58 (single_apply -> APPLY instruction .)


state 372

    (59) single_apply -> APPLY LEFT_PAREN . instruction RIGHT_PAREN
    (29) instruction -> LEFT_PAREN . instruction RIGHT_PAREN
    (30) instruction -> LEFT_PAREN . instruction RIGHT_PAREN instruction_modifier
    (35) single_instruction -> LEFT_PAREN . ID method_args RIGHT_PAREN
    (36) single_instruction -> LEFT_PAREN . ID method_args RIGHT_PAREN instruction_modifier
    (24) instruction -> . single_instruction
    (25) instruction -> . single_instruction instruction_modifier
    (26) instruction -> . single_instruction instruction_modifier COMMA instruction
    (27) instruction -> . single_instruction SEMICOLON instruction
    (28) instruction -> . single_instruction COMMA instruction
    (29) instruction -> . LEFT_PAREN instruction RIGHT_PAREN
    (30) instruction -> . LEFT_PAREN instruction RIGHT_PAREN instruction_modifier
    (33) single_instruction -> . ID
    (34) single_instruction -> . ID method_args
    (35) single_instruction -> . LEFT_PAREN ID method_args RIGHT_PAREN
    (36) single_instruction -> . LEFT_PAREN ID method_args RIGHT_PAREN instruction_modifier

    ID              shift and go to state 270
    LEFT_PAREN      shift and go to state 187

    instruction                    shift and go to state 401
    single_instruction             shift and go to state 186

state 373

    (60) single_apply -> USING using_block . APPLY DASH
    (61) single_apply -> USING using_block . APPLY instruction
    (62) single_apply -> USING using_block . APPLY LEFT_PAREN instruction RIGHT_PAREN
    (65) single_apply -> USING using_block . BY instruction
    (66) single_apply -> USING using_block . BY LEFT_PAREN instruction RIGHT_PAREN

    APPLY           shift and go to state 402
    BY              shift and go to state 403


state 374

    (69) using_block -> ASSMS . using_block
    (70) using_block -> ASSMS . LEFT_PAREN NAT RIGHT_PAREN using_block
    (71) using_block -> ASSMS . LEFT_PAREN NAT COMMA NAT RIGHT_PAREN using_block
    (72) using_block -> ASSMS . LEFT_PAREN NAT DASH NAT RIGHT_PAREN using_block
    (69) using_block -> . ASSMS using_block
    (70) using_block -> . ASSMS LEFT_PAREN NAT RIGHT_PAREN using_block
    (71) using_block -> . ASSMS LEFT_PAREN NAT COMMA NAT RIGHT_PAREN using_block
    (72) using_block -> . ASSMS LEFT_PAREN NAT DASH NAT RIGHT_PAREN using_block
    (73) using_block -> . empty
    (261) empty -> .

    LEFT_PAREN      shift and go to state 405
    ASSMS           shift and go to state 374
    APPLY           reduce using rule 261 (empty -> .)
    BY              reduce using rule 261 (empty -> .)

    using_block                    shift and go to state 404
    empty                          shift and go to state 375

state 375

    (73) using_block -> empty .

    APPLY           reduce using rule 73 (using_block -> empty .)
    BY              reduce using rule 73 (using_block -> empty .)


state 376

    (63) single_apply -> BY instruction .

    APPLY           reduce using rule 63 (single_apply -> BY instruction .)
    USING           reduce using rule 63 (single_apply -> BY instruction .)
    BY              reduce using rule 63 (single_apply -> BY instruction .)
    DONE            reduce using rule 63 (single_apply -> BY instruction .)
    SORRY           reduce using rule 63 (single_apply -> BY instruction .)
    SUBGOAL         reduce using rule 63 (single_apply -> BY instruction .)
    AXIOMATIZATION  reduce using rule 63 (single_apply -> BY instruction .)
    FUN             reduce using rule 63 (single_apply -> BY instruction .)
    FUNCTION        reduce using rule 63 (single_apply -> BY instruction .)
    INTERPRETATION  reduce using rule 63 (single_apply -> BY instruction .)
    LEMMA           reduce using rule 63 (single_apply -> BY instruction .)
    LOCALE          reduce using rule 63 (single_apply -> BY instruction .)
    METHOD          reduce using rule 63 (single_apply -> BY instruction .)
    SECTION         reduce using rule 63 (single_apply -> BY instruction .)
    TEXT            reduce using rule 63 (single_apply -> BY instruction .)
    TYPE_SYNONYM    reduce using rule 63 (single_apply -> BY instruction .)
    TYPEDECL        reduce using rule 63 (single_apply -> BY instruction .)
    END             reduce using rule 63 (single_apply -> BY instruction .)


state 377

    (64) single_apply -> BY LEFT_PAREN . instruction RIGHT_PAREN
    (29) instruction -> LEFT_PAREN . instruction RIGHT_PAREN
    (30) instruction -> LEFT_PAREN . instruction RIGHT_PAREN instruction_modifier
    (35) single_instruction -> LEFT_PAREN . ID method_args RIGHT_PAREN
    (36) single_instruction -> LEFT_PAREN . ID method_args RIGHT_PAREN instruction_modifier
    (24) instruction -> . single_instruction
    (25) instruction -> . single_instruction instruction_modifier
    (26) instruction -> . single_instruction instruction_modifier COMMA instruction
    (27) instruction -> . single_instruction SEMICOLON instruction
    (28) instruction -> . single_instruction COMMA instruction
    (29) instruction -> . LEFT_PAREN instruction RIGHT_PAREN
    (30) instruction -> . LEFT_PAREN instruction RIGHT_PAREN instruction_modifier
    (33) single_instruction -> . ID
    (34) single_instruction -> . ID method_args
    (35) single_instruction -> . LEFT_PAREN ID method_args RIGHT_PAREN
    (36) single_instruction -> . LEFT_PAREN ID method_args RIGHT_PAREN instruction_modifier

    ID              shift and go to state 270
    LEFT_PAREN      shift and go to state 187

    instruction                    shift and go to state 406
    single_instruction             shift and go to state 186

state 378

    (76) subgoal -> SUBGOAL QUOTED_STRING . apply_block
    (55) apply_block -> . single_apply apply_block
    (56) apply_block -> . subgoal apply_block
    (57) apply_block -> . empty
    (58) single_apply -> . APPLY instruction
    (59) single_apply -> . APPLY LEFT_PAREN instruction RIGHT_PAREN
    (60) single_apply -> . USING using_block APPLY DASH
    (61) single_apply -> . USING using_block APPLY instruction
    (62) single_apply -> . USING using_block APPLY LEFT_PAREN instruction RIGHT_PAREN
    (63) single_apply -> . BY instruction
    (64) single_apply -> . BY LEFT_PAREN instruction RIGHT_PAREN
    (65) single_apply -> . USING using_block BY instruction
    (66) single_apply -> . USING using_block BY LEFT_PAREN instruction RIGHT_PAREN
    (67) single_apply -> . DONE
    (68) single_apply -> . SORRY
    (76) subgoal -> . SUBGOAL QUOTED_STRING apply_block
    (261) empty -> .

  ! shift/reduce conflict for APPLY resolved as shift
  ! shift/reduce conflict for USING resolved as shift
  ! shift/reduce conflict for BY resolved as shift
  ! shift/reduce conflict for DONE resolved as shift
  ! shift/reduce conflict for SORRY resolved as shift
  ! shift/reduce conflict for SUBGOAL resolved as shift
    APPLY           shift and go to state 314
    USING           shift and go to state 315
    BY              shift and go to state 316
    DONE            shift and go to state 317
    SORRY           shift and go to state 318
    SUBGOAL         shift and go to state 319
    AXIOMATIZATION  reduce using rule 261 (empty -> .)
    FUN             reduce using rule 261 (empty -> .)
    FUNCTION        reduce using rule 261 (empty -> .)
    INTERPRETATION  reduce using rule 261 (empty -> .)
    LEMMA           reduce using rule 261 (empty -> .)
    LOCALE          reduce using rule 261 (empty -> .)
    METHOD          reduce using rule 261 (empty -> .)
    SECTION         reduce using rule 261 (empty -> .)
    TEXT            reduce using rule 261 (empty -> .)
    TYPE_SYNONYM    reduce using rule 261 (empty -> .)
    TYPEDECL        reduce using rule 261 (empty -> .)
    END             reduce using rule 261 (empty -> .)

  ! APPLY           [ reduce using rule 261 (empty -> .) ]
  ! USING           [ reduce using rule 261 (empty -> .) ]
  ! BY              [ reduce using rule 261 (empty -> .) ]
  ! DONE            [ reduce using rule 261 (empty -> .) ]
  ! SORRY           [ reduce using rule 261 (empty -> .) ]
  ! SUBGOAL         [ reduce using rule 261 (empty -> .) ]

    apply_block                    shift and go to state 407
    single_apply                   shift and go to state 312
    subgoal                        shift and go to state 313
    empty                          shift and go to state 368

state 379

    (50) assumptions_list -> assumption AND assumptions_list .

    SHOWS           reduce using rule 50 (assumptions_list -> assumption AND assumptions_list .)


state 380

    (53) assumption -> NAT COLON QUOTED_STRING .

    AND             reduce using rule 53 (assumption -> NAT COLON QUOTED_STRING .)
    SHOWS           reduce using rule 53 (assumption -> NAT COLON QUOTED_STRING .)


state 381

    (185) locale_block -> LOCALE ID EQ locale BEGIN content END .

    AXIOMATIZATION  reduce using rule 185 (locale_block -> LOCALE ID EQ locale BEGIN content END .)
    FUN             reduce using rule 185 (locale_block -> LOCALE ID EQ locale BEGIN content END .)
    FUNCTION        reduce using rule 185 (locale_block -> LOCALE ID EQ locale BEGIN content END .)
    INTERPRETATION  reduce using rule 185 (locale_block -> LOCALE ID EQ locale BEGIN content END .)
    LEMMA           reduce using rule 185 (locale_block -> LOCALE ID EQ locale BEGIN content END .)
    LOCALE          reduce using rule 185 (locale_block -> LOCALE ID EQ locale BEGIN content END .)
    METHOD          reduce using rule 185 (locale_block -> LOCALE ID EQ locale BEGIN content END .)
    SECTION         reduce using rule 185 (locale_block -> LOCALE ID EQ locale BEGIN content END .)
    TEXT            reduce using rule 185 (locale_block -> LOCALE ID EQ locale BEGIN content END .)
    TYPE_SYNONYM    reduce using rule 185 (locale_block -> LOCALE ID EQ locale BEGIN content END .)
    TYPEDECL        reduce using rule 185 (locale_block -> LOCALE ID EQ locale BEGIN content END .)
    END             reduce using rule 185 (locale_block -> LOCALE ID EQ locale BEGIN content END .)


state 382

    (191) locale -> locale opening PLUS context_elem_list .

    BEGIN           reduce using rule 191 (locale -> locale opening PLUS context_elem_list .)
    OPENING         reduce using rule 191 (locale -> locale opening PLUS context_elem_list .)
    AXIOMATIZATION  reduce using rule 191 (locale -> locale opening PLUS context_elem_list .)
    FUN             reduce using rule 191 (locale -> locale opening PLUS context_elem_list .)
    FUNCTION        reduce using rule 191 (locale -> locale opening PLUS context_elem_list .)
    INTERPRETATION  reduce using rule 191 (locale -> locale opening PLUS context_elem_list .)
    LEMMA           reduce using rule 191 (locale -> locale opening PLUS context_elem_list .)
    LOCALE          reduce using rule 191 (locale -> locale opening PLUS context_elem_list .)
    METHOD          reduce using rule 191 (locale -> locale opening PLUS context_elem_list .)
    SECTION         reduce using rule 191 (locale -> locale opening PLUS context_elem_list .)
    TEXT            reduce using rule 191 (locale -> locale opening PLUS context_elem_list .)
    TYPE_SYNONYM    reduce using rule 191 (locale -> locale opening PLUS context_elem_list .)
    TYPEDECL        reduce using rule 191 (locale -> locale opening PLUS context_elem_list .)
    END             reduce using rule 191 (locale -> locale opening PLUS context_elem_list .)


state 383

    (192) locale -> locale_expr opening PLUS context_elem_list .

    BEGIN           reduce using rule 192 (locale -> locale_expr opening PLUS context_elem_list .)
    OPENING         reduce using rule 192 (locale -> locale_expr opening PLUS context_elem_list .)
    AXIOMATIZATION  reduce using rule 192 (locale -> locale_expr opening PLUS context_elem_list .)
    FUN             reduce using rule 192 (locale -> locale_expr opening PLUS context_elem_list .)
    FUNCTION        reduce using rule 192 (locale -> locale_expr opening PLUS context_elem_list .)
    INTERPRETATION  reduce using rule 192 (locale -> locale_expr opening PLUS context_elem_list .)
    LEMMA           reduce using rule 192 (locale -> locale_expr opening PLUS context_elem_list .)
    LOCALE          reduce using rule 192 (locale -> locale_expr opening PLUS context_elem_list .)
    METHOD          reduce using rule 192 (locale -> locale_expr opening PLUS context_elem_list .)
    SECTION         reduce using rule 192 (locale -> locale_expr opening PLUS context_elem_list .)
    TEXT            reduce using rule 192 (locale -> locale_expr opening PLUS context_elem_list .)
    TYPE_SYNONYM    reduce using rule 192 (locale -> locale_expr opening PLUS context_elem_list .)
    TYPEDECL        reduce using rule 192 (locale -> locale_expr opening PLUS context_elem_list .)
    END             reduce using rule 192 (locale -> locale_expr opening PLUS context_elem_list .)


state 384

    (200) name_type_list -> ID COLON COLON . ID
    (201) name_type_list -> ID COLON COLON . ID AND name_type_list

    ID              shift and go to state 408


state 385

    (203) defines_list -> defines_list_element AND defines_list .

    FIXES           reduce using rule 203 (defines_list -> defines_list_element AND defines_list .)
    CONSTRAINS      reduce using rule 203 (defines_list -> defines_list_element AND defines_list .)
    ASSUMES         reduce using rule 203 (defines_list -> defines_list_element AND defines_list .)
    DEFINES         reduce using rule 203 (defines_list -> defines_list_element AND defines_list .)
    NOTES           reduce using rule 203 (defines_list -> defines_list_element AND defines_list .)
    BEGIN           reduce using rule 203 (defines_list -> defines_list_element AND defines_list .)
    OPENING         reduce using rule 203 (defines_list -> defines_list_element AND defines_list .)
    AXIOMATIZATION  reduce using rule 203 (defines_list -> defines_list_element AND defines_list .)
    FUN             reduce using rule 203 (defines_list -> defines_list_element AND defines_list .)
    FUNCTION        reduce using rule 203 (defines_list -> defines_list_element AND defines_list .)
    INTERPRETATION  reduce using rule 203 (defines_list -> defines_list_element AND defines_list .)
    LEMMA           reduce using rule 203 (defines_list -> defines_list_element AND defines_list .)
    LOCALE          reduce using rule 203 (defines_list -> defines_list_element AND defines_list .)
    METHOD          reduce using rule 203 (defines_list -> defines_list_element AND defines_list .)
    SECTION         reduce using rule 203 (defines_list -> defines_list_element AND defines_list .)
    TEXT            reduce using rule 203 (defines_list -> defines_list_element AND defines_list .)
    TYPE_SYNONYM    reduce using rule 203 (defines_list -> defines_list_element AND defines_list .)
    TYPEDECL        reduce using rule 203 (defines_list -> defines_list_element AND defines_list .)
    END             reduce using rule 203 (defines_list -> defines_list_element AND defines_list .)


state 386

    (102) prop_pat -> LEFT_PAREN prop_pat_terms . RIGHT_PAREN

    RIGHT_PAREN     shift and go to state 409


state 387

    (103) prop_pat_terms -> prop_pat_term .
    (104) prop_pat_terms -> prop_pat_term . prop_pat_terms
    (103) prop_pat_terms -> . prop_pat_term
    (104) prop_pat_terms -> . prop_pat_term prop_pat_terms
    (105) prop_pat_term -> . IS ID
    (106) prop_pat_term -> . IS QUOTED_STRING

    RIGHT_PAREN     reduce using rule 103 (prop_pat_terms -> prop_pat_term .)
    IS              shift and go to state 388

    prop_pat_term                  shift and go to state 387
    prop_pat_terms                 shift and go to state 410

state 388

    (105) prop_pat_term -> IS . ID
    (106) prop_pat_term -> IS . QUOTED_STRING

    ID              shift and go to state 411
    QUOTED_STRING   shift and go to state 412


state 389

    (210) defines_list_element -> thmdecl ID prop_pat .

    AND             reduce using rule 210 (defines_list_element -> thmdecl ID prop_pat .)
    FIXES           reduce using rule 210 (defines_list_element -> thmdecl ID prop_pat .)
    CONSTRAINS      reduce using rule 210 (defines_list_element -> thmdecl ID prop_pat .)
    ASSUMES         reduce using rule 210 (defines_list_element -> thmdecl ID prop_pat .)
    DEFINES         reduce using rule 210 (defines_list_element -> thmdecl ID prop_pat .)
    NOTES           reduce using rule 210 (defines_list_element -> thmdecl ID prop_pat .)
    BEGIN           reduce using rule 210 (defines_list_element -> thmdecl ID prop_pat .)
    OPENING         reduce using rule 210 (defines_list_element -> thmdecl ID prop_pat .)
    AXIOMATIZATION  reduce using rule 210 (defines_list_element -> thmdecl ID prop_pat .)
    FUN             reduce using rule 210 (defines_list_element -> thmdecl ID prop_pat .)
    FUNCTION        reduce using rule 210 (defines_list_element -> thmdecl ID prop_pat .)
    INTERPRETATION  reduce using rule 210 (defines_list_element -> thmdecl ID prop_pat .)
    LEMMA           reduce using rule 210 (defines_list_element -> thmdecl ID prop_pat .)
    LOCALE          reduce using rule 210 (defines_list_element -> thmdecl ID prop_pat .)
    METHOD          reduce using rule 210 (defines_list_element -> thmdecl ID prop_pat .)
    SECTION         reduce using rule 210 (defines_list_element -> thmdecl ID prop_pat .)
    TEXT            reduce using rule 210 (defines_list_element -> thmdecl ID prop_pat .)
    TYPE_SYNONYM    reduce using rule 210 (defines_list_element -> thmdecl ID prop_pat .)
    TYPEDECL        reduce using rule 210 (defines_list_element -> thmdecl ID prop_pat .)
    END             reduce using rule 210 (defines_list_element -> thmdecl ID prop_pat .)


state 390

    (211) defines_list_element -> thmdecl QUOTED_STRING prop_pat .

    AND             reduce using rule 211 (defines_list_element -> thmdecl QUOTED_STRING prop_pat .)
    FIXES           reduce using rule 211 (defines_list_element -> thmdecl QUOTED_STRING prop_pat .)
    CONSTRAINS      reduce using rule 211 (defines_list_element -> thmdecl QUOTED_STRING prop_pat .)
    ASSUMES         reduce using rule 211 (defines_list_element -> thmdecl QUOTED_STRING prop_pat .)
    DEFINES         reduce using rule 211 (defines_list_element -> thmdecl QUOTED_STRING prop_pat .)
    NOTES           reduce using rule 211 (defines_list_element -> thmdecl QUOTED_STRING prop_pat .)
    BEGIN           reduce using rule 211 (defines_list_element -> thmdecl QUOTED_STRING prop_pat .)
    OPENING         reduce using rule 211 (defines_list_element -> thmdecl QUOTED_STRING prop_pat .)
    AXIOMATIZATION  reduce using rule 211 (defines_list_element -> thmdecl QUOTED_STRING prop_pat .)
    FUN             reduce using rule 211 (defines_list_element -> thmdecl QUOTED_STRING prop_pat .)
    FUNCTION        reduce using rule 211 (defines_list_element -> thmdecl QUOTED_STRING prop_pat .)
    INTERPRETATION  reduce using rule 211 (defines_list_element -> thmdecl QUOTED_STRING prop_pat .)
    LEMMA           reduce using rule 211 (defines_list_element -> thmdecl QUOTED_STRING prop_pat .)
    LOCALE          reduce using rule 211 (defines_list_element -> thmdecl QUOTED_STRING prop_pat .)
    METHOD          reduce using rule 211 (defines_list_element -> thmdecl QUOTED_STRING prop_pat .)
    SECTION         reduce using rule 211 (defines_list_element -> thmdecl QUOTED_STRING prop_pat .)
    TEXT            reduce using rule 211 (defines_list_element -> thmdecl QUOTED_STRING prop_pat .)
    TYPE_SYNONYM    reduce using rule 211 (defines_list_element -> thmdecl QUOTED_STRING prop_pat .)
    TYPEDECL        reduce using rule 211 (defines_list_element -> thmdecl QUOTED_STRING prop_pat .)
    END             reduce using rule 211 (defines_list_element -> thmdecl QUOTED_STRING prop_pat .)


state 391

    (213) notes_list -> notes_list_element AND notes_list .

    FIXES           reduce using rule 213 (notes_list -> notes_list_element AND notes_list .)
    CONSTRAINS      reduce using rule 213 (notes_list -> notes_list_element AND notes_list .)
    ASSUMES         reduce using rule 213 (notes_list -> notes_list_element AND notes_list .)
    DEFINES         reduce using rule 213 (notes_list -> notes_list_element AND notes_list .)
    NOTES           reduce using rule 213 (notes_list -> notes_list_element AND notes_list .)
    BEGIN           reduce using rule 213 (notes_list -> notes_list_element AND notes_list .)
    OPENING         reduce using rule 213 (notes_list -> notes_list_element AND notes_list .)
    AXIOMATIZATION  reduce using rule 213 (notes_list -> notes_list_element AND notes_list .)
    FUN             reduce using rule 213 (notes_list -> notes_list_element AND notes_list .)
    FUNCTION        reduce using rule 213 (notes_list -> notes_list_element AND notes_list .)
    INTERPRETATION  reduce using rule 213 (notes_list -> notes_list_element AND notes_list .)
    LEMMA           reduce using rule 213 (notes_list -> notes_list_element AND notes_list .)
    LOCALE          reduce using rule 213 (notes_list -> notes_list_element AND notes_list .)
    METHOD          reduce using rule 213 (notes_list -> notes_list_element AND notes_list .)
    SECTION         reduce using rule 213 (notes_list -> notes_list_element AND notes_list .)
    TEXT            reduce using rule 213 (notes_list -> notes_list_element AND notes_list .)
    TYPE_SYNONYM    reduce using rule 213 (notes_list -> notes_list_element AND notes_list .)
    TYPEDECL        reduce using rule 213 (notes_list -> notes_list_element AND notes_list .)
    END             reduce using rule 213 (notes_list -> notes_list_element AND notes_list .)


state 392

    (109) thm -> ID attributes .

    ID              reduce using rule 109 (thm -> ID attributes .)
    LEFT_BRACKET    reduce using rule 109 (thm -> ID attributes .)
    AND             reduce using rule 109 (thm -> ID attributes .)
    FIXES           reduce using rule 109 (thm -> ID attributes .)
    CONSTRAINS      reduce using rule 109 (thm -> ID attributes .)
    ASSUMES         reduce using rule 109 (thm -> ID attributes .)
    DEFINES         reduce using rule 109 (thm -> ID attributes .)
    NOTES           reduce using rule 109 (thm -> ID attributes .)
    BEGIN           reduce using rule 109 (thm -> ID attributes .)
    OPENING         reduce using rule 109 (thm -> ID attributes .)
    AXIOMATIZATION  reduce using rule 109 (thm -> ID attributes .)
    FUN             reduce using rule 109 (thm -> ID attributes .)
    FUNCTION        reduce using rule 109 (thm -> ID attributes .)
    INTERPRETATION  reduce using rule 109 (thm -> ID attributes .)
    LEMMA           reduce using rule 109 (thm -> ID attributes .)
    LOCALE          reduce using rule 109 (thm -> ID attributes .)
    METHOD          reduce using rule 109 (thm -> ID attributes .)
    SECTION         reduce using rule 109 (thm -> ID attributes .)
    TEXT            reduce using rule 109 (thm -> ID attributes .)
    TYPE_SYNONYM    reduce using rule 109 (thm -> ID attributes .)
    TYPEDECL        reduce using rule 109 (thm -> ID attributes .)
    END             reduce using rule 109 (thm -> ID attributes .)


state 393

    (26) instruction -> single_instruction instruction_modifier COMMA instruction .

    AXIOMATIZATION  reduce using rule 26 (instruction -> single_instruction instruction_modifier COMMA instruction .)
    FUN             reduce using rule 26 (instruction -> single_instruction instruction_modifier COMMA instruction .)
    FUNCTION        reduce using rule 26 (instruction -> single_instruction instruction_modifier COMMA instruction .)
    INTERPRETATION  reduce using rule 26 (instruction -> single_instruction instruction_modifier COMMA instruction .)
    LEMMA           reduce using rule 26 (instruction -> single_instruction instruction_modifier COMMA instruction .)
    LOCALE          reduce using rule 26 (instruction -> single_instruction instruction_modifier COMMA instruction .)
    METHOD          reduce using rule 26 (instruction -> single_instruction instruction_modifier COMMA instruction .)
    SECTION         reduce using rule 26 (instruction -> single_instruction instruction_modifier COMMA instruction .)
    TEXT            reduce using rule 26 (instruction -> single_instruction instruction_modifier COMMA instruction .)
    TYPE_SYNONYM    reduce using rule 26 (instruction -> single_instruction instruction_modifier COMMA instruction .)
    TYPEDECL        reduce using rule 26 (instruction -> single_instruction instruction_modifier COMMA instruction .)
    END             reduce using rule 26 (instruction -> single_instruction instruction_modifier COMMA instruction .)
    RIGHT_PAREN     reduce using rule 26 (instruction -> single_instruction instruction_modifier COMMA instruction .)
    APPLY           reduce using rule 26 (instruction -> single_instruction instruction_modifier COMMA instruction .)
    USING           reduce using rule 26 (instruction -> single_instruction instruction_modifier COMMA instruction .)
    BY              reduce using rule 26 (instruction -> single_instruction instruction_modifier COMMA instruction .)
    DONE            reduce using rule 26 (instruction -> single_instruction instruction_modifier COMMA instruction .)
    SORRY           reduce using rule 26 (instruction -> single_instruction instruction_modifier COMMA instruction .)
    SUBGOAL         reduce using rule 26 (instruction -> single_instruction instruction_modifier COMMA instruction .)


state 394

    (30) instruction -> LEFT_PAREN instruction RIGHT_PAREN instruction_modifier .

    AXIOMATIZATION  reduce using rule 30 (instruction -> LEFT_PAREN instruction RIGHT_PAREN instruction_modifier .)
    FUN             reduce using rule 30 (instruction -> LEFT_PAREN instruction RIGHT_PAREN instruction_modifier .)
    FUNCTION        reduce using rule 30 (instruction -> LEFT_PAREN instruction RIGHT_PAREN instruction_modifier .)
    INTERPRETATION  reduce using rule 30 (instruction -> LEFT_PAREN instruction RIGHT_PAREN instruction_modifier .)
    LEMMA           reduce using rule 30 (instruction -> LEFT_PAREN instruction RIGHT_PAREN instruction_modifier .)
    LOCALE          reduce using rule 30 (instruction -> LEFT_PAREN instruction RIGHT_PAREN instruction_modifier .)
    METHOD          reduce using rule 30 (instruction -> LEFT_PAREN instruction RIGHT_PAREN instruction_modifier .)
    SECTION         reduce using rule 30 (instruction -> LEFT_PAREN instruction RIGHT_PAREN instruction_modifier .)
    TEXT            reduce using rule 30 (instruction -> LEFT_PAREN instruction RIGHT_PAREN instruction_modifier .)
    TYPE_SYNONYM    reduce using rule 30 (instruction -> LEFT_PAREN instruction RIGHT_PAREN instruction_modifier .)
    TYPEDECL        reduce using rule 30 (instruction -> LEFT_PAREN instruction RIGHT_PAREN instruction_modifier .)
    END             reduce using rule 30 (instruction -> LEFT_PAREN instruction RIGHT_PAREN instruction_modifier .)
    RIGHT_PAREN     reduce using rule 30 (instruction -> LEFT_PAREN instruction RIGHT_PAREN instruction_modifier .)
    APPLY           reduce using rule 30 (instruction -> LEFT_PAREN instruction RIGHT_PAREN instruction_modifier .)
    USING           reduce using rule 30 (instruction -> LEFT_PAREN instruction RIGHT_PAREN instruction_modifier .)
    BY              reduce using rule 30 (instruction -> LEFT_PAREN instruction RIGHT_PAREN instruction_modifier .)
    DONE            reduce using rule 30 (instruction -> LEFT_PAREN instruction RIGHT_PAREN instruction_modifier .)
    SORRY           reduce using rule 30 (instruction -> LEFT_PAREN instruction RIGHT_PAREN instruction_modifier .)
    SUBGOAL         reduce using rule 30 (instruction -> LEFT_PAREN instruction RIGHT_PAREN instruction_modifier .)


state 395

    (35) single_instruction -> LEFT_PAREN ID method_args RIGHT_PAREN .
    (36) single_instruction -> LEFT_PAREN ID method_args RIGHT_PAREN . instruction_modifier
    (31) instruction_modifier -> . PLUS
    (32) instruction_modifier -> . QUESTION_MARK

  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for QUESTION_MARK resolved as shift
    SEMICOLON       reduce using rule 35 (single_instruction -> LEFT_PAREN ID method_args RIGHT_PAREN .)
    COMMA           reduce using rule 35 (single_instruction -> LEFT_PAREN ID method_args RIGHT_PAREN .)
    AXIOMATIZATION  reduce using rule 35 (single_instruction -> LEFT_PAREN ID method_args RIGHT_PAREN .)
    FUN             reduce using rule 35 (single_instruction -> LEFT_PAREN ID method_args RIGHT_PAREN .)
    FUNCTION        reduce using rule 35 (single_instruction -> LEFT_PAREN ID method_args RIGHT_PAREN .)
    INTERPRETATION  reduce using rule 35 (single_instruction -> LEFT_PAREN ID method_args RIGHT_PAREN .)
    LEMMA           reduce using rule 35 (single_instruction -> LEFT_PAREN ID method_args RIGHT_PAREN .)
    LOCALE          reduce using rule 35 (single_instruction -> LEFT_PAREN ID method_args RIGHT_PAREN .)
    METHOD          reduce using rule 35 (single_instruction -> LEFT_PAREN ID method_args RIGHT_PAREN .)
    SECTION         reduce using rule 35 (single_instruction -> LEFT_PAREN ID method_args RIGHT_PAREN .)
    TEXT            reduce using rule 35 (single_instruction -> LEFT_PAREN ID method_args RIGHT_PAREN .)
    TYPE_SYNONYM    reduce using rule 35 (single_instruction -> LEFT_PAREN ID method_args RIGHT_PAREN .)
    TYPEDECL        reduce using rule 35 (single_instruction -> LEFT_PAREN ID method_args RIGHT_PAREN .)
    END             reduce using rule 35 (single_instruction -> LEFT_PAREN ID method_args RIGHT_PAREN .)
    RIGHT_PAREN     reduce using rule 35 (single_instruction -> LEFT_PAREN ID method_args RIGHT_PAREN .)
    APPLY           reduce using rule 35 (single_instruction -> LEFT_PAREN ID method_args RIGHT_PAREN .)
    USING           reduce using rule 35 (single_instruction -> LEFT_PAREN ID method_args RIGHT_PAREN .)
    BY              reduce using rule 35 (single_instruction -> LEFT_PAREN ID method_args RIGHT_PAREN .)
    DONE            reduce using rule 35 (single_instruction -> LEFT_PAREN ID method_args RIGHT_PAREN .)
    SORRY           reduce using rule 35 (single_instruction -> LEFT_PAREN ID method_args RIGHT_PAREN .)
    SUBGOAL         reduce using rule 35 (single_instruction -> LEFT_PAREN ID method_args RIGHT_PAREN .)
    PLUS            shift and go to state 267
    QUESTION_MARK   shift and go to state 268

  ! PLUS            [ reduce using rule 35 (single_instruction -> LEFT_PAREN ID method_args RIGHT_PAREN .) ]
  ! QUESTION_MARK   [ reduce using rule 35 (single_instruction -> LEFT_PAREN ID method_args RIGHT_PAREN .) ]

    instruction_modifier           shift and go to state 413

state 396

    (40) method_arg -> ID .
    (41) method_arg -> ID . LEFT_PAREN NAT RIGHT_PAREN
    (42) method_arg -> ID . DOT ID
    (43) method_arg -> ID . DOT ID LEFT_PAREN NAT RIGHT_PAREN

    ID              reduce using rule 40 (method_arg -> ID .)
    QUOTED_STRING   reduce using rule 40 (method_arg -> ID .)
    SEMICOLON       reduce using rule 40 (method_arg -> ID .)
    COMMA           reduce using rule 40 (method_arg -> ID .)
    PLUS            reduce using rule 40 (method_arg -> ID .)
    QUESTION_MARK   reduce using rule 40 (method_arg -> ID .)
    AXIOMATIZATION  reduce using rule 40 (method_arg -> ID .)
    FUN             reduce using rule 40 (method_arg -> ID .)
    FUNCTION        reduce using rule 40 (method_arg -> ID .)
    INTERPRETATION  reduce using rule 40 (method_arg -> ID .)
    LEMMA           reduce using rule 40 (method_arg -> ID .)
    LOCALE          reduce using rule 40 (method_arg -> ID .)
    METHOD          reduce using rule 40 (method_arg -> ID .)
    SECTION         reduce using rule 40 (method_arg -> ID .)
    TEXT            reduce using rule 40 (method_arg -> ID .)
    TYPE_SYNONYM    reduce using rule 40 (method_arg -> ID .)
    TYPEDECL        reduce using rule 40 (method_arg -> ID .)
    END             reduce using rule 40 (method_arg -> ID .)
    RIGHT_PAREN     reduce using rule 40 (method_arg -> ID .)
    APPLY           reduce using rule 40 (method_arg -> ID .)
    USING           reduce using rule 40 (method_arg -> ID .)
    BY              reduce using rule 40 (method_arg -> ID .)
    DONE            reduce using rule 40 (method_arg -> ID .)
    SORRY           reduce using rule 40 (method_arg -> ID .)
    SUBGOAL         reduce using rule 40 (method_arg -> ID .)
    LEFT_PAREN      shift and go to state 349
    DOT             shift and go to state 350


state 397

    (37) method_args -> ID COLON method_arg . method_args
    (37) method_args -> . ID COLON method_arg method_args
    (38) method_args -> . method_arg method_args
    (39) method_args -> . empty
    (40) method_arg -> . ID
    (41) method_arg -> . ID LEFT_PAREN NAT RIGHT_PAREN
    (42) method_arg -> . ID DOT ID
    (43) method_arg -> . ID DOT ID LEFT_PAREN NAT RIGHT_PAREN
    (44) method_arg -> . QUOTED_STRING
    (261) empty -> .

    ID              shift and go to state 271
    QUOTED_STRING   shift and go to state 275
    SEMICOLON       reduce using rule 261 (empty -> .)
    COMMA           reduce using rule 261 (empty -> .)
    PLUS            reduce using rule 261 (empty -> .)
    QUESTION_MARK   reduce using rule 261 (empty -> .)
    AXIOMATIZATION  reduce using rule 261 (empty -> .)
    FUN             reduce using rule 261 (empty -> .)
    FUNCTION        reduce using rule 261 (empty -> .)
    INTERPRETATION  reduce using rule 261 (empty -> .)
    LEMMA           reduce using rule 261 (empty -> .)
    LOCALE          reduce using rule 261 (empty -> .)
    METHOD          reduce using rule 261 (empty -> .)
    SECTION         reduce using rule 261 (empty -> .)
    TEXT            reduce using rule 261 (empty -> .)
    TYPE_SYNONYM    reduce using rule 261 (empty -> .)
    TYPEDECL        reduce using rule 261 (empty -> .)
    END             reduce using rule 261 (empty -> .)
    RIGHT_PAREN     reduce using rule 261 (empty -> .)
    APPLY           reduce using rule 261 (empty -> .)
    USING           reduce using rule 261 (empty -> .)
    BY              reduce using rule 261 (empty -> .)
    DONE            reduce using rule 261 (empty -> .)
    SORRY           reduce using rule 261 (empty -> .)
    SUBGOAL         reduce using rule 261 (empty -> .)

    method_arg                     shift and go to state 273
    method_args                    shift and go to state 414
    empty                          shift and go to state 274

state 398

    (41) method_arg -> ID LEFT_PAREN NAT . RIGHT_PAREN

    RIGHT_PAREN     shift and go to state 415


state 399

    (42) method_arg -> ID DOT ID .
    (43) method_arg -> ID DOT ID . LEFT_PAREN NAT RIGHT_PAREN

    ID              reduce using rule 42 (method_arg -> ID DOT ID .)
    QUOTED_STRING   reduce using rule 42 (method_arg -> ID DOT ID .)
    SEMICOLON       reduce using rule 42 (method_arg -> ID DOT ID .)
    COMMA           reduce using rule 42 (method_arg -> ID DOT ID .)
    PLUS            reduce using rule 42 (method_arg -> ID DOT ID .)
    QUESTION_MARK   reduce using rule 42 (method_arg -> ID DOT ID .)
    AXIOMATIZATION  reduce using rule 42 (method_arg -> ID DOT ID .)
    FUN             reduce using rule 42 (method_arg -> ID DOT ID .)
    FUNCTION        reduce using rule 42 (method_arg -> ID DOT ID .)
    INTERPRETATION  reduce using rule 42 (method_arg -> ID DOT ID .)
    LEMMA           reduce using rule 42 (method_arg -> ID DOT ID .)
    LOCALE          reduce using rule 42 (method_arg -> ID DOT ID .)
    METHOD          reduce using rule 42 (method_arg -> ID DOT ID .)
    SECTION         reduce using rule 42 (method_arg -> ID DOT ID .)
    TEXT            reduce using rule 42 (method_arg -> ID DOT ID .)
    TYPE_SYNONYM    reduce using rule 42 (method_arg -> ID DOT ID .)
    TYPEDECL        reduce using rule 42 (method_arg -> ID DOT ID .)
    END             reduce using rule 42 (method_arg -> ID DOT ID .)
    RIGHT_PAREN     reduce using rule 42 (method_arg -> ID DOT ID .)
    APPLY           reduce using rule 42 (method_arg -> ID DOT ID .)
    USING           reduce using rule 42 (method_arg -> ID DOT ID .)
    BY              reduce using rule 42 (method_arg -> ID DOT ID .)
    DONE            reduce using rule 42 (method_arg -> ID DOT ID .)
    SORRY           reduce using rule 42 (method_arg -> ID DOT ID .)
    SUBGOAL         reduce using rule 42 (method_arg -> ID DOT ID .)
    LEFT_PAREN      shift and go to state 416


state 400

    (236) nat_list -> NAT COMMA nat_list .

    RIGHT_BRACKET   reduce using rule 236 (nat_list -> NAT COMMA nat_list .)


state 401

    (59) single_apply -> APPLY LEFT_PAREN instruction . RIGHT_PAREN
    (29) instruction -> LEFT_PAREN instruction . RIGHT_PAREN
    (30) instruction -> LEFT_PAREN instruction . RIGHT_PAREN instruction_modifier

    RIGHT_PAREN     shift and go to state 417


state 402

    (60) single_apply -> USING using_block APPLY . DASH
    (61) single_apply -> USING using_block APPLY . instruction
    (62) single_apply -> USING using_block APPLY . LEFT_PAREN instruction RIGHT_PAREN
    (24) instruction -> . single_instruction
    (25) instruction -> . single_instruction instruction_modifier
    (26) instruction -> . single_instruction instruction_modifier COMMA instruction
    (27) instruction -> . single_instruction SEMICOLON instruction
    (28) instruction -> . single_instruction COMMA instruction
    (29) instruction -> . LEFT_PAREN instruction RIGHT_PAREN
    (30) instruction -> . LEFT_PAREN instruction RIGHT_PAREN instruction_modifier
    (33) single_instruction -> . ID
    (34) single_instruction -> . ID method_args
    (35) single_instruction -> . LEFT_PAREN ID method_args RIGHT_PAREN
    (36) single_instruction -> . LEFT_PAREN ID method_args RIGHT_PAREN instruction_modifier

    DASH            shift and go to state 418
    LEFT_PAREN      shift and go to state 420
    ID              shift and go to state 188

    instruction                    shift and go to state 419
    single_instruction             shift and go to state 186

state 403

    (65) single_apply -> USING using_block BY . instruction
    (66) single_apply -> USING using_block BY . LEFT_PAREN instruction RIGHT_PAREN
    (24) instruction -> . single_instruction
    (25) instruction -> . single_instruction instruction_modifier
    (26) instruction -> . single_instruction instruction_modifier COMMA instruction
    (27) instruction -> . single_instruction SEMICOLON instruction
    (28) instruction -> . single_instruction COMMA instruction
    (29) instruction -> . LEFT_PAREN instruction RIGHT_PAREN
    (30) instruction -> . LEFT_PAREN instruction RIGHT_PAREN instruction_modifier
    (33) single_instruction -> . ID
    (34) single_instruction -> . ID method_args
    (35) single_instruction -> . LEFT_PAREN ID method_args RIGHT_PAREN
    (36) single_instruction -> . LEFT_PAREN ID method_args RIGHT_PAREN instruction_modifier

    LEFT_PAREN      shift and go to state 422
    ID              shift and go to state 188

    instruction                    shift and go to state 421
    single_instruction             shift and go to state 186

state 404

    (69) using_block -> ASSMS using_block .

    APPLY           reduce using rule 69 (using_block -> ASSMS using_block .)
    BY              reduce using rule 69 (using_block -> ASSMS using_block .)


state 405

    (70) using_block -> ASSMS LEFT_PAREN . NAT RIGHT_PAREN using_block
    (71) using_block -> ASSMS LEFT_PAREN . NAT COMMA NAT RIGHT_PAREN using_block
    (72) using_block -> ASSMS LEFT_PAREN . NAT DASH NAT RIGHT_PAREN using_block

    NAT             shift and go to state 423


state 406

    (64) single_apply -> BY LEFT_PAREN instruction . RIGHT_PAREN
    (29) instruction -> LEFT_PAREN instruction . RIGHT_PAREN
    (30) instruction -> LEFT_PAREN instruction . RIGHT_PAREN instruction_modifier

    RIGHT_PAREN     shift and go to state 424


state 407

    (76) subgoal -> SUBGOAL QUOTED_STRING apply_block .

    APPLY           reduce using rule 76 (subgoal -> SUBGOAL QUOTED_STRING apply_block .)
    USING           reduce using rule 76 (subgoal -> SUBGOAL QUOTED_STRING apply_block .)
    BY              reduce using rule 76 (subgoal -> SUBGOAL QUOTED_STRING apply_block .)
    DONE            reduce using rule 76 (subgoal -> SUBGOAL QUOTED_STRING apply_block .)
    SORRY           reduce using rule 76 (subgoal -> SUBGOAL QUOTED_STRING apply_block .)
    SUBGOAL         reduce using rule 76 (subgoal -> SUBGOAL QUOTED_STRING apply_block .)
    AXIOMATIZATION  reduce using rule 76 (subgoal -> SUBGOAL QUOTED_STRING apply_block .)
    FUN             reduce using rule 76 (subgoal -> SUBGOAL QUOTED_STRING apply_block .)
    FUNCTION        reduce using rule 76 (subgoal -> SUBGOAL QUOTED_STRING apply_block .)
    INTERPRETATION  reduce using rule 76 (subgoal -> SUBGOAL QUOTED_STRING apply_block .)
    LEMMA           reduce using rule 76 (subgoal -> SUBGOAL QUOTED_STRING apply_block .)
    LOCALE          reduce using rule 76 (subgoal -> SUBGOAL QUOTED_STRING apply_block .)
    METHOD          reduce using rule 76 (subgoal -> SUBGOAL QUOTED_STRING apply_block .)
    SECTION         reduce using rule 76 (subgoal -> SUBGOAL QUOTED_STRING apply_block .)
    TEXT            reduce using rule 76 (subgoal -> SUBGOAL QUOTED_STRING apply_block .)
    TYPE_SYNONYM    reduce using rule 76 (subgoal -> SUBGOAL QUOTED_STRING apply_block .)
    TYPEDECL        reduce using rule 76 (subgoal -> SUBGOAL QUOTED_STRING apply_block .)
    END             reduce using rule 76 (subgoal -> SUBGOAL QUOTED_STRING apply_block .)


state 408

    (200) name_type_list -> ID COLON COLON ID .
    (201) name_type_list -> ID COLON COLON ID . AND name_type_list

    FIXES           reduce using rule 200 (name_type_list -> ID COLON COLON ID .)
    CONSTRAINS      reduce using rule 200 (name_type_list -> ID COLON COLON ID .)
    ASSUMES         reduce using rule 200 (name_type_list -> ID COLON COLON ID .)
    DEFINES         reduce using rule 200 (name_type_list -> ID COLON COLON ID .)
    NOTES           reduce using rule 200 (name_type_list -> ID COLON COLON ID .)
    BEGIN           reduce using rule 200 (name_type_list -> ID COLON COLON ID .)
    OPENING         reduce using rule 200 (name_type_list -> ID COLON COLON ID .)
    AXIOMATIZATION  reduce using rule 200 (name_type_list -> ID COLON COLON ID .)
    FUN             reduce using rule 200 (name_type_list -> ID COLON COLON ID .)
    FUNCTION        reduce using rule 200 (name_type_list -> ID COLON COLON ID .)
    INTERPRETATION  reduce using rule 200 (name_type_list -> ID COLON COLON ID .)
    LEMMA           reduce using rule 200 (name_type_list -> ID COLON COLON ID .)
    LOCALE          reduce using rule 200 (name_type_list -> ID COLON COLON ID .)
    METHOD          reduce using rule 200 (name_type_list -> ID COLON COLON ID .)
    SECTION         reduce using rule 200 (name_type_list -> ID COLON COLON ID .)
    TEXT            reduce using rule 200 (name_type_list -> ID COLON COLON ID .)
    TYPE_SYNONYM    reduce using rule 200 (name_type_list -> ID COLON COLON ID .)
    TYPEDECL        reduce using rule 200 (name_type_list -> ID COLON COLON ID .)
    END             reduce using rule 200 (name_type_list -> ID COLON COLON ID .)
    AND             shift and go to state 425


state 409

    (102) prop_pat -> LEFT_PAREN prop_pat_terms RIGHT_PAREN .

    AND             reduce using rule 102 (prop_pat -> LEFT_PAREN prop_pat_terms RIGHT_PAREN .)
    FIXES           reduce using rule 102 (prop_pat -> LEFT_PAREN prop_pat_terms RIGHT_PAREN .)
    CONSTRAINS      reduce using rule 102 (prop_pat -> LEFT_PAREN prop_pat_terms RIGHT_PAREN .)
    ASSUMES         reduce using rule 102 (prop_pat -> LEFT_PAREN prop_pat_terms RIGHT_PAREN .)
    DEFINES         reduce using rule 102 (prop_pat -> LEFT_PAREN prop_pat_terms RIGHT_PAREN .)
    NOTES           reduce using rule 102 (prop_pat -> LEFT_PAREN prop_pat_terms RIGHT_PAREN .)
    BEGIN           reduce using rule 102 (prop_pat -> LEFT_PAREN prop_pat_terms RIGHT_PAREN .)
    OPENING         reduce using rule 102 (prop_pat -> LEFT_PAREN prop_pat_terms RIGHT_PAREN .)
    AXIOMATIZATION  reduce using rule 102 (prop_pat -> LEFT_PAREN prop_pat_terms RIGHT_PAREN .)
    FUN             reduce using rule 102 (prop_pat -> LEFT_PAREN prop_pat_terms RIGHT_PAREN .)
    FUNCTION        reduce using rule 102 (prop_pat -> LEFT_PAREN prop_pat_terms RIGHT_PAREN .)
    INTERPRETATION  reduce using rule 102 (prop_pat -> LEFT_PAREN prop_pat_terms RIGHT_PAREN .)
    LEMMA           reduce using rule 102 (prop_pat -> LEFT_PAREN prop_pat_terms RIGHT_PAREN .)
    LOCALE          reduce using rule 102 (prop_pat -> LEFT_PAREN prop_pat_terms RIGHT_PAREN .)
    METHOD          reduce using rule 102 (prop_pat -> LEFT_PAREN prop_pat_terms RIGHT_PAREN .)
    SECTION         reduce using rule 102 (prop_pat -> LEFT_PAREN prop_pat_terms RIGHT_PAREN .)
    TEXT            reduce using rule 102 (prop_pat -> LEFT_PAREN prop_pat_terms RIGHT_PAREN .)
    TYPE_SYNONYM    reduce using rule 102 (prop_pat -> LEFT_PAREN prop_pat_terms RIGHT_PAREN .)
    TYPEDECL        reduce using rule 102 (prop_pat -> LEFT_PAREN prop_pat_terms RIGHT_PAREN .)
    END             reduce using rule 102 (prop_pat -> LEFT_PAREN prop_pat_terms RIGHT_PAREN .)


state 410

    (104) prop_pat_terms -> prop_pat_term prop_pat_terms .

    RIGHT_PAREN     reduce using rule 104 (prop_pat_terms -> prop_pat_term prop_pat_terms .)


state 411

    (105) prop_pat_term -> IS ID .

    IS              reduce using rule 105 (prop_pat_term -> IS ID .)
    RIGHT_PAREN     reduce using rule 105 (prop_pat_term -> IS ID .)


state 412

    (106) prop_pat_term -> IS QUOTED_STRING .

    IS              reduce using rule 106 (prop_pat_term -> IS QUOTED_STRING .)
    RIGHT_PAREN     reduce using rule 106 (prop_pat_term -> IS QUOTED_STRING .)


state 413

    (36) single_instruction -> LEFT_PAREN ID method_args RIGHT_PAREN instruction_modifier .

    SEMICOLON       reduce using rule 36 (single_instruction -> LEFT_PAREN ID method_args RIGHT_PAREN instruction_modifier .)
    COMMA           reduce using rule 36 (single_instruction -> LEFT_PAREN ID method_args RIGHT_PAREN instruction_modifier .)
    PLUS            reduce using rule 36 (single_instruction -> LEFT_PAREN ID method_args RIGHT_PAREN instruction_modifier .)
    QUESTION_MARK   reduce using rule 36 (single_instruction -> LEFT_PAREN ID method_args RIGHT_PAREN instruction_modifier .)
    AXIOMATIZATION  reduce using rule 36 (single_instruction -> LEFT_PAREN ID method_args RIGHT_PAREN instruction_modifier .)
    FUN             reduce using rule 36 (single_instruction -> LEFT_PAREN ID method_args RIGHT_PAREN instruction_modifier .)
    FUNCTION        reduce using rule 36 (single_instruction -> LEFT_PAREN ID method_args RIGHT_PAREN instruction_modifier .)
    INTERPRETATION  reduce using rule 36 (single_instruction -> LEFT_PAREN ID method_args RIGHT_PAREN instruction_modifier .)
    LEMMA           reduce using rule 36 (single_instruction -> LEFT_PAREN ID method_args RIGHT_PAREN instruction_modifier .)
    LOCALE          reduce using rule 36 (single_instruction -> LEFT_PAREN ID method_args RIGHT_PAREN instruction_modifier .)
    METHOD          reduce using rule 36 (single_instruction -> LEFT_PAREN ID method_args RIGHT_PAREN instruction_modifier .)
    SECTION         reduce using rule 36 (single_instruction -> LEFT_PAREN ID method_args RIGHT_PAREN instruction_modifier .)
    TEXT            reduce using rule 36 (single_instruction -> LEFT_PAREN ID method_args RIGHT_PAREN instruction_modifier .)
    TYPE_SYNONYM    reduce using rule 36 (single_instruction -> LEFT_PAREN ID method_args RIGHT_PAREN instruction_modifier .)
    TYPEDECL        reduce using rule 36 (single_instruction -> LEFT_PAREN ID method_args RIGHT_PAREN instruction_modifier .)
    END             reduce using rule 36 (single_instruction -> LEFT_PAREN ID method_args RIGHT_PAREN instruction_modifier .)
    RIGHT_PAREN     reduce using rule 36 (single_instruction -> LEFT_PAREN ID method_args RIGHT_PAREN instruction_modifier .)
    APPLY           reduce using rule 36 (single_instruction -> LEFT_PAREN ID method_args RIGHT_PAREN instruction_modifier .)
    USING           reduce using rule 36 (single_instruction -> LEFT_PAREN ID method_args RIGHT_PAREN instruction_modifier .)
    BY              reduce using rule 36 (single_instruction -> LEFT_PAREN ID method_args RIGHT_PAREN instruction_modifier .)
    DONE            reduce using rule 36 (single_instruction -> LEFT_PAREN ID method_args RIGHT_PAREN instruction_modifier .)
    SORRY           reduce using rule 36 (single_instruction -> LEFT_PAREN ID method_args RIGHT_PAREN instruction_modifier .)
    SUBGOAL         reduce using rule 36 (single_instruction -> LEFT_PAREN ID method_args RIGHT_PAREN instruction_modifier .)


state 414

    (37) method_args -> ID COLON method_arg method_args .

    SEMICOLON       reduce using rule 37 (method_args -> ID COLON method_arg method_args .)
    COMMA           reduce using rule 37 (method_args -> ID COLON method_arg method_args .)
    PLUS            reduce using rule 37 (method_args -> ID COLON method_arg method_args .)
    QUESTION_MARK   reduce using rule 37 (method_args -> ID COLON method_arg method_args .)
    AXIOMATIZATION  reduce using rule 37 (method_args -> ID COLON method_arg method_args .)
    FUN             reduce using rule 37 (method_args -> ID COLON method_arg method_args .)
    FUNCTION        reduce using rule 37 (method_args -> ID COLON method_arg method_args .)
    INTERPRETATION  reduce using rule 37 (method_args -> ID COLON method_arg method_args .)
    LEMMA           reduce using rule 37 (method_args -> ID COLON method_arg method_args .)
    LOCALE          reduce using rule 37 (method_args -> ID COLON method_arg method_args .)
    METHOD          reduce using rule 37 (method_args -> ID COLON method_arg method_args .)
    SECTION         reduce using rule 37 (method_args -> ID COLON method_arg method_args .)
    TEXT            reduce using rule 37 (method_args -> ID COLON method_arg method_args .)
    TYPE_SYNONYM    reduce using rule 37 (method_args -> ID COLON method_arg method_args .)
    TYPEDECL        reduce using rule 37 (method_args -> ID COLON method_arg method_args .)
    END             reduce using rule 37 (method_args -> ID COLON method_arg method_args .)
    RIGHT_PAREN     reduce using rule 37 (method_args -> ID COLON method_arg method_args .)
    APPLY           reduce using rule 37 (method_args -> ID COLON method_arg method_args .)
    USING           reduce using rule 37 (method_args -> ID COLON method_arg method_args .)
    BY              reduce using rule 37 (method_args -> ID COLON method_arg method_args .)
    DONE            reduce using rule 37 (method_args -> ID COLON method_arg method_args .)
    SORRY           reduce using rule 37 (method_args -> ID COLON method_arg method_args .)
    SUBGOAL         reduce using rule 37 (method_args -> ID COLON method_arg method_args .)


state 415

    (41) method_arg -> ID LEFT_PAREN NAT RIGHT_PAREN .

    ID              reduce using rule 41 (method_arg -> ID LEFT_PAREN NAT RIGHT_PAREN .)
    QUOTED_STRING   reduce using rule 41 (method_arg -> ID LEFT_PAREN NAT RIGHT_PAREN .)
    SEMICOLON       reduce using rule 41 (method_arg -> ID LEFT_PAREN NAT RIGHT_PAREN .)
    COMMA           reduce using rule 41 (method_arg -> ID LEFT_PAREN NAT RIGHT_PAREN .)
    PLUS            reduce using rule 41 (method_arg -> ID LEFT_PAREN NAT RIGHT_PAREN .)
    QUESTION_MARK   reduce using rule 41 (method_arg -> ID LEFT_PAREN NAT RIGHT_PAREN .)
    AXIOMATIZATION  reduce using rule 41 (method_arg -> ID LEFT_PAREN NAT RIGHT_PAREN .)
    FUN             reduce using rule 41 (method_arg -> ID LEFT_PAREN NAT RIGHT_PAREN .)
    FUNCTION        reduce using rule 41 (method_arg -> ID LEFT_PAREN NAT RIGHT_PAREN .)
    INTERPRETATION  reduce using rule 41 (method_arg -> ID LEFT_PAREN NAT RIGHT_PAREN .)
    LEMMA           reduce using rule 41 (method_arg -> ID LEFT_PAREN NAT RIGHT_PAREN .)
    LOCALE          reduce using rule 41 (method_arg -> ID LEFT_PAREN NAT RIGHT_PAREN .)
    METHOD          reduce using rule 41 (method_arg -> ID LEFT_PAREN NAT RIGHT_PAREN .)
    SECTION         reduce using rule 41 (method_arg -> ID LEFT_PAREN NAT RIGHT_PAREN .)
    TEXT            reduce using rule 41 (method_arg -> ID LEFT_PAREN NAT RIGHT_PAREN .)
    TYPE_SYNONYM    reduce using rule 41 (method_arg -> ID LEFT_PAREN NAT RIGHT_PAREN .)
    TYPEDECL        reduce using rule 41 (method_arg -> ID LEFT_PAREN NAT RIGHT_PAREN .)
    END             reduce using rule 41 (method_arg -> ID LEFT_PAREN NAT RIGHT_PAREN .)
    RIGHT_PAREN     reduce using rule 41 (method_arg -> ID LEFT_PAREN NAT RIGHT_PAREN .)
    APPLY           reduce using rule 41 (method_arg -> ID LEFT_PAREN NAT RIGHT_PAREN .)
    USING           reduce using rule 41 (method_arg -> ID LEFT_PAREN NAT RIGHT_PAREN .)
    BY              reduce using rule 41 (method_arg -> ID LEFT_PAREN NAT RIGHT_PAREN .)
    DONE            reduce using rule 41 (method_arg -> ID LEFT_PAREN NAT RIGHT_PAREN .)
    SORRY           reduce using rule 41 (method_arg -> ID LEFT_PAREN NAT RIGHT_PAREN .)
    SUBGOAL         reduce using rule 41 (method_arg -> ID LEFT_PAREN NAT RIGHT_PAREN .)


state 416

    (43) method_arg -> ID DOT ID LEFT_PAREN . NAT RIGHT_PAREN

    NAT             shift and go to state 426


state 417

    (59) single_apply -> APPLY LEFT_PAREN instruction RIGHT_PAREN .
    (29) instruction -> LEFT_PAREN instruction RIGHT_PAREN .
    (30) instruction -> LEFT_PAREN instruction RIGHT_PAREN . instruction_modifier
    (31) instruction_modifier -> . PLUS
    (32) instruction_modifier -> . QUESTION_MARK

  ! reduce/reduce conflict for APPLY resolved using rule 29 (instruction -> LEFT_PAREN instruction RIGHT_PAREN .)
  ! reduce/reduce conflict for USING resolved using rule 29 (instruction -> LEFT_PAREN instruction RIGHT_PAREN .)
  ! reduce/reduce conflict for BY resolved using rule 29 (instruction -> LEFT_PAREN instruction RIGHT_PAREN .)
  ! reduce/reduce conflict for DONE resolved using rule 29 (instruction -> LEFT_PAREN instruction RIGHT_PAREN .)
  ! reduce/reduce conflict for SORRY resolved using rule 29 (instruction -> LEFT_PAREN instruction RIGHT_PAREN .)
  ! reduce/reduce conflict for SUBGOAL resolved using rule 29 (instruction -> LEFT_PAREN instruction RIGHT_PAREN .)
  ! reduce/reduce conflict for AXIOMATIZATION resolved using rule 29 (instruction -> LEFT_PAREN instruction RIGHT_PAREN .)
  ! reduce/reduce conflict for FUN resolved using rule 29 (instruction -> LEFT_PAREN instruction RIGHT_PAREN .)
  ! reduce/reduce conflict for FUNCTION resolved using rule 29 (instruction -> LEFT_PAREN instruction RIGHT_PAREN .)
  ! reduce/reduce conflict for INTERPRETATION resolved using rule 29 (instruction -> LEFT_PAREN instruction RIGHT_PAREN .)
  ! reduce/reduce conflict for LEMMA resolved using rule 29 (instruction -> LEFT_PAREN instruction RIGHT_PAREN .)
  ! reduce/reduce conflict for LOCALE resolved using rule 29 (instruction -> LEFT_PAREN instruction RIGHT_PAREN .)
  ! reduce/reduce conflict for METHOD resolved using rule 29 (instruction -> LEFT_PAREN instruction RIGHT_PAREN .)
  ! reduce/reduce conflict for SECTION resolved using rule 29 (instruction -> LEFT_PAREN instruction RIGHT_PAREN .)
  ! reduce/reduce conflict for TEXT resolved using rule 29 (instruction -> LEFT_PAREN instruction RIGHT_PAREN .)
  ! reduce/reduce conflict for TYPE_SYNONYM resolved using rule 29 (instruction -> LEFT_PAREN instruction RIGHT_PAREN .)
  ! reduce/reduce conflict for TYPEDECL resolved using rule 29 (instruction -> LEFT_PAREN instruction RIGHT_PAREN .)
  ! reduce/reduce conflict for END resolved using rule 29 (instruction -> LEFT_PAREN instruction RIGHT_PAREN .)
    APPLY           reduce using rule 29 (instruction -> LEFT_PAREN instruction RIGHT_PAREN .)
    USING           reduce using rule 29 (instruction -> LEFT_PAREN instruction RIGHT_PAREN .)
    BY              reduce using rule 29 (instruction -> LEFT_PAREN instruction RIGHT_PAREN .)
    DONE            reduce using rule 29 (instruction -> LEFT_PAREN instruction RIGHT_PAREN .)
    SORRY           reduce using rule 29 (instruction -> LEFT_PAREN instruction RIGHT_PAREN .)
    SUBGOAL         reduce using rule 29 (instruction -> LEFT_PAREN instruction RIGHT_PAREN .)
    AXIOMATIZATION  reduce using rule 29 (instruction -> LEFT_PAREN instruction RIGHT_PAREN .)
    FUN             reduce using rule 29 (instruction -> LEFT_PAREN instruction RIGHT_PAREN .)
    FUNCTION        reduce using rule 29 (instruction -> LEFT_PAREN instruction RIGHT_PAREN .)
    INTERPRETATION  reduce using rule 29 (instruction -> LEFT_PAREN instruction RIGHT_PAREN .)
    LEMMA           reduce using rule 29 (instruction -> LEFT_PAREN instruction RIGHT_PAREN .)
    LOCALE          reduce using rule 29 (instruction -> LEFT_PAREN instruction RIGHT_PAREN .)
    METHOD          reduce using rule 29 (instruction -> LEFT_PAREN instruction RIGHT_PAREN .)
    SECTION         reduce using rule 29 (instruction -> LEFT_PAREN instruction RIGHT_PAREN .)
    TEXT            reduce using rule 29 (instruction -> LEFT_PAREN instruction RIGHT_PAREN .)
    TYPE_SYNONYM    reduce using rule 29 (instruction -> LEFT_PAREN instruction RIGHT_PAREN .)
    TYPEDECL        reduce using rule 29 (instruction -> LEFT_PAREN instruction RIGHT_PAREN .)
    END             reduce using rule 29 (instruction -> LEFT_PAREN instruction RIGHT_PAREN .)
    PLUS            shift and go to state 267
    QUESTION_MARK   shift and go to state 268

  ! APPLY           [ reduce using rule 59 (single_apply -> APPLY LEFT_PAREN instruction RIGHT_PAREN .) ]
  ! USING           [ reduce using rule 59 (single_apply -> APPLY LEFT_PAREN instruction RIGHT_PAREN .) ]
  ! BY              [ reduce using rule 59 (single_apply -> APPLY LEFT_PAREN instruction RIGHT_PAREN .) ]
  ! DONE            [ reduce using rule 59 (single_apply -> APPLY LEFT_PAREN instruction RIGHT_PAREN .) ]
  ! SORRY           [ reduce using rule 59 (single_apply -> APPLY LEFT_PAREN instruction RIGHT_PAREN .) ]
  ! SUBGOAL         [ reduce using rule 59 (single_apply -> APPLY LEFT_PAREN instruction RIGHT_PAREN .) ]
  ! AXIOMATIZATION  [ reduce using rule 59 (single_apply -> APPLY LEFT_PAREN instruction RIGHT_PAREN .) ]
  ! FUN             [ reduce using rule 59 (single_apply -> APPLY LEFT_PAREN instruction RIGHT_PAREN .) ]
  ! FUNCTION        [ reduce using rule 59 (single_apply -> APPLY LEFT_PAREN instruction RIGHT_PAREN .) ]
  ! INTERPRETATION  [ reduce using rule 59 (single_apply -> APPLY LEFT_PAREN instruction RIGHT_PAREN .) ]
  ! LEMMA           [ reduce using rule 59 (single_apply -> APPLY LEFT_PAREN instruction RIGHT_PAREN .) ]
  ! LOCALE          [ reduce using rule 59 (single_apply -> APPLY LEFT_PAREN instruction RIGHT_PAREN .) ]
  ! METHOD          [ reduce using rule 59 (single_apply -> APPLY LEFT_PAREN instruction RIGHT_PAREN .) ]
  ! SECTION         [ reduce using rule 59 (single_apply -> APPLY LEFT_PAREN instruction RIGHT_PAREN .) ]
  ! TEXT            [ reduce using rule 59 (single_apply -> APPLY LEFT_PAREN instruction RIGHT_PAREN .) ]
  ! TYPE_SYNONYM    [ reduce using rule 59 (single_apply -> APPLY LEFT_PAREN instruction RIGHT_PAREN .) ]
  ! TYPEDECL        [ reduce using rule 59 (single_apply -> APPLY LEFT_PAREN instruction RIGHT_PAREN .) ]
  ! END             [ reduce using rule 59 (single_apply -> APPLY LEFT_PAREN instruction RIGHT_PAREN .) ]

    instruction_modifier           shift and go to state 394

state 418

    (60) single_apply -> USING using_block APPLY DASH .

    APPLY           reduce using rule 60 (single_apply -> USING using_block APPLY DASH .)
    USING           reduce using rule 60 (single_apply -> USING using_block APPLY DASH .)
    BY              reduce using rule 60 (single_apply -> USING using_block APPLY DASH .)
    DONE            reduce using rule 60 (single_apply -> USING using_block APPLY DASH .)
    SORRY           reduce using rule 60 (single_apply -> USING using_block APPLY DASH .)
    SUBGOAL         reduce using rule 60 (single_apply -> USING using_block APPLY DASH .)
    AXIOMATIZATION  reduce using rule 60 (single_apply -> USING using_block APPLY DASH .)
    FUN             reduce using rule 60 (single_apply -> USING using_block APPLY DASH .)
    FUNCTION        reduce using rule 60 (single_apply -> USING using_block APPLY DASH .)
    INTERPRETATION  reduce using rule 60 (single_apply -> USING using_block APPLY DASH .)
    LEMMA           reduce using rule 60 (single_apply -> USING using_block APPLY DASH .)
    LOCALE          reduce using rule 60 (single_apply -> USING using_block APPLY DASH .)
    METHOD          reduce using rule 60 (single_apply -> USING using_block APPLY DASH .)
    SECTION         reduce using rule 60 (single_apply -> USING using_block APPLY DASH .)
    TEXT            reduce using rule 60 (single_apply -> USING using_block APPLY DASH .)
    TYPE_SYNONYM    reduce using rule 60 (single_apply -> USING using_block APPLY DASH .)
    TYPEDECL        reduce using rule 60 (single_apply -> USING using_block APPLY DASH .)
    END             reduce using rule 60 (single_apply -> USING using_block APPLY DASH .)


state 419

    (61) single_apply -> USING using_block APPLY instruction .

    APPLY           reduce using rule 61 (single_apply -> USING using_block APPLY instruction .)
    USING           reduce using rule 61 (single_apply -> USING using_block APPLY instruction .)
    BY              reduce using rule 61 (single_apply -> USING using_block APPLY instruction .)
    DONE            reduce using rule 61 (single_apply -> USING using_block APPLY instruction .)
    SORRY           reduce using rule 61 (single_apply -> USING using_block APPLY instruction .)
    SUBGOAL         reduce using rule 61 (single_apply -> USING using_block APPLY instruction .)
    AXIOMATIZATION  reduce using rule 61 (single_apply -> USING using_block APPLY instruction .)
    FUN             reduce using rule 61 (single_apply -> USING using_block APPLY instruction .)
    FUNCTION        reduce using rule 61 (single_apply -> USING using_block APPLY instruction .)
    INTERPRETATION  reduce using rule 61 (single_apply -> USING using_block APPLY instruction .)
    LEMMA           reduce using rule 61 (single_apply -> USING using_block APPLY instruction .)
    LOCALE          reduce using rule 61 (single_apply -> USING using_block APPLY instruction .)
    METHOD          reduce using rule 61 (single_apply -> USING using_block APPLY instruction .)
    SECTION         reduce using rule 61 (single_apply -> USING using_block APPLY instruction .)
    TEXT            reduce using rule 61 (single_apply -> USING using_block APPLY instruction .)
    TYPE_SYNONYM    reduce using rule 61 (single_apply -> USING using_block APPLY instruction .)
    TYPEDECL        reduce using rule 61 (single_apply -> USING using_block APPLY instruction .)
    END             reduce using rule 61 (single_apply -> USING using_block APPLY instruction .)


state 420

    (62) single_apply -> USING using_block APPLY LEFT_PAREN . instruction RIGHT_PAREN
    (29) instruction -> LEFT_PAREN . instruction RIGHT_PAREN
    (30) instruction -> LEFT_PAREN . instruction RIGHT_PAREN instruction_modifier
    (35) single_instruction -> LEFT_PAREN . ID method_args RIGHT_PAREN
    (36) single_instruction -> LEFT_PAREN . ID method_args RIGHT_PAREN instruction_modifier
    (24) instruction -> . single_instruction
    (25) instruction -> . single_instruction instruction_modifier
    (26) instruction -> . single_instruction instruction_modifier COMMA instruction
    (27) instruction -> . single_instruction SEMICOLON instruction
    (28) instruction -> . single_instruction COMMA instruction
    (29) instruction -> . LEFT_PAREN instruction RIGHT_PAREN
    (30) instruction -> . LEFT_PAREN instruction RIGHT_PAREN instruction_modifier
    (33) single_instruction -> . ID
    (34) single_instruction -> . ID method_args
    (35) single_instruction -> . LEFT_PAREN ID method_args RIGHT_PAREN
    (36) single_instruction -> . LEFT_PAREN ID method_args RIGHT_PAREN instruction_modifier

    ID              shift and go to state 270
    LEFT_PAREN      shift and go to state 187

    instruction                    shift and go to state 427
    single_instruction             shift and go to state 186

state 421

    (65) single_apply -> USING using_block BY instruction .

    APPLY           reduce using rule 65 (single_apply -> USING using_block BY instruction .)
    USING           reduce using rule 65 (single_apply -> USING using_block BY instruction .)
    BY              reduce using rule 65 (single_apply -> USING using_block BY instruction .)
    DONE            reduce using rule 65 (single_apply -> USING using_block BY instruction .)
    SORRY           reduce using rule 65 (single_apply -> USING using_block BY instruction .)
    SUBGOAL         reduce using rule 65 (single_apply -> USING using_block BY instruction .)
    AXIOMATIZATION  reduce using rule 65 (single_apply -> USING using_block BY instruction .)
    FUN             reduce using rule 65 (single_apply -> USING using_block BY instruction .)
    FUNCTION        reduce using rule 65 (single_apply -> USING using_block BY instruction .)
    INTERPRETATION  reduce using rule 65 (single_apply -> USING using_block BY instruction .)
    LEMMA           reduce using rule 65 (single_apply -> USING using_block BY instruction .)
    LOCALE          reduce using rule 65 (single_apply -> USING using_block BY instruction .)
    METHOD          reduce using rule 65 (single_apply -> USING using_block BY instruction .)
    SECTION         reduce using rule 65 (single_apply -> USING using_block BY instruction .)
    TEXT            reduce using rule 65 (single_apply -> USING using_block BY instruction .)
    TYPE_SYNONYM    reduce using rule 65 (single_apply -> USING using_block BY instruction .)
    TYPEDECL        reduce using rule 65 (single_apply -> USING using_block BY instruction .)
    END             reduce using rule 65 (single_apply -> USING using_block BY instruction .)


state 422

    (66) single_apply -> USING using_block BY LEFT_PAREN . instruction RIGHT_PAREN
    (29) instruction -> LEFT_PAREN . instruction RIGHT_PAREN
    (30) instruction -> LEFT_PAREN . instruction RIGHT_PAREN instruction_modifier
    (35) single_instruction -> LEFT_PAREN . ID method_args RIGHT_PAREN
    (36) single_instruction -> LEFT_PAREN . ID method_args RIGHT_PAREN instruction_modifier
    (24) instruction -> . single_instruction
    (25) instruction -> . single_instruction instruction_modifier
    (26) instruction -> . single_instruction instruction_modifier COMMA instruction
    (27) instruction -> . single_instruction SEMICOLON instruction
    (28) instruction -> . single_instruction COMMA instruction
    (29) instruction -> . LEFT_PAREN instruction RIGHT_PAREN
    (30) instruction -> . LEFT_PAREN instruction RIGHT_PAREN instruction_modifier
    (33) single_instruction -> . ID
    (34) single_instruction -> . ID method_args
    (35) single_instruction -> . LEFT_PAREN ID method_args RIGHT_PAREN
    (36) single_instruction -> . LEFT_PAREN ID method_args RIGHT_PAREN instruction_modifier

    ID              shift and go to state 270
    LEFT_PAREN      shift and go to state 187

    instruction                    shift and go to state 428
    single_instruction             shift and go to state 186

state 423

    (70) using_block -> ASSMS LEFT_PAREN NAT . RIGHT_PAREN using_block
    (71) using_block -> ASSMS LEFT_PAREN NAT . COMMA NAT RIGHT_PAREN using_block
    (72) using_block -> ASSMS LEFT_PAREN NAT . DASH NAT RIGHT_PAREN using_block

    RIGHT_PAREN     shift and go to state 429
    COMMA           shift and go to state 430
    DASH            shift and go to state 431


state 424

    (64) single_apply -> BY LEFT_PAREN instruction RIGHT_PAREN .
    (29) instruction -> LEFT_PAREN instruction RIGHT_PAREN .
    (30) instruction -> LEFT_PAREN instruction RIGHT_PAREN . instruction_modifier
    (31) instruction_modifier -> . PLUS
    (32) instruction_modifier -> . QUESTION_MARK

  ! reduce/reduce conflict for APPLY resolved using rule 29 (instruction -> LEFT_PAREN instruction RIGHT_PAREN .)
  ! reduce/reduce conflict for USING resolved using rule 29 (instruction -> LEFT_PAREN instruction RIGHT_PAREN .)
  ! reduce/reduce conflict for BY resolved using rule 29 (instruction -> LEFT_PAREN instruction RIGHT_PAREN .)
  ! reduce/reduce conflict for DONE resolved using rule 29 (instruction -> LEFT_PAREN instruction RIGHT_PAREN .)
  ! reduce/reduce conflict for SORRY resolved using rule 29 (instruction -> LEFT_PAREN instruction RIGHT_PAREN .)
  ! reduce/reduce conflict for SUBGOAL resolved using rule 29 (instruction -> LEFT_PAREN instruction RIGHT_PAREN .)
  ! reduce/reduce conflict for AXIOMATIZATION resolved using rule 29 (instruction -> LEFT_PAREN instruction RIGHT_PAREN .)
  ! reduce/reduce conflict for FUN resolved using rule 29 (instruction -> LEFT_PAREN instruction RIGHT_PAREN .)
  ! reduce/reduce conflict for FUNCTION resolved using rule 29 (instruction -> LEFT_PAREN instruction RIGHT_PAREN .)
  ! reduce/reduce conflict for INTERPRETATION resolved using rule 29 (instruction -> LEFT_PAREN instruction RIGHT_PAREN .)
  ! reduce/reduce conflict for LEMMA resolved using rule 29 (instruction -> LEFT_PAREN instruction RIGHT_PAREN .)
  ! reduce/reduce conflict for LOCALE resolved using rule 29 (instruction -> LEFT_PAREN instruction RIGHT_PAREN .)
  ! reduce/reduce conflict for METHOD resolved using rule 29 (instruction -> LEFT_PAREN instruction RIGHT_PAREN .)
  ! reduce/reduce conflict for SECTION resolved using rule 29 (instruction -> LEFT_PAREN instruction RIGHT_PAREN .)
  ! reduce/reduce conflict for TEXT resolved using rule 29 (instruction -> LEFT_PAREN instruction RIGHT_PAREN .)
  ! reduce/reduce conflict for TYPE_SYNONYM resolved using rule 29 (instruction -> LEFT_PAREN instruction RIGHT_PAREN .)
  ! reduce/reduce conflict for TYPEDECL resolved using rule 29 (instruction -> LEFT_PAREN instruction RIGHT_PAREN .)
  ! reduce/reduce conflict for END resolved using rule 29 (instruction -> LEFT_PAREN instruction RIGHT_PAREN .)
    APPLY           reduce using rule 29 (instruction -> LEFT_PAREN instruction RIGHT_PAREN .)
    USING           reduce using rule 29 (instruction -> LEFT_PAREN instruction RIGHT_PAREN .)
    BY              reduce using rule 29 (instruction -> LEFT_PAREN instruction RIGHT_PAREN .)
    DONE            reduce using rule 29 (instruction -> LEFT_PAREN instruction RIGHT_PAREN .)
    SORRY           reduce using rule 29 (instruction -> LEFT_PAREN instruction RIGHT_PAREN .)
    SUBGOAL         reduce using rule 29 (instruction -> LEFT_PAREN instruction RIGHT_PAREN .)
    AXIOMATIZATION  reduce using rule 29 (instruction -> LEFT_PAREN instruction RIGHT_PAREN .)
    FUN             reduce using rule 29 (instruction -> LEFT_PAREN instruction RIGHT_PAREN .)
    FUNCTION        reduce using rule 29 (instruction -> LEFT_PAREN instruction RIGHT_PAREN .)
    INTERPRETATION  reduce using rule 29 (instruction -> LEFT_PAREN instruction RIGHT_PAREN .)
    LEMMA           reduce using rule 29 (instruction -> LEFT_PAREN instruction RIGHT_PAREN .)
    LOCALE          reduce using rule 29 (instruction -> LEFT_PAREN instruction RIGHT_PAREN .)
    METHOD          reduce using rule 29 (instruction -> LEFT_PAREN instruction RIGHT_PAREN .)
    SECTION         reduce using rule 29 (instruction -> LEFT_PAREN instruction RIGHT_PAREN .)
    TEXT            reduce using rule 29 (instruction -> LEFT_PAREN instruction RIGHT_PAREN .)
    TYPE_SYNONYM    reduce using rule 29 (instruction -> LEFT_PAREN instruction RIGHT_PAREN .)
    TYPEDECL        reduce using rule 29 (instruction -> LEFT_PAREN instruction RIGHT_PAREN .)
    END             reduce using rule 29 (instruction -> LEFT_PAREN instruction RIGHT_PAREN .)
    PLUS            shift and go to state 267
    QUESTION_MARK   shift and go to state 268

  ! APPLY           [ reduce using rule 64 (single_apply -> BY LEFT_PAREN instruction RIGHT_PAREN .) ]
  ! USING           [ reduce using rule 64 (single_apply -> BY LEFT_PAREN instruction RIGHT_PAREN .) ]
  ! BY              [ reduce using rule 64 (single_apply -> BY LEFT_PAREN instruction RIGHT_PAREN .) ]
  ! DONE            [ reduce using rule 64 (single_apply -> BY LEFT_PAREN instruction RIGHT_PAREN .) ]
  ! SORRY           [ reduce using rule 64 (single_apply -> BY LEFT_PAREN instruction RIGHT_PAREN .) ]
  ! SUBGOAL         [ reduce using rule 64 (single_apply -> BY LEFT_PAREN instruction RIGHT_PAREN .) ]
  ! AXIOMATIZATION  [ reduce using rule 64 (single_apply -> BY LEFT_PAREN instruction RIGHT_PAREN .) ]
  ! FUN             [ reduce using rule 64 (single_apply -> BY LEFT_PAREN instruction RIGHT_PAREN .) ]
  ! FUNCTION        [ reduce using rule 64 (single_apply -> BY LEFT_PAREN instruction RIGHT_PAREN .) ]
  ! INTERPRETATION  [ reduce using rule 64 (single_apply -> BY LEFT_PAREN instruction RIGHT_PAREN .) ]
  ! LEMMA           [ reduce using rule 64 (single_apply -> BY LEFT_PAREN instruction RIGHT_PAREN .) ]
  ! LOCALE          [ reduce using rule 64 (single_apply -> BY LEFT_PAREN instruction RIGHT_PAREN .) ]
  ! METHOD          [ reduce using rule 64 (single_apply -> BY LEFT_PAREN instruction RIGHT_PAREN .) ]
  ! SECTION         [ reduce using rule 64 (single_apply -> BY LEFT_PAREN instruction RIGHT_PAREN .) ]
  ! TEXT            [ reduce using rule 64 (single_apply -> BY LEFT_PAREN instruction RIGHT_PAREN .) ]
  ! TYPE_SYNONYM    [ reduce using rule 64 (single_apply -> BY LEFT_PAREN instruction RIGHT_PAREN .) ]
  ! TYPEDECL        [ reduce using rule 64 (single_apply -> BY LEFT_PAREN instruction RIGHT_PAREN .) ]
  ! END             [ reduce using rule 64 (single_apply -> BY LEFT_PAREN instruction RIGHT_PAREN .) ]

    instruction_modifier           shift and go to state 394

state 425

    (201) name_type_list -> ID COLON COLON ID AND . name_type_list
    (200) name_type_list -> . ID COLON COLON ID
    (201) name_type_list -> . ID COLON COLON ID AND name_type_list

    ID              shift and go to state 249

    name_type_list                 shift and go to state 432

state 426

    (43) method_arg -> ID DOT ID LEFT_PAREN NAT . RIGHT_PAREN

    RIGHT_PAREN     shift and go to state 433


state 427

    (62) single_apply -> USING using_block APPLY LEFT_PAREN instruction . RIGHT_PAREN
    (29) instruction -> LEFT_PAREN instruction . RIGHT_PAREN
    (30) instruction -> LEFT_PAREN instruction . RIGHT_PAREN instruction_modifier

    RIGHT_PAREN     shift and go to state 434


state 428

    (66) single_apply -> USING using_block BY LEFT_PAREN instruction . RIGHT_PAREN
    (29) instruction -> LEFT_PAREN instruction . RIGHT_PAREN
    (30) instruction -> LEFT_PAREN instruction . RIGHT_PAREN instruction_modifier

    RIGHT_PAREN     shift and go to state 435


state 429

    (70) using_block -> ASSMS LEFT_PAREN NAT RIGHT_PAREN . using_block
    (69) using_block -> . ASSMS using_block
    (70) using_block -> . ASSMS LEFT_PAREN NAT RIGHT_PAREN using_block
    (71) using_block -> . ASSMS LEFT_PAREN NAT COMMA NAT RIGHT_PAREN using_block
    (72) using_block -> . ASSMS LEFT_PAREN NAT DASH NAT RIGHT_PAREN using_block
    (73) using_block -> . empty
    (261) empty -> .

    ASSMS           shift and go to state 374
    APPLY           reduce using rule 261 (empty -> .)
    BY              reduce using rule 261 (empty -> .)

    using_block                    shift and go to state 436
    empty                          shift and go to state 375

state 430

    (71) using_block -> ASSMS LEFT_PAREN NAT COMMA . NAT RIGHT_PAREN using_block

    NAT             shift and go to state 437


state 431

    (72) using_block -> ASSMS LEFT_PAREN NAT DASH . NAT RIGHT_PAREN using_block

    NAT             shift and go to state 438


state 432

    (201) name_type_list -> ID COLON COLON ID AND name_type_list .

    FIXES           reduce using rule 201 (name_type_list -> ID COLON COLON ID AND name_type_list .)
    CONSTRAINS      reduce using rule 201 (name_type_list -> ID COLON COLON ID AND name_type_list .)
    ASSUMES         reduce using rule 201 (name_type_list -> ID COLON COLON ID AND name_type_list .)
    DEFINES         reduce using rule 201 (name_type_list -> ID COLON COLON ID AND name_type_list .)
    NOTES           reduce using rule 201 (name_type_list -> ID COLON COLON ID AND name_type_list .)
    BEGIN           reduce using rule 201 (name_type_list -> ID COLON COLON ID AND name_type_list .)
    OPENING         reduce using rule 201 (name_type_list -> ID COLON COLON ID AND name_type_list .)
    AXIOMATIZATION  reduce using rule 201 (name_type_list -> ID COLON COLON ID AND name_type_list .)
    FUN             reduce using rule 201 (name_type_list -> ID COLON COLON ID AND name_type_list .)
    FUNCTION        reduce using rule 201 (name_type_list -> ID COLON COLON ID AND name_type_list .)
    INTERPRETATION  reduce using rule 201 (name_type_list -> ID COLON COLON ID AND name_type_list .)
    LEMMA           reduce using rule 201 (name_type_list -> ID COLON COLON ID AND name_type_list .)
    LOCALE          reduce using rule 201 (name_type_list -> ID COLON COLON ID AND name_type_list .)
    METHOD          reduce using rule 201 (name_type_list -> ID COLON COLON ID AND name_type_list .)
    SECTION         reduce using rule 201 (name_type_list -> ID COLON COLON ID AND name_type_list .)
    TEXT            reduce using rule 201 (name_type_list -> ID COLON COLON ID AND name_type_list .)
    TYPE_SYNONYM    reduce using rule 201 (name_type_list -> ID COLON COLON ID AND name_type_list .)
    TYPEDECL        reduce using rule 201 (name_type_list -> ID COLON COLON ID AND name_type_list .)
    END             reduce using rule 201 (name_type_list -> ID COLON COLON ID AND name_type_list .)


state 433

    (43) method_arg -> ID DOT ID LEFT_PAREN NAT RIGHT_PAREN .

    ID              reduce using rule 43 (method_arg -> ID DOT ID LEFT_PAREN NAT RIGHT_PAREN .)
    QUOTED_STRING   reduce using rule 43 (method_arg -> ID DOT ID LEFT_PAREN NAT RIGHT_PAREN .)
    SEMICOLON       reduce using rule 43 (method_arg -> ID DOT ID LEFT_PAREN NAT RIGHT_PAREN .)
    COMMA           reduce using rule 43 (method_arg -> ID DOT ID LEFT_PAREN NAT RIGHT_PAREN .)
    PLUS            reduce using rule 43 (method_arg -> ID DOT ID LEFT_PAREN NAT RIGHT_PAREN .)
    QUESTION_MARK   reduce using rule 43 (method_arg -> ID DOT ID LEFT_PAREN NAT RIGHT_PAREN .)
    AXIOMATIZATION  reduce using rule 43 (method_arg -> ID DOT ID LEFT_PAREN NAT RIGHT_PAREN .)
    FUN             reduce using rule 43 (method_arg -> ID DOT ID LEFT_PAREN NAT RIGHT_PAREN .)
    FUNCTION        reduce using rule 43 (method_arg -> ID DOT ID LEFT_PAREN NAT RIGHT_PAREN .)
    INTERPRETATION  reduce using rule 43 (method_arg -> ID DOT ID LEFT_PAREN NAT RIGHT_PAREN .)
    LEMMA           reduce using rule 43 (method_arg -> ID DOT ID LEFT_PAREN NAT RIGHT_PAREN .)
    LOCALE          reduce using rule 43 (method_arg -> ID DOT ID LEFT_PAREN NAT RIGHT_PAREN .)
    METHOD          reduce using rule 43 (method_arg -> ID DOT ID LEFT_PAREN NAT RIGHT_PAREN .)
    SECTION         reduce using rule 43 (method_arg -> ID DOT ID LEFT_PAREN NAT RIGHT_PAREN .)
    TEXT            reduce using rule 43 (method_arg -> ID DOT ID LEFT_PAREN NAT RIGHT_PAREN .)
    TYPE_SYNONYM    reduce using rule 43 (method_arg -> ID DOT ID LEFT_PAREN NAT RIGHT_PAREN .)
    TYPEDECL        reduce using rule 43 (method_arg -> ID DOT ID LEFT_PAREN NAT RIGHT_PAREN .)
    END             reduce using rule 43 (method_arg -> ID DOT ID LEFT_PAREN NAT RIGHT_PAREN .)
    RIGHT_PAREN     reduce using rule 43 (method_arg -> ID DOT ID LEFT_PAREN NAT RIGHT_PAREN .)
    APPLY           reduce using rule 43 (method_arg -> ID DOT ID LEFT_PAREN NAT RIGHT_PAREN .)
    USING           reduce using rule 43 (method_arg -> ID DOT ID LEFT_PAREN NAT RIGHT_PAREN .)
    BY              reduce using rule 43 (method_arg -> ID DOT ID LEFT_PAREN NAT RIGHT_PAREN .)
    DONE            reduce using rule 43 (method_arg -> ID DOT ID LEFT_PAREN NAT RIGHT_PAREN .)
    SORRY           reduce using rule 43 (method_arg -> ID DOT ID LEFT_PAREN NAT RIGHT_PAREN .)
    SUBGOAL         reduce using rule 43 (method_arg -> ID DOT ID LEFT_PAREN NAT RIGHT_PAREN .)


state 434

    (62) single_apply -> USING using_block APPLY LEFT_PAREN instruction RIGHT_PAREN .
    (29) instruction -> LEFT_PAREN instruction RIGHT_PAREN .
    (30) instruction -> LEFT_PAREN instruction RIGHT_PAREN . instruction_modifier
    (31) instruction_modifier -> . PLUS
    (32) instruction_modifier -> . QUESTION_MARK

  ! reduce/reduce conflict for APPLY resolved using rule 29 (instruction -> LEFT_PAREN instruction RIGHT_PAREN .)
  ! reduce/reduce conflict for USING resolved using rule 29 (instruction -> LEFT_PAREN instruction RIGHT_PAREN .)
  ! reduce/reduce conflict for BY resolved using rule 29 (instruction -> LEFT_PAREN instruction RIGHT_PAREN .)
  ! reduce/reduce conflict for DONE resolved using rule 29 (instruction -> LEFT_PAREN instruction RIGHT_PAREN .)
  ! reduce/reduce conflict for SORRY resolved using rule 29 (instruction -> LEFT_PAREN instruction RIGHT_PAREN .)
  ! reduce/reduce conflict for SUBGOAL resolved using rule 29 (instruction -> LEFT_PAREN instruction RIGHT_PAREN .)
  ! reduce/reduce conflict for AXIOMATIZATION resolved using rule 29 (instruction -> LEFT_PAREN instruction RIGHT_PAREN .)
  ! reduce/reduce conflict for FUN resolved using rule 29 (instruction -> LEFT_PAREN instruction RIGHT_PAREN .)
  ! reduce/reduce conflict for FUNCTION resolved using rule 29 (instruction -> LEFT_PAREN instruction RIGHT_PAREN .)
  ! reduce/reduce conflict for INTERPRETATION resolved using rule 29 (instruction -> LEFT_PAREN instruction RIGHT_PAREN .)
  ! reduce/reduce conflict for LEMMA resolved using rule 29 (instruction -> LEFT_PAREN instruction RIGHT_PAREN .)
  ! reduce/reduce conflict for LOCALE resolved using rule 29 (instruction -> LEFT_PAREN instruction RIGHT_PAREN .)
  ! reduce/reduce conflict for METHOD resolved using rule 29 (instruction -> LEFT_PAREN instruction RIGHT_PAREN .)
  ! reduce/reduce conflict for SECTION resolved using rule 29 (instruction -> LEFT_PAREN instruction RIGHT_PAREN .)
  ! reduce/reduce conflict for TEXT resolved using rule 29 (instruction -> LEFT_PAREN instruction RIGHT_PAREN .)
  ! reduce/reduce conflict for TYPE_SYNONYM resolved using rule 29 (instruction -> LEFT_PAREN instruction RIGHT_PAREN .)
  ! reduce/reduce conflict for TYPEDECL resolved using rule 29 (instruction -> LEFT_PAREN instruction RIGHT_PAREN .)
  ! reduce/reduce conflict for END resolved using rule 29 (instruction -> LEFT_PAREN instruction RIGHT_PAREN .)
    APPLY           reduce using rule 29 (instruction -> LEFT_PAREN instruction RIGHT_PAREN .)
    USING           reduce using rule 29 (instruction -> LEFT_PAREN instruction RIGHT_PAREN .)
    BY              reduce using rule 29 (instruction -> LEFT_PAREN instruction RIGHT_PAREN .)
    DONE            reduce using rule 29 (instruction -> LEFT_PAREN instruction RIGHT_PAREN .)
    SORRY           reduce using rule 29 (instruction -> LEFT_PAREN instruction RIGHT_PAREN .)
    SUBGOAL         reduce using rule 29 (instruction -> LEFT_PAREN instruction RIGHT_PAREN .)
    AXIOMATIZATION  reduce using rule 29 (instruction -> LEFT_PAREN instruction RIGHT_PAREN .)
    FUN             reduce using rule 29 (instruction -> LEFT_PAREN instruction RIGHT_PAREN .)
    FUNCTION        reduce using rule 29 (instruction -> LEFT_PAREN instruction RIGHT_PAREN .)
    INTERPRETATION  reduce using rule 29 (instruction -> LEFT_PAREN instruction RIGHT_PAREN .)
    LEMMA           reduce using rule 29 (instruction -> LEFT_PAREN instruction RIGHT_PAREN .)
    LOCALE          reduce using rule 29 (instruction -> LEFT_PAREN instruction RIGHT_PAREN .)
    METHOD          reduce using rule 29 (instruction -> LEFT_PAREN instruction RIGHT_PAREN .)
    SECTION         reduce using rule 29 (instruction -> LEFT_PAREN instruction RIGHT_PAREN .)
    TEXT            reduce using rule 29 (instruction -> LEFT_PAREN instruction RIGHT_PAREN .)
    TYPE_SYNONYM    reduce using rule 29 (instruction -> LEFT_PAREN instruction RIGHT_PAREN .)
    TYPEDECL        reduce using rule 29 (instruction -> LEFT_PAREN instruction RIGHT_PAREN .)
    END             reduce using rule 29 (instruction -> LEFT_PAREN instruction RIGHT_PAREN .)
    PLUS            shift and go to state 267
    QUESTION_MARK   shift and go to state 268

  ! APPLY           [ reduce using rule 62 (single_apply -> USING using_block APPLY LEFT_PAREN instruction RIGHT_PAREN .) ]
  ! USING           [ reduce using rule 62 (single_apply -> USING using_block APPLY LEFT_PAREN instruction RIGHT_PAREN .) ]
  ! BY              [ reduce using rule 62 (single_apply -> USING using_block APPLY LEFT_PAREN instruction RIGHT_PAREN .) ]
  ! DONE            [ reduce using rule 62 (single_apply -> USING using_block APPLY LEFT_PAREN instruction RIGHT_PAREN .) ]
  ! SORRY           [ reduce using rule 62 (single_apply -> USING using_block APPLY LEFT_PAREN instruction RIGHT_PAREN .) ]
  ! SUBGOAL         [ reduce using rule 62 (single_apply -> USING using_block APPLY LEFT_PAREN instruction RIGHT_PAREN .) ]
  ! AXIOMATIZATION  [ reduce using rule 62 (single_apply -> USING using_block APPLY LEFT_PAREN instruction RIGHT_PAREN .) ]
  ! FUN             [ reduce using rule 62 (single_apply -> USING using_block APPLY LEFT_PAREN instruction RIGHT_PAREN .) ]
  ! FUNCTION        [ reduce using rule 62 (single_apply -> USING using_block APPLY LEFT_PAREN instruction RIGHT_PAREN .) ]
  ! INTERPRETATION  [ reduce using rule 62 (single_apply -> USING using_block APPLY LEFT_PAREN instruction RIGHT_PAREN .) ]
  ! LEMMA           [ reduce using rule 62 (single_apply -> USING using_block APPLY LEFT_PAREN instruction RIGHT_PAREN .) ]
  ! LOCALE          [ reduce using rule 62 (single_apply -> USING using_block APPLY LEFT_PAREN instruction RIGHT_PAREN .) ]
  ! METHOD          [ reduce using rule 62 (single_apply -> USING using_block APPLY LEFT_PAREN instruction RIGHT_PAREN .) ]
  ! SECTION         [ reduce using rule 62 (single_apply -> USING using_block APPLY LEFT_PAREN instruction RIGHT_PAREN .) ]
  ! TEXT            [ reduce using rule 62 (single_apply -> USING using_block APPLY LEFT_PAREN instruction RIGHT_PAREN .) ]
  ! TYPE_SYNONYM    [ reduce using rule 62 (single_apply -> USING using_block APPLY LEFT_PAREN instruction RIGHT_PAREN .) ]
  ! TYPEDECL        [ reduce using rule 62 (single_apply -> USING using_block APPLY LEFT_PAREN instruction RIGHT_PAREN .) ]
  ! END             [ reduce using rule 62 (single_apply -> USING using_block APPLY LEFT_PAREN instruction RIGHT_PAREN .) ]

    instruction_modifier           shift and go to state 394

state 435

    (66) single_apply -> USING using_block BY LEFT_PAREN instruction RIGHT_PAREN .
    (29) instruction -> LEFT_PAREN instruction RIGHT_PAREN .
    (30) instruction -> LEFT_PAREN instruction RIGHT_PAREN . instruction_modifier
    (31) instruction_modifier -> . PLUS
    (32) instruction_modifier -> . QUESTION_MARK

  ! reduce/reduce conflict for APPLY resolved using rule 29 (instruction -> LEFT_PAREN instruction RIGHT_PAREN .)
  ! reduce/reduce conflict for USING resolved using rule 29 (instruction -> LEFT_PAREN instruction RIGHT_PAREN .)
  ! reduce/reduce conflict for BY resolved using rule 29 (instruction -> LEFT_PAREN instruction RIGHT_PAREN .)
  ! reduce/reduce conflict for DONE resolved using rule 29 (instruction -> LEFT_PAREN instruction RIGHT_PAREN .)
  ! reduce/reduce conflict for SORRY resolved using rule 29 (instruction -> LEFT_PAREN instruction RIGHT_PAREN .)
  ! reduce/reduce conflict for SUBGOAL resolved using rule 29 (instruction -> LEFT_PAREN instruction RIGHT_PAREN .)
  ! reduce/reduce conflict for AXIOMATIZATION resolved using rule 29 (instruction -> LEFT_PAREN instruction RIGHT_PAREN .)
  ! reduce/reduce conflict for FUN resolved using rule 29 (instruction -> LEFT_PAREN instruction RIGHT_PAREN .)
  ! reduce/reduce conflict for FUNCTION resolved using rule 29 (instruction -> LEFT_PAREN instruction RIGHT_PAREN .)
  ! reduce/reduce conflict for INTERPRETATION resolved using rule 29 (instruction -> LEFT_PAREN instruction RIGHT_PAREN .)
  ! reduce/reduce conflict for LEMMA resolved using rule 29 (instruction -> LEFT_PAREN instruction RIGHT_PAREN .)
  ! reduce/reduce conflict for LOCALE resolved using rule 29 (instruction -> LEFT_PAREN instruction RIGHT_PAREN .)
  ! reduce/reduce conflict for METHOD resolved using rule 29 (instruction -> LEFT_PAREN instruction RIGHT_PAREN .)
  ! reduce/reduce conflict for SECTION resolved using rule 29 (instruction -> LEFT_PAREN instruction RIGHT_PAREN .)
  ! reduce/reduce conflict for TEXT resolved using rule 29 (instruction -> LEFT_PAREN instruction RIGHT_PAREN .)
  ! reduce/reduce conflict for TYPE_SYNONYM resolved using rule 29 (instruction -> LEFT_PAREN instruction RIGHT_PAREN .)
  ! reduce/reduce conflict for TYPEDECL resolved using rule 29 (instruction -> LEFT_PAREN instruction RIGHT_PAREN .)
  ! reduce/reduce conflict for END resolved using rule 29 (instruction -> LEFT_PAREN instruction RIGHT_PAREN .)
    APPLY           reduce using rule 29 (instruction -> LEFT_PAREN instruction RIGHT_PAREN .)
    USING           reduce using rule 29 (instruction -> LEFT_PAREN instruction RIGHT_PAREN .)
    BY              reduce using rule 29 (instruction -> LEFT_PAREN instruction RIGHT_PAREN .)
    DONE            reduce using rule 29 (instruction -> LEFT_PAREN instruction RIGHT_PAREN .)
    SORRY           reduce using rule 29 (instruction -> LEFT_PAREN instruction RIGHT_PAREN .)
    SUBGOAL         reduce using rule 29 (instruction -> LEFT_PAREN instruction RIGHT_PAREN .)
    AXIOMATIZATION  reduce using rule 29 (instruction -> LEFT_PAREN instruction RIGHT_PAREN .)
    FUN             reduce using rule 29 (instruction -> LEFT_PAREN instruction RIGHT_PAREN .)
    FUNCTION        reduce using rule 29 (instruction -> LEFT_PAREN instruction RIGHT_PAREN .)
    INTERPRETATION  reduce using rule 29 (instruction -> LEFT_PAREN instruction RIGHT_PAREN .)
    LEMMA           reduce using rule 29 (instruction -> LEFT_PAREN instruction RIGHT_PAREN .)
    LOCALE          reduce using rule 29 (instruction -> LEFT_PAREN instruction RIGHT_PAREN .)
    METHOD          reduce using rule 29 (instruction -> LEFT_PAREN instruction RIGHT_PAREN .)
    SECTION         reduce using rule 29 (instruction -> LEFT_PAREN instruction RIGHT_PAREN .)
    TEXT            reduce using rule 29 (instruction -> LEFT_PAREN instruction RIGHT_PAREN .)
    TYPE_SYNONYM    reduce using rule 29 (instruction -> LEFT_PAREN instruction RIGHT_PAREN .)
    TYPEDECL        reduce using rule 29 (instruction -> LEFT_PAREN instruction RIGHT_PAREN .)
    END             reduce using rule 29 (instruction -> LEFT_PAREN instruction RIGHT_PAREN .)
    PLUS            shift and go to state 267
    QUESTION_MARK   shift and go to state 268

  ! APPLY           [ reduce using rule 66 (single_apply -> USING using_block BY LEFT_PAREN instruction RIGHT_PAREN .) ]
  ! USING           [ reduce using rule 66 (single_apply -> USING using_block BY LEFT_PAREN instruction RIGHT_PAREN .) ]
  ! BY              [ reduce using rule 66 (single_apply -> USING using_block BY LEFT_PAREN instruction RIGHT_PAREN .) ]
  ! DONE            [ reduce using rule 66 (single_apply -> USING using_block BY LEFT_PAREN instruction RIGHT_PAREN .) ]
  ! SORRY           [ reduce using rule 66 (single_apply -> USING using_block BY LEFT_PAREN instruction RIGHT_PAREN .) ]
  ! SUBGOAL         [ reduce using rule 66 (single_apply -> USING using_block BY LEFT_PAREN instruction RIGHT_PAREN .) ]
  ! AXIOMATIZATION  [ reduce using rule 66 (single_apply -> USING using_block BY LEFT_PAREN instruction RIGHT_PAREN .) ]
  ! FUN             [ reduce using rule 66 (single_apply -> USING using_block BY LEFT_PAREN instruction RIGHT_PAREN .) ]
  ! FUNCTION        [ reduce using rule 66 (single_apply -> USING using_block BY LEFT_PAREN instruction RIGHT_PAREN .) ]
  ! INTERPRETATION  [ reduce using rule 66 (single_apply -> USING using_block BY LEFT_PAREN instruction RIGHT_PAREN .) ]
  ! LEMMA           [ reduce using rule 66 (single_apply -> USING using_block BY LEFT_PAREN instruction RIGHT_PAREN .) ]
  ! LOCALE          [ reduce using rule 66 (single_apply -> USING using_block BY LEFT_PAREN instruction RIGHT_PAREN .) ]
  ! METHOD          [ reduce using rule 66 (single_apply -> USING using_block BY LEFT_PAREN instruction RIGHT_PAREN .) ]
  ! SECTION         [ reduce using rule 66 (single_apply -> USING using_block BY LEFT_PAREN instruction RIGHT_PAREN .) ]
  ! TEXT            [ reduce using rule 66 (single_apply -> USING using_block BY LEFT_PAREN instruction RIGHT_PAREN .) ]
  ! TYPE_SYNONYM    [ reduce using rule 66 (single_apply -> USING using_block BY LEFT_PAREN instruction RIGHT_PAREN .) ]
  ! TYPEDECL        [ reduce using rule 66 (single_apply -> USING using_block BY LEFT_PAREN instruction RIGHT_PAREN .) ]
  ! END             [ reduce using rule 66 (single_apply -> USING using_block BY LEFT_PAREN instruction RIGHT_PAREN .) ]

    instruction_modifier           shift and go to state 394

state 436

    (70) using_block -> ASSMS LEFT_PAREN NAT RIGHT_PAREN using_block .

    APPLY           reduce using rule 70 (using_block -> ASSMS LEFT_PAREN NAT RIGHT_PAREN using_block .)
    BY              reduce using rule 70 (using_block -> ASSMS LEFT_PAREN NAT RIGHT_PAREN using_block .)


state 437

    (71) using_block -> ASSMS LEFT_PAREN NAT COMMA NAT . RIGHT_PAREN using_block

    RIGHT_PAREN     shift and go to state 439


state 438

    (72) using_block -> ASSMS LEFT_PAREN NAT DASH NAT . RIGHT_PAREN using_block

    RIGHT_PAREN     shift and go to state 440


state 439

    (71) using_block -> ASSMS LEFT_PAREN NAT COMMA NAT RIGHT_PAREN . using_block
    (69) using_block -> . ASSMS using_block
    (70) using_block -> . ASSMS LEFT_PAREN NAT RIGHT_PAREN using_block
    (71) using_block -> . ASSMS LEFT_PAREN NAT COMMA NAT RIGHT_PAREN using_block
    (72) using_block -> . ASSMS LEFT_PAREN NAT DASH NAT RIGHT_PAREN using_block
    (73) using_block -> . empty
    (261) empty -> .

    ASSMS           shift and go to state 374
    APPLY           reduce using rule 261 (empty -> .)
    BY              reduce using rule 261 (empty -> .)

    using_block                    shift and go to state 441
    empty                          shift and go to state 375

state 440

    (72) using_block -> ASSMS LEFT_PAREN NAT DASH NAT RIGHT_PAREN . using_block
    (69) using_block -> . ASSMS using_block
    (70) using_block -> . ASSMS LEFT_PAREN NAT RIGHT_PAREN using_block
    (71) using_block -> . ASSMS LEFT_PAREN NAT COMMA NAT RIGHT_PAREN using_block
    (72) using_block -> . ASSMS LEFT_PAREN NAT DASH NAT RIGHT_PAREN using_block
    (73) using_block -> . empty
    (261) empty -> .

    ASSMS           shift and go to state 374
    APPLY           reduce using rule 261 (empty -> .)
    BY              reduce using rule 261 (empty -> .)

    using_block                    shift and go to state 442
    empty                          shift and go to state 375

state 441

    (71) using_block -> ASSMS LEFT_PAREN NAT COMMA NAT RIGHT_PAREN using_block .

    APPLY           reduce using rule 71 (using_block -> ASSMS LEFT_PAREN NAT COMMA NAT RIGHT_PAREN using_block .)
    BY              reduce using rule 71 (using_block -> ASSMS LEFT_PAREN NAT COMMA NAT RIGHT_PAREN using_block .)


state 442

    (72) using_block -> ASSMS LEFT_PAREN NAT DASH NAT RIGHT_PAREN using_block .

    APPLY           reduce using rule 72 (using_block -> ASSMS LEFT_PAREN NAT DASH NAT RIGHT_PAREN using_block .)
    BY              reduce using rule 72 (using_block -> ASSMS LEFT_PAREN NAT DASH NAT RIGHT_PAREN using_block .)

WARNING: 
WARNING: Conflicts:
WARNING: 
WARNING: shift/reduce conflict for COLON in state 50 resolved as shift
WARNING: shift/reduce conflict for AND in state 50 resolved as shift
WARNING: shift/reduce conflict for AND in state 141 resolved as shift
WARNING: shift/reduce conflict for OPENING in state 176 resolved as shift
WARNING: shift/reduce conflict for LEFT_BRACKET in state 262 resolved as shift
WARNING: shift/reduce conflict for APPLY in state 312 resolved as shift
WARNING: shift/reduce conflict for USING in state 312 resolved as shift
WARNING: shift/reduce conflict for BY in state 312 resolved as shift
WARNING: shift/reduce conflict for DONE in state 312 resolved as shift
WARNING: shift/reduce conflict for SORRY in state 312 resolved as shift
WARNING: shift/reduce conflict for SUBGOAL in state 312 resolved as shift
WARNING: shift/reduce conflict for APPLY in state 313 resolved as shift
WARNING: shift/reduce conflict for USING in state 313 resolved as shift
WARNING: shift/reduce conflict for BY in state 313 resolved as shift
WARNING: shift/reduce conflict for DONE in state 313 resolved as shift
WARNING: shift/reduce conflict for SORRY in state 313 resolved as shift
WARNING: shift/reduce conflict for SUBGOAL in state 313 resolved as shift
WARNING: shift/reduce conflict for LEFT_BRACKET in state 338 resolved as shift
WARNING: shift/reduce conflict for RIGHT_PAREN in state 347 resolved as shift
WARNING: shift/reduce conflict for APPLY in state 378 resolved as shift
WARNING: shift/reduce conflict for USING in state 378 resolved as shift
WARNING: shift/reduce conflict for BY in state 378 resolved as shift
WARNING: shift/reduce conflict for DONE in state 378 resolved as shift
WARNING: shift/reduce conflict for SORRY in state 378 resolved as shift
WARNING: shift/reduce conflict for SUBGOAL in state 378 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 395 resolved as shift
WARNING: shift/reduce conflict for QUESTION_MARK in state 395 resolved as shift
WARNING: reduce/reduce conflict in state 96 resolved using rule (sequential -> ID)
WARNING: rejected rule (domintros -> ID) in state 96
WARNING: reduce/reduce conflict in state 97 resolved using rule (sequential -> QUOTED_STRING)
WARNING: rejected rule (domintros -> QUOTED_STRING) in state 97
WARNING: reduce/reduce conflict in state 188 resolved using rule (single_instruction -> ID)
WARNING: rejected rule (empty -> <empty>) in state 188
WARNING: reduce/reduce conflict in state 203 resolved using rule (args -> arg)
WARNING: rejected rule (empty -> <empty>) in state 203
WARNING: reduce/reduce conflict in state 270 resolved using rule (single_instruction -> ID)
WARNING: rejected rule (empty -> <empty>) in state 270
WARNING: reduce/reduce conflict in state 311 resolved using rule (lemma_proof_block -> empty)
WARNING: rejected rule (apply_block -> empty) in state 311
WARNING: reduce/reduce conflict in state 417 resolved using rule (instruction -> LEFT_PAREN instruction RIGHT_PAREN)
WARNING: rejected rule (single_apply -> APPLY LEFT_PAREN instruction RIGHT_PAREN) in state 417
WARNING: reduce/reduce conflict in state 424 resolved using rule (instruction -> LEFT_PAREN instruction RIGHT_PAREN)
WARNING: rejected rule (single_apply -> BY LEFT_PAREN instruction RIGHT_PAREN) in state 424
WARNING: reduce/reduce conflict in state 434 resolved using rule (instruction -> LEFT_PAREN instruction RIGHT_PAREN)
WARNING: rejected rule (single_apply -> USING using_block APPLY LEFT_PAREN instruction RIGHT_PAREN) in state 434
WARNING: reduce/reduce conflict in state 435 resolved using rule (instruction -> LEFT_PAREN instruction RIGHT_PAREN)
WARNING: rejected rule (single_apply -> USING using_block BY LEFT_PAREN instruction RIGHT_PAREN) in state 435
WARNING: Rule (domintros -> ID) is never reduced
WARNING: Rule (domintros -> QUOTED_STRING) is never reduced
WARNING: Rule (single_apply -> APPLY LEFT_PAREN instruction RIGHT_PAREN) is never reduced
WARNING: Rule (single_apply -> BY LEFT_PAREN instruction RIGHT_PAREN) is never reduced
WARNING: Rule (single_apply -> USING using_block APPLY LEFT_PAREN instruction RIGHT_PAREN) is never reduced
WARNING: Rule (single_apply -> USING using_block BY LEFT_PAREN instruction RIGHT_PAREN) is never reduced
