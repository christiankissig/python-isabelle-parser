Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Unused terminals:

    ALTSTRING
    ASSUME
    HAVE
    LATIN
    LETTER
    LONG_IDENT
    OUTER_COMMENT
    SHORT_IDENT
    SHOW
    STRING
    SUBSCRIPT
    SYM_FLOAT
    SYM_IDENT
    TERM_VAR
    THEN
    TYPE_IDENT
    TYPE_VAR
    VERBATIM

Grammar

Rule 0     S' -> theory_file
Rule 1     theory_file -> theory
Rule 2     theory_file -> section_block theory_file
Rule 3     theory_file -> text_block theory_file
Rule 4     theory -> THEORY ID imports_opt BEGIN content END
Rule 5     imports_opt -> IMPORTS import_list
Rule 6     imports_opt -> empty
Rule 7     import_list -> ID import_list
Rule 8     import_list -> QUOTED_STRING import_list
Rule 9     import_list -> ID
Rule 10    content -> statement content
Rule 11    content -> empty
Rule 12    statement -> axiomatization_block
Rule 13    statement -> fun_block
Rule 14    statement -> lemma_block
Rule 15    statement -> locale_block
Rule 16    statement -> method_block
Rule 17    statement -> section_block
Rule 18    statement -> text_block
Rule 19    statement -> type_synonym
Rule 20    statement -> typedecl
Rule 21    method_block -> METHOD method_name EQUALS instruction
Rule 22    method_name -> ID
Rule 23    instruction -> single_instruction
Rule 24    instruction -> single_instruction instruction_modifier
Rule 25    instruction -> single_instruction instruction_modifier COMMA instruction
Rule 26    instruction -> single_instruction SEMICOLON instruction
Rule 27    instruction -> single_instruction COMMA instruction
Rule 28    instruction -> LEFT_PAREN instruction RIGHT_PAREN
Rule 29    instruction -> LEFT_PAREN instruction RIGHT_PAREN instruction_modifier
Rule 30    instruction_modifier -> PLUS
Rule 31    instruction_modifier -> QUESTION_MARK
Rule 32    single_instruction -> ID
Rule 33    single_instruction -> ID method_args
Rule 34    single_instruction -> LEFT_PAREN ID method_args RIGHT_PAREN
Rule 35    single_instruction -> LEFT_PAREN ID method_args RIGHT_PAREN instruction_modifier
Rule 36    method_args -> ID COLON method_arg method_args
Rule 37    method_args -> method_arg method_args
Rule 38    method_args -> empty
Rule 39    method_arg -> ID
Rule 40    method_arg -> ID LEFT_PAREN NAT RIGHT_PAREN
Rule 41    method_arg -> ID DOT ID
Rule 42    method_arg -> ID DOT ID LEFT_PAREN NAT RIGHT_PAREN
Rule 43    method_arg -> QUOTED_STRING
Rule 44    lemma_block -> LEMMA ID COLON assumes_block shows_clause lemma_proof_block
Rule 45    lemma_proof_block -> PROOF apply_block
Rule 46    lemma_proof_block -> apply_block
Rule 47    lemma_proof_block -> empty
Rule 48    assumes_block -> ASSUMES assumptions_list
Rule 49    assumptions_list -> assumption AND assumptions_list
Rule 50    assumptions_list -> assumption
Rule 51    assumption -> QUOTED_STRING
Rule 52    assumption -> NAT COLON QUOTED_STRING
Rule 53    shows_clause -> SHOWS QUOTED_STRING
Rule 54    apply_block -> single_apply apply_block
Rule 55    apply_block -> subgoal apply_block
Rule 56    apply_block -> empty
Rule 57    single_apply -> APPLY instruction
Rule 58    single_apply -> APPLY LEFT_PAREN instruction RIGHT_PAREN
Rule 59    single_apply -> USING using_block APPLY DASH
Rule 60    single_apply -> USING using_block APPLY instruction
Rule 61    single_apply -> USING using_block APPLY LEFT_PAREN instruction RIGHT_PAREN
Rule 62    single_apply -> BY instruction
Rule 63    single_apply -> BY LEFT_PAREN instruction RIGHT_PAREN
Rule 64    single_apply -> USING using_block BY instruction
Rule 65    single_apply -> USING using_block BY LEFT_PAREN instruction RIGHT_PAREN
Rule 66    single_apply -> DONE
Rule 67    single_apply -> SORRY
Rule 68    using_block -> ASSMS using_block
Rule 69    using_block -> ASSMS LEFT_PAREN NAT RIGHT_PAREN using_block
Rule 70    using_block -> ASSMS LEFT_PAREN NAT COMMA NAT RIGHT_PAREN using_block
Rule 71    using_block -> ASSMS LEFT_PAREN NAT DASH NAT RIGHT_PAREN using_block
Rule 72    using_block -> empty
Rule 73    subgoals -> subgoal subgoals
Rule 74    subgoals -> subgoal
Rule 75    subgoal -> SUBGOAL QUOTED_STRING apply_block
Rule 76    typespec -> ID
Rule 77    typespec -> typeargs ID
Rule 78    typearg -> ID
Rule 79    typearg -> ID COLON COLON ID
Rule 80    typeargs -> typearg
Rule 81    typeargs -> typearg COMMA typeargs
Rule 82    typeargs -> LEFT_PAREN typeargs RIGHT_PAREN
Rule 83    vars -> var
Rule 84    vars -> var AND vars
Rule 85    var -> names
Rule 86    var -> ID COLON COLON ID
Rule 87    var -> GREEK COLON COLON ID
Rule 88    var -> ID COLON COLON QUOTED_STRING
Rule 89    var -> GREEK COLON COLON QUOTED_STRING
Rule 90    var -> names COLON COLON ID
Rule 91    var -> names COLON COLON QUOTED_STRING
Rule 92    var -> ID mixfix
Rule 93    var -> ID COLON COLON ID mixfix
Rule 94    var -> GREEK COLON COLON ID mixfix
Rule 95    var -> ID COLON COLON QUOTED_STRING mixfix
Rule 96    var -> GREEK COLON COLON QUOTED_STRING mixfix
Rule 97    names -> ID
Rule 98    names -> ID AND names
Rule 99    names_list -> ID
Rule 100   names_list -> ID names
Rule 101   prop_pat -> LEFT_PAREN prop_pat_terms RIGHT_PAREN
Rule 102   prop_pat_terms -> prop_pat_term
Rule 103   prop_pat_terms -> prop_pat_term prop_pat_terms
Rule 104   prop_pat_term -> IS ID
Rule 105   prop_pat_term -> IS QUOTED_STRING
Rule 106   thmdecl -> thmbind COLON
Rule 107   thmdef -> thmbind EQ
Rule 108   thm -> ID attributes
Rule 109   thm -> ID
Rule 110   thm -> attributes
Rule 111   thms -> thm
Rule 112   thms -> thm thms
Rule 113   thmbind -> ID
Rule 114   thmbind -> ID attributes
Rule 115   thmbind -> attributes
Rule 116   attributes -> LEFT_BRACKET attributes_list RIGHT_BRACKET
Rule 117   attributes_list -> empty
Rule 118   attributes_list -> attribute
Rule 119   attributes_list -> attribute COMMA attributes_list
Rule 120   attribute -> ID args
Rule 121   args -> empty
Rule 122   args -> arg
Rule 123   args -> arg args
Rule 124   arg -> ID
Rule 125   arg -> LEFT_PAREN args RIGHT_PAREN
Rule 126   arg -> LEFT_BRACKET args RIGHT_BRACKET
Rule 127   for_fixes -> empty
Rule 128   for_fixes -> FOR vars
Rule 129   multi_specs -> structured_spec
Rule 130   multi_specs -> structured_spec multi_specs
Rule 131   structured_spec -> ID spec_prems for_fixes
Rule 132   structured_spec -> QUOTED_STRING spec_prems for_fixes
Rule 133   structured_spec -> thmdecl ID spec_prems for_fixes
Rule 134   structured_spec -> thmdecl QUOTED_STRING spec_prems for_fixes
Rule 135   spec_prems -> empty
Rule 136   spec_prems -> IF prop_list
Rule 137   prop_list -> ID
Rule 138   prop_list -> ID prop_list
Rule 139   prop_list -> ID AND prop_list
Rule 140   specification -> vars WHERE multi_specs
Rule 141   opening -> OPENING names_list
Rule 142   axiomatization_block -> AXIOMATIZATION
Rule 143   axiomatization_block -> AXIOMATIZATION vars
Rule 144   axiomatization_block -> AXIOMATIZATION WHERE axiomatization
Rule 145   axiomatization_block -> AXIOMATIZATION vars WHERE axiomatization
Rule 146   axiomatization -> axiomatization_header spec_prems for_fixes
Rule 147   axiomatization_header -> thmdecl ID
Rule 148   axiomatization_header -> thmdecl QUOTED_STRING
Rule 149   axiomatization_header -> thmdecl ID AND axiomatization_header
Rule 150   axiomatization_header -> thmdecl QUOTED_STRING AND axiomatization_header
Rule 151   locale_expr -> instance_list for_fixes
Rule 152   instance_list -> instance
Rule 153   instance_list -> instance PLUS instance_list
Rule 154   instance -> ID
Rule 155   instance -> ID pos_insts
Rule 156   instance -> ID name_insts
Rule 157   instance -> qualifier COLON ID pos_insts
Rule 158   instance -> qualifier COLON ID name_insts
Rule 159   qualifier -> ID
Rule 160   qualifier -> QUOTED_STRING
Rule 161   qualifier -> ID QUESTION_MARK
Rule 162   qualifier -> QUOTED_STRING QUESTION_MARK
Rule 163   pos_insts -> UNDERSCORE
Rule 164   pos_insts -> ID
Rule 165   pos_insts -> QUOTED_STRING
Rule 166   pos_insts -> UNDERSCORE pos_insts
Rule 167   pos_insts -> ID pos_insts
Rule 168   pos_insts -> QUOTED_STRING pos_insts
Rule 169   name_insts -> WHERE name_insts_list
Rule 170   name_insts_list -> ID EQUALS ID
Rule 171   name_insts_list -> ID EQUALS QUOTED_STRING
Rule 172   name_insts_list -> ID EQUALS ID name_insts_list
Rule 173   name_insts_list -> ID EQUALS QUOTED_STRING name_insts_list
Rule 174   locale_block -> LOCALE ID
Rule 175   locale_block -> LOCALE ID BEGIN content END
Rule 176   locale_block -> LOCALE ID comment_block BEGIN content END
Rule 177   locale_block -> LOCALE ID EQ locale
Rule 178   locale_block -> LOCALE ID EQ locale BEGIN content END
Rule 179   locale -> context_elem_list
Rule 180   locale -> opening
Rule 181   locale -> opening PLUS context_elem_list
Rule 182   locale -> locale_expr
Rule 183   locale -> locale opening
Rule 184   locale -> locale opening PLUS context_elem_list
Rule 185   locale -> locale_expr opening PLUS context_elem_list
Rule 186   context_elem_list -> context_elem
Rule 187   context_elem_list -> context_elem context_elem_list
Rule 188   context_elem -> FIXES vars
Rule 189   context_elem -> CONSTRAINS name_type_list
Rule 190   context_elem -> ASSUMES prop_list
Rule 191   context_elem -> DEFINES defines_list
Rule 192   context_elem -> NOTES notes_list
Rule 193   name_type_list -> ID COLON COLON ID
Rule 194   name_type_list -> ID COLON COLON ID AND name_type_list
Rule 195   defines_list -> defines_list_element
Rule 196   defines_list -> defines_list_element AND defines_list
Rule 197   defines_list_element -> ID
Rule 198   defines_list_element -> QUOTED_STRING
Rule 199   defines_list_element -> thmdecl ID
Rule 200   defines_list_element -> thmdecl QUOTED_STRING
Rule 201   defines_list_element -> ID prop_pat
Rule 202   defines_list_element -> QUOTED_STRING prop_pat
Rule 203   defines_list_element -> thmdecl ID prop_pat
Rule 204   defines_list_element -> thmdecl QUOTED_STRING prop_pat
Rule 205   notes_list -> notes_list_element
Rule 206   notes_list -> notes_list_element AND notes_list
Rule 207   notes_list_element -> thmdef thms
Rule 208   notes_list_element -> thms
Rule 209   typedecl -> TYPEDECL typespec
Rule 210   typedecl -> TYPEDECL typespec mixfix
Rule 211   type_synonym -> TYPE_SYNONYM typespec EQUALS ID
Rule 212   type_synonym -> TYPE_SYNONYM typespec EQUALS ID mixfix
Rule 213   mixfix -> LEFT_PAREN template RIGHT_PAREN
Rule 214   mixfix -> LEFT_PAREN template prios RIGHT_PAREN
Rule 215   mixfix -> LEFT_PAREN template NAT RIGHT_PAREN
Rule 216   mixfix -> LEFT_PAREN template prios NAT RIGHT_PAREN
Rule 217   mixfix -> LEFT_PAREN INFIX template NAT RIGHT_PAREN
Rule 218   mixfix -> LEFT_PAREN INFIXL template NAT RIGHT_PAREN
Rule 219   mixfix -> LEFT_PAREN INFIXR template NAT RIGHT_PAREN
Rule 220   mixfix -> BINDER template NAT RIGHT_PAREN
Rule 221   mixfix -> BINDER template prio NAT RIGHT_PAREN
Rule 222   mixfix -> STRUCTURE
Rule 223   template -> QUOTED_STRING
Rule 224   template -> CARTOUCHE
Rule 225   prios -> LEFT_BRACKET nat_list RIGHT_BRACKET
Rule 226   prio -> LEFT_BRACKET NAT RIGHT_BRACKET
Rule 227   nat_list -> NAT
Rule 228   nat_list -> NAT COMMA nat_list
Rule 229   primrec_block -> PRIMREC specification
Rule 230   fun_block -> FUN specification
Rule 231   fun_block -> FUNCTION specification
Rule 232   fun_block -> FUN opts specification
Rule 233   fun_block -> FUNCTION opts specification
Rule 234   opts -> LEFT_PAREN opt_list RIGHT_PAREN
Rule 235   opt_list -> sequential
Rule 236   opt_list -> domintros
Rule 237   opt_list -> sequential COMMA opt_list
Rule 238   opt_list -> domintros COMMA opt_list
Rule 239   sequential -> ID
Rule 240   sequential -> QUOTED_STRING
Rule 241   domintros -> ID
Rule 242   domintros -> QUOTED_STRING
Rule 243   section_block -> SECTION CARTOUCHE
Rule 244   text_block -> TEXT CARTOUCHE
Rule 245   comment_block -> COMMENT_CARTOUCHE CARTOUCHE
Rule 246   symbol -> BANG
Rule 247   symbol -> STAR
Rule 248   symbol -> BACKSLASH
Rule 249   symbol -> LT
Rule 250   symbol -> HAT
Rule 251   symbol -> GT
Rule 252   symbol -> PLUS
Rule 253   empty -> <empty>

Terminals, with rules where they appear

ALTSTRING            : 
AND                  : 49 84 98 139 149 150 194 196 206
APPLY                : 57 58 59 60 61
ASSMS                : 68 69 70 71
ASSUME               : 
ASSUMES              : 48 190
AXIOMATIZATION       : 142 143 144 145
BACKSLASH            : 248
BANG                 : 246
BEGIN                : 4 175 176 178
BINDER               : 220 221
BY                   : 62 63 64 65
CARTOUCHE            : 224 243 244 245
COLON                : 36 44 52 79 79 86 86 87 87 88 88 89 89 90 90 91 91 93 93 94 94 95 95 96 96 106 157 158 193 193 194 194
COMMA                : 25 27 70 81 119 228 237 238
COMMENT_CARTOUCHE    : 245
CONSTRAINS           : 189
DASH                 : 59 71
DEFINES              : 191
DONE                 : 66
DOT                  : 41 42
END                  : 4 175 176 178
EQ                   : 107 177 178
EQUALS               : 21 170 171 172 173 211 212
FIXES                : 188
FOR                  : 128
FUN                  : 230 232
FUNCTION             : 231 233
GREEK                : 87 89 94 96
GT                   : 251
HAT                  : 250
HAVE                 : 
ID                   : 4 7 9 22 32 33 34 35 36 39 40 41 41 42 42 44 76 77 78 79 79 86 86 87 88 90 92 93 93 94 95 97 98 99 100 104 108 109 113 114 120 124 131 133 137 138 139 147 149 154 155 156 157 158 159 161 164 167 170 170 171 172 172 173 174 175 176 177 178 193 193 194 194 197 199 201 203 211 212 239 241
IF                   : 136
IMPORTS              : 5
INFIX                : 217
INFIXL               : 218
INFIXR               : 219
IS                   : 104 105
LATIN                : 
LEFT_BRACKET         : 116 126 225 226
LEFT_PAREN           : 28 29 34 35 40 42 58 61 63 65 69 70 71 82 101 125 213 214 215 216 217 218 219 234
LEMMA                : 44
LETTER               : 
LOCALE               : 174 175 176 177 178
LONG_IDENT           : 
LT                   : 249
METHOD               : 21
NAT                  : 40 42 52 69 70 70 71 71 215 216 217 218 219 220 221 226 227 228
NOTES                : 192
OPENING              : 141
OUTER_COMMENT        : 
PLUS                 : 30 153 181 184 185 252
PRIMREC              : 229
PROOF                : 45
QUESTION_MARK        : 31 161 162
QUOTED_STRING        : 8 43 51 52 53 75 88 89 91 95 96 105 132 134 148 150 160 162 165 168 171 173 198 200 202 204 223 240 242
RIGHT_BRACKET        : 116 126 225 226
RIGHT_PAREN          : 28 29 34 35 40 42 58 61 63 65 69 70 71 82 101 125 213 214 215 216 217 218 219 220 221 234
SECTION              : 243
SEMICOLON            : 26
SHORT_IDENT          : 
SHOW                 : 
SHOWS                : 53
SORRY                : 67
STAR                 : 247
STRING               : 
STRUCTURE            : 222
SUBGOAL              : 75
SUBSCRIPT            : 
SYM_FLOAT            : 
SYM_IDENT            : 
TERM_VAR             : 
TEXT                 : 244
THEN                 : 
THEORY               : 4
TYPEDECL             : 209 210
TYPE_IDENT           : 
TYPE_SYNONYM         : 211 212
TYPE_VAR             : 
UNDERSCORE           : 163 166
USING                : 59 60 61 64 65
VERBATIM             : 
WHERE                : 140 144 145 169
error                : 

Nonterminals, with rules where they appear

apply_block          : 45 46 54 55 75
arg                  : 122 123
args                 : 120 123 125 126
assumes_block        : 44
assumption           : 49 50
assumptions_list     : 48 49
attribute            : 118 119
attributes           : 108 110 114 115
attributes_list      : 116 119
axiomatization       : 144 145
axiomatization_block : 12
axiomatization_header : 146 149 150
comment_block        : 176
content              : 4 10 175 176 178
context_elem         : 186 187
context_elem_list    : 179 181 184 185 187
defines_list         : 191 196
defines_list_element : 195 196
domintros            : 236 238
empty                : 6 11 38 47 56 72 117 121 127 135
for_fixes            : 131 132 133 134 146 151
fun_block            : 13
import_list          : 5 7 8
imports_opt          : 4
instance             : 152 153
instance_list        : 151 153
instruction          : 21 25 26 27 28 29 57 58 60 61 62 63 64 65
instruction_modifier : 24 25 29 35
lemma_block          : 14
lemma_proof_block    : 44
locale               : 177 178 183 184
locale_block         : 15
locale_expr          : 182 185
method_arg           : 36 37
method_args          : 33 34 35 36 37
method_block         : 16
method_name          : 21
mixfix               : 92 93 94 95 96 210 212
multi_specs          : 130 140
name_insts           : 156 158
name_insts_list      : 169 172 173
name_type_list       : 189 194
names                : 85 90 91 98 100
names_list           : 141
nat_list             : 225 228
notes_list           : 192 206
notes_list_element   : 205 206
opening              : 180 181 183 184 185
opt_list             : 234 237 238
opts                 : 232 233
pos_insts            : 155 157 166 167 168
primrec_block        : 
prio                 : 221
prios                : 214 216
prop_list            : 136 138 139 190
prop_pat             : 201 202 203 204
prop_pat_term        : 102 103
prop_pat_terms       : 101 103
qualifier            : 157 158
section_block        : 2 17
sequential           : 235 237
shows_clause         : 44
single_apply         : 54
single_instruction   : 23 24 25 26 27
spec_prems           : 131 132 133 134 146
specification        : 229 230 231 232 233
statement            : 10
structured_spec      : 129 130
subgoal              : 55 73 74
subgoals             : 73
symbol               : 
template             : 213 214 215 216 217 218 219 220 221
text_block           : 3 18
theory               : 1
theory_file          : 2 3 0
thm                  : 111 112
thmbind              : 106 107
thmdecl              : 133 134 147 148 149 150 199 200 203 204
thmdef               : 207
thms                 : 112 207 208
type_synonym         : 19
typearg              : 80 81
typeargs             : 77 81 82
typedecl             : 20
typespec             : 209 210 211 212
using_block          : 59 60 61 64 65 68 69 70 71
var                  : 83 84
vars                 : 84 128 140 143 145 188

Parsing method: LALR

state 0

    (0) S' -> . theory_file
    (1) theory_file -> . theory
    (2) theory_file -> . section_block theory_file
    (3) theory_file -> . text_block theory_file
    (4) theory -> . THEORY ID imports_opt BEGIN content END
    (243) section_block -> . SECTION CARTOUCHE
    (244) text_block -> . TEXT CARTOUCHE

    THEORY          shift and go to state 5
    SECTION         shift and go to state 6
    TEXT            shift and go to state 7

    theory_file                    shift and go to state 1
    theory                         shift and go to state 2
    section_block                  shift and go to state 3
    text_block                     shift and go to state 4

state 1

    (0) S' -> theory_file .



state 2

    (1) theory_file -> theory .

    $end            reduce using rule 1 (theory_file -> theory .)


state 3

    (2) theory_file -> section_block . theory_file
    (1) theory_file -> . theory
    (2) theory_file -> . section_block theory_file
    (3) theory_file -> . text_block theory_file
    (4) theory -> . THEORY ID imports_opt BEGIN content END
    (243) section_block -> . SECTION CARTOUCHE
    (244) text_block -> . TEXT CARTOUCHE

    THEORY          shift and go to state 5
    SECTION         shift and go to state 6
    TEXT            shift and go to state 7

    section_block                  shift and go to state 3
    theory_file                    shift and go to state 8
    theory                         shift and go to state 2
    text_block                     shift and go to state 4

state 4

    (3) theory_file -> text_block . theory_file
    (1) theory_file -> . theory
    (2) theory_file -> . section_block theory_file
    (3) theory_file -> . text_block theory_file
    (4) theory -> . THEORY ID imports_opt BEGIN content END
    (243) section_block -> . SECTION CARTOUCHE
    (244) text_block -> . TEXT CARTOUCHE

    THEORY          shift and go to state 5
    SECTION         shift and go to state 6
    TEXT            shift and go to state 7

    text_block                     shift and go to state 4
    theory_file                    shift and go to state 9
    theory                         shift and go to state 2
    section_block                  shift and go to state 3

state 5

    (4) theory -> THEORY . ID imports_opt BEGIN content END

    ID              shift and go to state 10


state 6

    (243) section_block -> SECTION . CARTOUCHE

    CARTOUCHE       shift and go to state 11


state 7

    (244) text_block -> TEXT . CARTOUCHE

    CARTOUCHE       shift and go to state 12


state 8

    (2) theory_file -> section_block theory_file .

    $end            reduce using rule 2 (theory_file -> section_block theory_file .)


state 9

    (3) theory_file -> text_block theory_file .

    $end            reduce using rule 3 (theory_file -> text_block theory_file .)


state 10

    (4) theory -> THEORY ID . imports_opt BEGIN content END
    (5) imports_opt -> . IMPORTS import_list
    (6) imports_opt -> . empty
    (253) empty -> .

    IMPORTS         shift and go to state 14
    BEGIN           reduce using rule 253 (empty -> .)

    imports_opt                    shift and go to state 13
    empty                          shift and go to state 15

state 11

    (243) section_block -> SECTION CARTOUCHE .

    THEORY          reduce using rule 243 (section_block -> SECTION CARTOUCHE .)
    SECTION         reduce using rule 243 (section_block -> SECTION CARTOUCHE .)
    TEXT            reduce using rule 243 (section_block -> SECTION CARTOUCHE .)
    AXIOMATIZATION  reduce using rule 243 (section_block -> SECTION CARTOUCHE .)
    FUN             reduce using rule 243 (section_block -> SECTION CARTOUCHE .)
    FUNCTION        reduce using rule 243 (section_block -> SECTION CARTOUCHE .)
    LEMMA           reduce using rule 243 (section_block -> SECTION CARTOUCHE .)
    LOCALE          reduce using rule 243 (section_block -> SECTION CARTOUCHE .)
    METHOD          reduce using rule 243 (section_block -> SECTION CARTOUCHE .)
    TYPE_SYNONYM    reduce using rule 243 (section_block -> SECTION CARTOUCHE .)
    TYPEDECL        reduce using rule 243 (section_block -> SECTION CARTOUCHE .)
    END             reduce using rule 243 (section_block -> SECTION CARTOUCHE .)


state 12

    (244) text_block -> TEXT CARTOUCHE .

    THEORY          reduce using rule 244 (text_block -> TEXT CARTOUCHE .)
    SECTION         reduce using rule 244 (text_block -> TEXT CARTOUCHE .)
    TEXT            reduce using rule 244 (text_block -> TEXT CARTOUCHE .)
    AXIOMATIZATION  reduce using rule 244 (text_block -> TEXT CARTOUCHE .)
    FUN             reduce using rule 244 (text_block -> TEXT CARTOUCHE .)
    FUNCTION        reduce using rule 244 (text_block -> TEXT CARTOUCHE .)
    LEMMA           reduce using rule 244 (text_block -> TEXT CARTOUCHE .)
    LOCALE          reduce using rule 244 (text_block -> TEXT CARTOUCHE .)
    METHOD          reduce using rule 244 (text_block -> TEXT CARTOUCHE .)
    TYPE_SYNONYM    reduce using rule 244 (text_block -> TEXT CARTOUCHE .)
    TYPEDECL        reduce using rule 244 (text_block -> TEXT CARTOUCHE .)
    END             reduce using rule 244 (text_block -> TEXT CARTOUCHE .)


state 13

    (4) theory -> THEORY ID imports_opt . BEGIN content END

    BEGIN           shift and go to state 16


state 14

    (5) imports_opt -> IMPORTS . import_list
    (7) import_list -> . ID import_list
    (8) import_list -> . QUOTED_STRING import_list
    (9) import_list -> . ID

    ID              shift and go to state 18
    QUOTED_STRING   shift and go to state 19

    import_list                    shift and go to state 17

state 15

    (6) imports_opt -> empty .

    BEGIN           reduce using rule 6 (imports_opt -> empty .)


state 16

    (4) theory -> THEORY ID imports_opt BEGIN . content END
    (10) content -> . statement content
    (11) content -> . empty
    (12) statement -> . axiomatization_block
    (13) statement -> . fun_block
    (14) statement -> . lemma_block
    (15) statement -> . locale_block
    (16) statement -> . method_block
    (17) statement -> . section_block
    (18) statement -> . text_block
    (19) statement -> . type_synonym
    (20) statement -> . typedecl
    (253) empty -> .
    (142) axiomatization_block -> . AXIOMATIZATION
    (143) axiomatization_block -> . AXIOMATIZATION vars
    (144) axiomatization_block -> . AXIOMATIZATION WHERE axiomatization
    (145) axiomatization_block -> . AXIOMATIZATION vars WHERE axiomatization
    (230) fun_block -> . FUN specification
    (231) fun_block -> . FUNCTION specification
    (232) fun_block -> . FUN opts specification
    (233) fun_block -> . FUNCTION opts specification
    (44) lemma_block -> . LEMMA ID COLON assumes_block shows_clause lemma_proof_block
    (174) locale_block -> . LOCALE ID
    (175) locale_block -> . LOCALE ID BEGIN content END
    (176) locale_block -> . LOCALE ID comment_block BEGIN content END
    (177) locale_block -> . LOCALE ID EQ locale
    (178) locale_block -> . LOCALE ID EQ locale BEGIN content END
    (21) method_block -> . METHOD method_name EQUALS instruction
    (243) section_block -> . SECTION CARTOUCHE
    (244) text_block -> . TEXT CARTOUCHE
    (211) type_synonym -> . TYPE_SYNONYM typespec EQUALS ID
    (212) type_synonym -> . TYPE_SYNONYM typespec EQUALS ID mixfix
    (209) typedecl -> . TYPEDECL typespec
    (210) typedecl -> . TYPEDECL typespec mixfix

    END             reduce using rule 253 (empty -> .)
    AXIOMATIZATION  shift and go to state 32
    FUN             shift and go to state 33
    FUNCTION        shift and go to state 34
    LEMMA           shift and go to state 35
    LOCALE          shift and go to state 36
    METHOD          shift and go to state 37
    SECTION         shift and go to state 6
    TEXT            shift and go to state 7
    TYPE_SYNONYM    shift and go to state 38
    TYPEDECL        shift and go to state 39

    content                        shift and go to state 20
    statement                      shift and go to state 21
    empty                          shift and go to state 22
    axiomatization_block           shift and go to state 23
    fun_block                      shift and go to state 24
    lemma_block                    shift and go to state 25
    locale_block                   shift and go to state 26
    method_block                   shift and go to state 27
    section_block                  shift and go to state 28
    text_block                     shift and go to state 29
    type_synonym                   shift and go to state 30
    typedecl                       shift and go to state 31

state 17

    (5) imports_opt -> IMPORTS import_list .

    BEGIN           reduce using rule 5 (imports_opt -> IMPORTS import_list .)


state 18

    (7) import_list -> ID . import_list
    (9) import_list -> ID .
    (7) import_list -> . ID import_list
    (8) import_list -> . QUOTED_STRING import_list
    (9) import_list -> . ID

    BEGIN           reduce using rule 9 (import_list -> ID .)
    ID              shift and go to state 18
    QUOTED_STRING   shift and go to state 19

    import_list                    shift and go to state 40

state 19

    (8) import_list -> QUOTED_STRING . import_list
    (7) import_list -> . ID import_list
    (8) import_list -> . QUOTED_STRING import_list
    (9) import_list -> . ID

    ID              shift and go to state 18
    QUOTED_STRING   shift and go to state 19

    import_list                    shift and go to state 41

state 20

    (4) theory -> THEORY ID imports_opt BEGIN content . END

    END             shift and go to state 42


state 21

    (10) content -> statement . content
    (10) content -> . statement content
    (11) content -> . empty
    (12) statement -> . axiomatization_block
    (13) statement -> . fun_block
    (14) statement -> . lemma_block
    (15) statement -> . locale_block
    (16) statement -> . method_block
    (17) statement -> . section_block
    (18) statement -> . text_block
    (19) statement -> . type_synonym
    (20) statement -> . typedecl
    (253) empty -> .
    (142) axiomatization_block -> . AXIOMATIZATION
    (143) axiomatization_block -> . AXIOMATIZATION vars
    (144) axiomatization_block -> . AXIOMATIZATION WHERE axiomatization
    (145) axiomatization_block -> . AXIOMATIZATION vars WHERE axiomatization
    (230) fun_block -> . FUN specification
    (231) fun_block -> . FUNCTION specification
    (232) fun_block -> . FUN opts specification
    (233) fun_block -> . FUNCTION opts specification
    (44) lemma_block -> . LEMMA ID COLON assumes_block shows_clause lemma_proof_block
    (174) locale_block -> . LOCALE ID
    (175) locale_block -> . LOCALE ID BEGIN content END
    (176) locale_block -> . LOCALE ID comment_block BEGIN content END
    (177) locale_block -> . LOCALE ID EQ locale
    (178) locale_block -> . LOCALE ID EQ locale BEGIN content END
    (21) method_block -> . METHOD method_name EQUALS instruction
    (243) section_block -> . SECTION CARTOUCHE
    (244) text_block -> . TEXT CARTOUCHE
    (211) type_synonym -> . TYPE_SYNONYM typespec EQUALS ID
    (212) type_synonym -> . TYPE_SYNONYM typespec EQUALS ID mixfix
    (209) typedecl -> . TYPEDECL typespec
    (210) typedecl -> . TYPEDECL typespec mixfix

    END             reduce using rule 253 (empty -> .)
    AXIOMATIZATION  shift and go to state 32
    FUN             shift and go to state 33
    FUNCTION        shift and go to state 34
    LEMMA           shift and go to state 35
    LOCALE          shift and go to state 36
    METHOD          shift and go to state 37
    SECTION         shift and go to state 6
    TEXT            shift and go to state 7
    TYPE_SYNONYM    shift and go to state 38
    TYPEDECL        shift and go to state 39

    statement                      shift and go to state 21
    content                        shift and go to state 43
    empty                          shift and go to state 22
    axiomatization_block           shift and go to state 23
    fun_block                      shift and go to state 24
    lemma_block                    shift and go to state 25
    locale_block                   shift and go to state 26
    method_block                   shift and go to state 27
    section_block                  shift and go to state 28
    text_block                     shift and go to state 29
    type_synonym                   shift and go to state 30
    typedecl                       shift and go to state 31

state 22

    (11) content -> empty .

    END             reduce using rule 11 (content -> empty .)


state 23

    (12) statement -> axiomatization_block .

    AXIOMATIZATION  reduce using rule 12 (statement -> axiomatization_block .)
    FUN             reduce using rule 12 (statement -> axiomatization_block .)
    FUNCTION        reduce using rule 12 (statement -> axiomatization_block .)
    LEMMA           reduce using rule 12 (statement -> axiomatization_block .)
    LOCALE          reduce using rule 12 (statement -> axiomatization_block .)
    METHOD          reduce using rule 12 (statement -> axiomatization_block .)
    SECTION         reduce using rule 12 (statement -> axiomatization_block .)
    TEXT            reduce using rule 12 (statement -> axiomatization_block .)
    TYPE_SYNONYM    reduce using rule 12 (statement -> axiomatization_block .)
    TYPEDECL        reduce using rule 12 (statement -> axiomatization_block .)
    END             reduce using rule 12 (statement -> axiomatization_block .)


state 24

    (13) statement -> fun_block .

    AXIOMATIZATION  reduce using rule 13 (statement -> fun_block .)
    FUN             reduce using rule 13 (statement -> fun_block .)
    FUNCTION        reduce using rule 13 (statement -> fun_block .)
    LEMMA           reduce using rule 13 (statement -> fun_block .)
    LOCALE          reduce using rule 13 (statement -> fun_block .)
    METHOD          reduce using rule 13 (statement -> fun_block .)
    SECTION         reduce using rule 13 (statement -> fun_block .)
    TEXT            reduce using rule 13 (statement -> fun_block .)
    TYPE_SYNONYM    reduce using rule 13 (statement -> fun_block .)
    TYPEDECL        reduce using rule 13 (statement -> fun_block .)
    END             reduce using rule 13 (statement -> fun_block .)


state 25

    (14) statement -> lemma_block .

    AXIOMATIZATION  reduce using rule 14 (statement -> lemma_block .)
    FUN             reduce using rule 14 (statement -> lemma_block .)
    FUNCTION        reduce using rule 14 (statement -> lemma_block .)
    LEMMA           reduce using rule 14 (statement -> lemma_block .)
    LOCALE          reduce using rule 14 (statement -> lemma_block .)
    METHOD          reduce using rule 14 (statement -> lemma_block .)
    SECTION         reduce using rule 14 (statement -> lemma_block .)
    TEXT            reduce using rule 14 (statement -> lemma_block .)
    TYPE_SYNONYM    reduce using rule 14 (statement -> lemma_block .)
    TYPEDECL        reduce using rule 14 (statement -> lemma_block .)
    END             reduce using rule 14 (statement -> lemma_block .)


state 26

    (15) statement -> locale_block .

    AXIOMATIZATION  reduce using rule 15 (statement -> locale_block .)
    FUN             reduce using rule 15 (statement -> locale_block .)
    FUNCTION        reduce using rule 15 (statement -> locale_block .)
    LEMMA           reduce using rule 15 (statement -> locale_block .)
    LOCALE          reduce using rule 15 (statement -> locale_block .)
    METHOD          reduce using rule 15 (statement -> locale_block .)
    SECTION         reduce using rule 15 (statement -> locale_block .)
    TEXT            reduce using rule 15 (statement -> locale_block .)
    TYPE_SYNONYM    reduce using rule 15 (statement -> locale_block .)
    TYPEDECL        reduce using rule 15 (statement -> locale_block .)
    END             reduce using rule 15 (statement -> locale_block .)


state 27

    (16) statement -> method_block .

    AXIOMATIZATION  reduce using rule 16 (statement -> method_block .)
    FUN             reduce using rule 16 (statement -> method_block .)
    FUNCTION        reduce using rule 16 (statement -> method_block .)
    LEMMA           reduce using rule 16 (statement -> method_block .)
    LOCALE          reduce using rule 16 (statement -> method_block .)
    METHOD          reduce using rule 16 (statement -> method_block .)
    SECTION         reduce using rule 16 (statement -> method_block .)
    TEXT            reduce using rule 16 (statement -> method_block .)
    TYPE_SYNONYM    reduce using rule 16 (statement -> method_block .)
    TYPEDECL        reduce using rule 16 (statement -> method_block .)
    END             reduce using rule 16 (statement -> method_block .)


state 28

    (17) statement -> section_block .

    AXIOMATIZATION  reduce using rule 17 (statement -> section_block .)
    FUN             reduce using rule 17 (statement -> section_block .)
    FUNCTION        reduce using rule 17 (statement -> section_block .)
    LEMMA           reduce using rule 17 (statement -> section_block .)
    LOCALE          reduce using rule 17 (statement -> section_block .)
    METHOD          reduce using rule 17 (statement -> section_block .)
    SECTION         reduce using rule 17 (statement -> section_block .)
    TEXT            reduce using rule 17 (statement -> section_block .)
    TYPE_SYNONYM    reduce using rule 17 (statement -> section_block .)
    TYPEDECL        reduce using rule 17 (statement -> section_block .)
    END             reduce using rule 17 (statement -> section_block .)


state 29

    (18) statement -> text_block .

    AXIOMATIZATION  reduce using rule 18 (statement -> text_block .)
    FUN             reduce using rule 18 (statement -> text_block .)
    FUNCTION        reduce using rule 18 (statement -> text_block .)
    LEMMA           reduce using rule 18 (statement -> text_block .)
    LOCALE          reduce using rule 18 (statement -> text_block .)
    METHOD          reduce using rule 18 (statement -> text_block .)
    SECTION         reduce using rule 18 (statement -> text_block .)
    TEXT            reduce using rule 18 (statement -> text_block .)
    TYPE_SYNONYM    reduce using rule 18 (statement -> text_block .)
    TYPEDECL        reduce using rule 18 (statement -> text_block .)
    END             reduce using rule 18 (statement -> text_block .)


state 30

    (19) statement -> type_synonym .

    AXIOMATIZATION  reduce using rule 19 (statement -> type_synonym .)
    FUN             reduce using rule 19 (statement -> type_synonym .)
    FUNCTION        reduce using rule 19 (statement -> type_synonym .)
    LEMMA           reduce using rule 19 (statement -> type_synonym .)
    LOCALE          reduce using rule 19 (statement -> type_synonym .)
    METHOD          reduce using rule 19 (statement -> type_synonym .)
    SECTION         reduce using rule 19 (statement -> type_synonym .)
    TEXT            reduce using rule 19 (statement -> type_synonym .)
    TYPE_SYNONYM    reduce using rule 19 (statement -> type_synonym .)
    TYPEDECL        reduce using rule 19 (statement -> type_synonym .)
    END             reduce using rule 19 (statement -> type_synonym .)


state 31

    (20) statement -> typedecl .

    AXIOMATIZATION  reduce using rule 20 (statement -> typedecl .)
    FUN             reduce using rule 20 (statement -> typedecl .)
    FUNCTION        reduce using rule 20 (statement -> typedecl .)
    LEMMA           reduce using rule 20 (statement -> typedecl .)
    LOCALE          reduce using rule 20 (statement -> typedecl .)
    METHOD          reduce using rule 20 (statement -> typedecl .)
    SECTION         reduce using rule 20 (statement -> typedecl .)
    TEXT            reduce using rule 20 (statement -> typedecl .)
    TYPE_SYNONYM    reduce using rule 20 (statement -> typedecl .)
    TYPEDECL        reduce using rule 20 (statement -> typedecl .)
    END             reduce using rule 20 (statement -> typedecl .)


state 32

    (142) axiomatization_block -> AXIOMATIZATION .
    (143) axiomatization_block -> AXIOMATIZATION . vars
    (144) axiomatization_block -> AXIOMATIZATION . WHERE axiomatization
    (145) axiomatization_block -> AXIOMATIZATION . vars WHERE axiomatization
    (83) vars -> . var
    (84) vars -> . var AND vars
    (85) var -> . names
    (86) var -> . ID COLON COLON ID
    (87) var -> . GREEK COLON COLON ID
    (88) var -> . ID COLON COLON QUOTED_STRING
    (89) var -> . GREEK COLON COLON QUOTED_STRING
    (90) var -> . names COLON COLON ID
    (91) var -> . names COLON COLON QUOTED_STRING
    (92) var -> . ID mixfix
    (93) var -> . ID COLON COLON ID mixfix
    (94) var -> . GREEK COLON COLON ID mixfix
    (95) var -> . ID COLON COLON QUOTED_STRING mixfix
    (96) var -> . GREEK COLON COLON QUOTED_STRING mixfix
    (97) names -> . ID
    (98) names -> . ID AND names

    AXIOMATIZATION  reduce using rule 142 (axiomatization_block -> AXIOMATIZATION .)
    FUN             reduce using rule 142 (axiomatization_block -> AXIOMATIZATION .)
    FUNCTION        reduce using rule 142 (axiomatization_block -> AXIOMATIZATION .)
    LEMMA           reduce using rule 142 (axiomatization_block -> AXIOMATIZATION .)
    LOCALE          reduce using rule 142 (axiomatization_block -> AXIOMATIZATION .)
    METHOD          reduce using rule 142 (axiomatization_block -> AXIOMATIZATION .)
    SECTION         reduce using rule 142 (axiomatization_block -> AXIOMATIZATION .)
    TEXT            reduce using rule 142 (axiomatization_block -> AXIOMATIZATION .)
    TYPE_SYNONYM    reduce using rule 142 (axiomatization_block -> AXIOMATIZATION .)
    TYPEDECL        reduce using rule 142 (axiomatization_block -> AXIOMATIZATION .)
    END             reduce using rule 142 (axiomatization_block -> AXIOMATIZATION .)
    WHERE           shift and go to state 45
    ID              shift and go to state 48
    GREEK           shift and go to state 49

    vars                           shift and go to state 44
    var                            shift and go to state 46
    names                          shift and go to state 47

state 33

    (230) fun_block -> FUN . specification
    (232) fun_block -> FUN . opts specification
    (140) specification -> . vars WHERE multi_specs
    (234) opts -> . LEFT_PAREN opt_list RIGHT_PAREN
    (83) vars -> . var
    (84) vars -> . var AND vars
    (85) var -> . names
    (86) var -> . ID COLON COLON ID
    (87) var -> . GREEK COLON COLON ID
    (88) var -> . ID COLON COLON QUOTED_STRING
    (89) var -> . GREEK COLON COLON QUOTED_STRING
    (90) var -> . names COLON COLON ID
    (91) var -> . names COLON COLON QUOTED_STRING
    (92) var -> . ID mixfix
    (93) var -> . ID COLON COLON ID mixfix
    (94) var -> . GREEK COLON COLON ID mixfix
    (95) var -> . ID COLON COLON QUOTED_STRING mixfix
    (96) var -> . GREEK COLON COLON QUOTED_STRING mixfix
    (97) names -> . ID
    (98) names -> . ID AND names

    LEFT_PAREN      shift and go to state 53
    ID              shift and go to state 48
    GREEK           shift and go to state 49

    specification                  shift and go to state 50
    opts                           shift and go to state 51
    vars                           shift and go to state 52
    var                            shift and go to state 46
    names                          shift and go to state 47

state 34

    (231) fun_block -> FUNCTION . specification
    (233) fun_block -> FUNCTION . opts specification
    (140) specification -> . vars WHERE multi_specs
    (234) opts -> . LEFT_PAREN opt_list RIGHT_PAREN
    (83) vars -> . var
    (84) vars -> . var AND vars
    (85) var -> . names
    (86) var -> . ID COLON COLON ID
    (87) var -> . GREEK COLON COLON ID
    (88) var -> . ID COLON COLON QUOTED_STRING
    (89) var -> . GREEK COLON COLON QUOTED_STRING
    (90) var -> . names COLON COLON ID
    (91) var -> . names COLON COLON QUOTED_STRING
    (92) var -> . ID mixfix
    (93) var -> . ID COLON COLON ID mixfix
    (94) var -> . GREEK COLON COLON ID mixfix
    (95) var -> . ID COLON COLON QUOTED_STRING mixfix
    (96) var -> . GREEK COLON COLON QUOTED_STRING mixfix
    (97) names -> . ID
    (98) names -> . ID AND names

    LEFT_PAREN      shift and go to state 53
    ID              shift and go to state 48
    GREEK           shift and go to state 49

    specification                  shift and go to state 54
    opts                           shift and go to state 55
    vars                           shift and go to state 52
    var                            shift and go to state 46
    names                          shift and go to state 47

state 35

    (44) lemma_block -> LEMMA . ID COLON assumes_block shows_clause lemma_proof_block

    ID              shift and go to state 56


state 36

    (174) locale_block -> LOCALE . ID
    (175) locale_block -> LOCALE . ID BEGIN content END
    (176) locale_block -> LOCALE . ID comment_block BEGIN content END
    (177) locale_block -> LOCALE . ID EQ locale
    (178) locale_block -> LOCALE . ID EQ locale BEGIN content END

    ID              shift and go to state 57


state 37

    (21) method_block -> METHOD . method_name EQUALS instruction
    (22) method_name -> . ID

    ID              shift and go to state 59

    method_name                    shift and go to state 58

state 38

    (211) type_synonym -> TYPE_SYNONYM . typespec EQUALS ID
    (212) type_synonym -> TYPE_SYNONYM . typespec EQUALS ID mixfix
    (76) typespec -> . ID
    (77) typespec -> . typeargs ID
    (80) typeargs -> . typearg
    (81) typeargs -> . typearg COMMA typeargs
    (82) typeargs -> . LEFT_PAREN typeargs RIGHT_PAREN
    (78) typearg -> . ID
    (79) typearg -> . ID COLON COLON ID

    ID              shift and go to state 61
    LEFT_PAREN      shift and go to state 64

    typespec                       shift and go to state 60
    typeargs                       shift and go to state 62
    typearg                        shift and go to state 63

state 39

    (209) typedecl -> TYPEDECL . typespec
    (210) typedecl -> TYPEDECL . typespec mixfix
    (76) typespec -> . ID
    (77) typespec -> . typeargs ID
    (80) typeargs -> . typearg
    (81) typeargs -> . typearg COMMA typeargs
    (82) typeargs -> . LEFT_PAREN typeargs RIGHT_PAREN
    (78) typearg -> . ID
    (79) typearg -> . ID COLON COLON ID

    ID              shift and go to state 61
    LEFT_PAREN      shift and go to state 64

    typespec                       shift and go to state 65
    typeargs                       shift and go to state 62
    typearg                        shift and go to state 63

state 40

    (7) import_list -> ID import_list .

    BEGIN           reduce using rule 7 (import_list -> ID import_list .)


state 41

    (8) import_list -> QUOTED_STRING import_list .

    BEGIN           reduce using rule 8 (import_list -> QUOTED_STRING import_list .)


state 42

    (4) theory -> THEORY ID imports_opt BEGIN content END .

    $end            reduce using rule 4 (theory -> THEORY ID imports_opt BEGIN content END .)


state 43

    (10) content -> statement content .

    END             reduce using rule 10 (content -> statement content .)


state 44

    (143) axiomatization_block -> AXIOMATIZATION vars .
    (145) axiomatization_block -> AXIOMATIZATION vars . WHERE axiomatization

    AXIOMATIZATION  reduce using rule 143 (axiomatization_block -> AXIOMATIZATION vars .)
    FUN             reduce using rule 143 (axiomatization_block -> AXIOMATIZATION vars .)
    FUNCTION        reduce using rule 143 (axiomatization_block -> AXIOMATIZATION vars .)
    LEMMA           reduce using rule 143 (axiomatization_block -> AXIOMATIZATION vars .)
    LOCALE          reduce using rule 143 (axiomatization_block -> AXIOMATIZATION vars .)
    METHOD          reduce using rule 143 (axiomatization_block -> AXIOMATIZATION vars .)
    SECTION         reduce using rule 143 (axiomatization_block -> AXIOMATIZATION vars .)
    TEXT            reduce using rule 143 (axiomatization_block -> AXIOMATIZATION vars .)
    TYPE_SYNONYM    reduce using rule 143 (axiomatization_block -> AXIOMATIZATION vars .)
    TYPEDECL        reduce using rule 143 (axiomatization_block -> AXIOMATIZATION vars .)
    END             reduce using rule 143 (axiomatization_block -> AXIOMATIZATION vars .)
    WHERE           shift and go to state 66


state 45

    (144) axiomatization_block -> AXIOMATIZATION WHERE . axiomatization
    (146) axiomatization -> . axiomatization_header spec_prems for_fixes
    (147) axiomatization_header -> . thmdecl ID
    (148) axiomatization_header -> . thmdecl QUOTED_STRING
    (149) axiomatization_header -> . thmdecl ID AND axiomatization_header
    (150) axiomatization_header -> . thmdecl QUOTED_STRING AND axiomatization_header
    (106) thmdecl -> . thmbind COLON
    (113) thmbind -> . ID
    (114) thmbind -> . ID attributes
    (115) thmbind -> . attributes
    (116) attributes -> . LEFT_BRACKET attributes_list RIGHT_BRACKET

    ID              shift and go to state 70
    LEFT_BRACKET    shift and go to state 73

    axiomatization                 shift and go to state 67
    axiomatization_header          shift and go to state 68
    thmdecl                        shift and go to state 69
    thmbind                        shift and go to state 71
    attributes                     shift and go to state 72

state 46

    (83) vars -> var .
    (84) vars -> var . AND vars

    WHERE           reduce using rule 83 (vars -> var .)
    AXIOMATIZATION  reduce using rule 83 (vars -> var .)
    FUN             reduce using rule 83 (vars -> var .)
    FUNCTION        reduce using rule 83 (vars -> var .)
    LEMMA           reduce using rule 83 (vars -> var .)
    LOCALE          reduce using rule 83 (vars -> var .)
    METHOD          reduce using rule 83 (vars -> var .)
    SECTION         reduce using rule 83 (vars -> var .)
    TEXT            reduce using rule 83 (vars -> var .)
    TYPE_SYNONYM    reduce using rule 83 (vars -> var .)
    TYPEDECL        reduce using rule 83 (vars -> var .)
    END             reduce using rule 83 (vars -> var .)
    FIXES           reduce using rule 83 (vars -> var .)
    CONSTRAINS      reduce using rule 83 (vars -> var .)
    ASSUMES         reduce using rule 83 (vars -> var .)
    DEFINES         reduce using rule 83 (vars -> var .)
    NOTES           reduce using rule 83 (vars -> var .)
    BEGIN           reduce using rule 83 (vars -> var .)
    OPENING         reduce using rule 83 (vars -> var .)
    ID              reduce using rule 83 (vars -> var .)
    QUOTED_STRING   reduce using rule 83 (vars -> var .)
    LEFT_BRACKET    reduce using rule 83 (vars -> var .)
    AND             shift and go to state 74


state 47

    (85) var -> names .
    (90) var -> names . COLON COLON ID
    (91) var -> names . COLON COLON QUOTED_STRING

    AND             reduce using rule 85 (var -> names .)
    WHERE           reduce using rule 85 (var -> names .)
    AXIOMATIZATION  reduce using rule 85 (var -> names .)
    FUN             reduce using rule 85 (var -> names .)
    FUNCTION        reduce using rule 85 (var -> names .)
    LEMMA           reduce using rule 85 (var -> names .)
    LOCALE          reduce using rule 85 (var -> names .)
    METHOD          reduce using rule 85 (var -> names .)
    SECTION         reduce using rule 85 (var -> names .)
    TEXT            reduce using rule 85 (var -> names .)
    TYPE_SYNONYM    reduce using rule 85 (var -> names .)
    TYPEDECL        reduce using rule 85 (var -> names .)
    END             reduce using rule 85 (var -> names .)
    FIXES           reduce using rule 85 (var -> names .)
    CONSTRAINS      reduce using rule 85 (var -> names .)
    ASSUMES         reduce using rule 85 (var -> names .)
    DEFINES         reduce using rule 85 (var -> names .)
    NOTES           reduce using rule 85 (var -> names .)
    BEGIN           reduce using rule 85 (var -> names .)
    OPENING         reduce using rule 85 (var -> names .)
    ID              reduce using rule 85 (var -> names .)
    QUOTED_STRING   reduce using rule 85 (var -> names .)
    LEFT_BRACKET    reduce using rule 85 (var -> names .)
    COLON           shift and go to state 75


state 48

    (86) var -> ID . COLON COLON ID
    (88) var -> ID . COLON COLON QUOTED_STRING
    (92) var -> ID . mixfix
    (93) var -> ID . COLON COLON ID mixfix
    (95) var -> ID . COLON COLON QUOTED_STRING mixfix
    (97) names -> ID .
    (98) names -> ID . AND names
    (213) mixfix -> . LEFT_PAREN template RIGHT_PAREN
    (214) mixfix -> . LEFT_PAREN template prios RIGHT_PAREN
    (215) mixfix -> . LEFT_PAREN template NAT RIGHT_PAREN
    (216) mixfix -> . LEFT_PAREN template prios NAT RIGHT_PAREN
    (217) mixfix -> . LEFT_PAREN INFIX template NAT RIGHT_PAREN
    (218) mixfix -> . LEFT_PAREN INFIXL template NAT RIGHT_PAREN
    (219) mixfix -> . LEFT_PAREN INFIXR template NAT RIGHT_PAREN
    (220) mixfix -> . BINDER template NAT RIGHT_PAREN
    (221) mixfix -> . BINDER template prio NAT RIGHT_PAREN
    (222) mixfix -> . STRUCTURE

  ! shift/reduce conflict for COLON resolved as shift
  ! shift/reduce conflict for AND resolved as shift
    COLON           shift and go to state 76
    WHERE           reduce using rule 97 (names -> ID .)
    AXIOMATIZATION  reduce using rule 97 (names -> ID .)
    FUN             reduce using rule 97 (names -> ID .)
    FUNCTION        reduce using rule 97 (names -> ID .)
    LEMMA           reduce using rule 97 (names -> ID .)
    LOCALE          reduce using rule 97 (names -> ID .)
    METHOD          reduce using rule 97 (names -> ID .)
    SECTION         reduce using rule 97 (names -> ID .)
    TEXT            reduce using rule 97 (names -> ID .)
    TYPE_SYNONYM    reduce using rule 97 (names -> ID .)
    TYPEDECL        reduce using rule 97 (names -> ID .)
    END             reduce using rule 97 (names -> ID .)
    FIXES           reduce using rule 97 (names -> ID .)
    CONSTRAINS      reduce using rule 97 (names -> ID .)
    ASSUMES         reduce using rule 97 (names -> ID .)
    DEFINES         reduce using rule 97 (names -> ID .)
    NOTES           reduce using rule 97 (names -> ID .)
    BEGIN           reduce using rule 97 (names -> ID .)
    OPENING         reduce using rule 97 (names -> ID .)
    ID              reduce using rule 97 (names -> ID .)
    QUOTED_STRING   reduce using rule 97 (names -> ID .)
    LEFT_BRACKET    reduce using rule 97 (names -> ID .)
    AND             shift and go to state 78
    LEFT_PAREN      shift and go to state 79
    BINDER          shift and go to state 80
    STRUCTURE       shift and go to state 81

  ! COLON           [ reduce using rule 97 (names -> ID .) ]
  ! AND             [ reduce using rule 97 (names -> ID .) ]

    mixfix                         shift and go to state 77

state 49

    (87) var -> GREEK . COLON COLON ID
    (89) var -> GREEK . COLON COLON QUOTED_STRING
    (94) var -> GREEK . COLON COLON ID mixfix
    (96) var -> GREEK . COLON COLON QUOTED_STRING mixfix

    COLON           shift and go to state 82


state 50

    (230) fun_block -> FUN specification .

    AXIOMATIZATION  reduce using rule 230 (fun_block -> FUN specification .)
    FUN             reduce using rule 230 (fun_block -> FUN specification .)
    FUNCTION        reduce using rule 230 (fun_block -> FUN specification .)
    LEMMA           reduce using rule 230 (fun_block -> FUN specification .)
    LOCALE          reduce using rule 230 (fun_block -> FUN specification .)
    METHOD          reduce using rule 230 (fun_block -> FUN specification .)
    SECTION         reduce using rule 230 (fun_block -> FUN specification .)
    TEXT            reduce using rule 230 (fun_block -> FUN specification .)
    TYPE_SYNONYM    reduce using rule 230 (fun_block -> FUN specification .)
    TYPEDECL        reduce using rule 230 (fun_block -> FUN specification .)
    END             reduce using rule 230 (fun_block -> FUN specification .)


state 51

    (232) fun_block -> FUN opts . specification
    (140) specification -> . vars WHERE multi_specs
    (83) vars -> . var
    (84) vars -> . var AND vars
    (85) var -> . names
    (86) var -> . ID COLON COLON ID
    (87) var -> . GREEK COLON COLON ID
    (88) var -> . ID COLON COLON QUOTED_STRING
    (89) var -> . GREEK COLON COLON QUOTED_STRING
    (90) var -> . names COLON COLON ID
    (91) var -> . names COLON COLON QUOTED_STRING
    (92) var -> . ID mixfix
    (93) var -> . ID COLON COLON ID mixfix
    (94) var -> . GREEK COLON COLON ID mixfix
    (95) var -> . ID COLON COLON QUOTED_STRING mixfix
    (96) var -> . GREEK COLON COLON QUOTED_STRING mixfix
    (97) names -> . ID
    (98) names -> . ID AND names

    ID              shift and go to state 48
    GREEK           shift and go to state 49

    specification                  shift and go to state 83
    vars                           shift and go to state 52
    var                            shift and go to state 46
    names                          shift and go to state 47

state 52

    (140) specification -> vars . WHERE multi_specs

    WHERE           shift and go to state 84


state 53

    (234) opts -> LEFT_PAREN . opt_list RIGHT_PAREN
    (235) opt_list -> . sequential
    (236) opt_list -> . domintros
    (237) opt_list -> . sequential COMMA opt_list
    (238) opt_list -> . domintros COMMA opt_list
    (239) sequential -> . ID
    (240) sequential -> . QUOTED_STRING
    (241) domintros -> . ID
    (242) domintros -> . QUOTED_STRING

    ID              shift and go to state 88
    QUOTED_STRING   shift and go to state 89

    opt_list                       shift and go to state 85
    sequential                     shift and go to state 86
    domintros                      shift and go to state 87

state 54

    (231) fun_block -> FUNCTION specification .

    AXIOMATIZATION  reduce using rule 231 (fun_block -> FUNCTION specification .)
    FUN             reduce using rule 231 (fun_block -> FUNCTION specification .)
    FUNCTION        reduce using rule 231 (fun_block -> FUNCTION specification .)
    LEMMA           reduce using rule 231 (fun_block -> FUNCTION specification .)
    LOCALE          reduce using rule 231 (fun_block -> FUNCTION specification .)
    METHOD          reduce using rule 231 (fun_block -> FUNCTION specification .)
    SECTION         reduce using rule 231 (fun_block -> FUNCTION specification .)
    TEXT            reduce using rule 231 (fun_block -> FUNCTION specification .)
    TYPE_SYNONYM    reduce using rule 231 (fun_block -> FUNCTION specification .)
    TYPEDECL        reduce using rule 231 (fun_block -> FUNCTION specification .)
    END             reduce using rule 231 (fun_block -> FUNCTION specification .)


state 55

    (233) fun_block -> FUNCTION opts . specification
    (140) specification -> . vars WHERE multi_specs
    (83) vars -> . var
    (84) vars -> . var AND vars
    (85) var -> . names
    (86) var -> . ID COLON COLON ID
    (87) var -> . GREEK COLON COLON ID
    (88) var -> . ID COLON COLON QUOTED_STRING
    (89) var -> . GREEK COLON COLON QUOTED_STRING
    (90) var -> . names COLON COLON ID
    (91) var -> . names COLON COLON QUOTED_STRING
    (92) var -> . ID mixfix
    (93) var -> . ID COLON COLON ID mixfix
    (94) var -> . GREEK COLON COLON ID mixfix
    (95) var -> . ID COLON COLON QUOTED_STRING mixfix
    (96) var -> . GREEK COLON COLON QUOTED_STRING mixfix
    (97) names -> . ID
    (98) names -> . ID AND names

    ID              shift and go to state 48
    GREEK           shift and go to state 49

    specification                  shift and go to state 90
    vars                           shift and go to state 52
    var                            shift and go to state 46
    names                          shift and go to state 47

state 56

    (44) lemma_block -> LEMMA ID . COLON assumes_block shows_clause lemma_proof_block

    COLON           shift and go to state 91


state 57

    (174) locale_block -> LOCALE ID .
    (175) locale_block -> LOCALE ID . BEGIN content END
    (176) locale_block -> LOCALE ID . comment_block BEGIN content END
    (177) locale_block -> LOCALE ID . EQ locale
    (178) locale_block -> LOCALE ID . EQ locale BEGIN content END
    (245) comment_block -> . COMMENT_CARTOUCHE CARTOUCHE

    AXIOMATIZATION  reduce using rule 174 (locale_block -> LOCALE ID .)
    FUN             reduce using rule 174 (locale_block -> LOCALE ID .)
    FUNCTION        reduce using rule 174 (locale_block -> LOCALE ID .)
    LEMMA           reduce using rule 174 (locale_block -> LOCALE ID .)
    LOCALE          reduce using rule 174 (locale_block -> LOCALE ID .)
    METHOD          reduce using rule 174 (locale_block -> LOCALE ID .)
    SECTION         reduce using rule 174 (locale_block -> LOCALE ID .)
    TEXT            reduce using rule 174 (locale_block -> LOCALE ID .)
    TYPE_SYNONYM    reduce using rule 174 (locale_block -> LOCALE ID .)
    TYPEDECL        reduce using rule 174 (locale_block -> LOCALE ID .)
    END             reduce using rule 174 (locale_block -> LOCALE ID .)
    BEGIN           shift and go to state 92
    EQ              shift and go to state 94
    COMMENT_CARTOUCHE shift and go to state 95

    comment_block                  shift and go to state 93

state 58

    (21) method_block -> METHOD method_name . EQUALS instruction

    EQUALS          shift and go to state 96


state 59

    (22) method_name -> ID .

    EQUALS          reduce using rule 22 (method_name -> ID .)


state 60

    (211) type_synonym -> TYPE_SYNONYM typespec . EQUALS ID
    (212) type_synonym -> TYPE_SYNONYM typespec . EQUALS ID mixfix

    EQUALS          shift and go to state 97


state 61

    (76) typespec -> ID .
    (78) typearg -> ID .
    (79) typearg -> ID . COLON COLON ID

    EQUALS          reduce using rule 76 (typespec -> ID .)
    LEFT_PAREN      reduce using rule 76 (typespec -> ID .)
    BINDER          reduce using rule 76 (typespec -> ID .)
    STRUCTURE       reduce using rule 76 (typespec -> ID .)
    AXIOMATIZATION  reduce using rule 76 (typespec -> ID .)
    FUN             reduce using rule 76 (typespec -> ID .)
    FUNCTION        reduce using rule 76 (typespec -> ID .)
    LEMMA           reduce using rule 76 (typespec -> ID .)
    LOCALE          reduce using rule 76 (typespec -> ID .)
    METHOD          reduce using rule 76 (typespec -> ID .)
    SECTION         reduce using rule 76 (typespec -> ID .)
    TEXT            reduce using rule 76 (typespec -> ID .)
    TYPE_SYNONYM    reduce using rule 76 (typespec -> ID .)
    TYPEDECL        reduce using rule 76 (typespec -> ID .)
    END             reduce using rule 76 (typespec -> ID .)
    COMMA           reduce using rule 78 (typearg -> ID .)
    ID              reduce using rule 78 (typearg -> ID .)
    COLON           shift and go to state 98


state 62

    (77) typespec -> typeargs . ID

    ID              shift and go to state 99


state 63

    (80) typeargs -> typearg .
    (81) typeargs -> typearg . COMMA typeargs

    ID              reduce using rule 80 (typeargs -> typearg .)
    RIGHT_PAREN     reduce using rule 80 (typeargs -> typearg .)
    COMMA           shift and go to state 100


state 64

    (82) typeargs -> LEFT_PAREN . typeargs RIGHT_PAREN
    (80) typeargs -> . typearg
    (81) typeargs -> . typearg COMMA typeargs
    (82) typeargs -> . LEFT_PAREN typeargs RIGHT_PAREN
    (78) typearg -> . ID
    (79) typearg -> . ID COLON COLON ID

    LEFT_PAREN      shift and go to state 64
    ID              shift and go to state 102

    typeargs                       shift and go to state 101
    typearg                        shift and go to state 63

state 65

    (209) typedecl -> TYPEDECL typespec .
    (210) typedecl -> TYPEDECL typespec . mixfix
    (213) mixfix -> . LEFT_PAREN template RIGHT_PAREN
    (214) mixfix -> . LEFT_PAREN template prios RIGHT_PAREN
    (215) mixfix -> . LEFT_PAREN template NAT RIGHT_PAREN
    (216) mixfix -> . LEFT_PAREN template prios NAT RIGHT_PAREN
    (217) mixfix -> . LEFT_PAREN INFIX template NAT RIGHT_PAREN
    (218) mixfix -> . LEFT_PAREN INFIXL template NAT RIGHT_PAREN
    (219) mixfix -> . LEFT_PAREN INFIXR template NAT RIGHT_PAREN
    (220) mixfix -> . BINDER template NAT RIGHT_PAREN
    (221) mixfix -> . BINDER template prio NAT RIGHT_PAREN
    (222) mixfix -> . STRUCTURE

    AXIOMATIZATION  reduce using rule 209 (typedecl -> TYPEDECL typespec .)
    FUN             reduce using rule 209 (typedecl -> TYPEDECL typespec .)
    FUNCTION        reduce using rule 209 (typedecl -> TYPEDECL typespec .)
    LEMMA           reduce using rule 209 (typedecl -> TYPEDECL typespec .)
    LOCALE          reduce using rule 209 (typedecl -> TYPEDECL typespec .)
    METHOD          reduce using rule 209 (typedecl -> TYPEDECL typespec .)
    SECTION         reduce using rule 209 (typedecl -> TYPEDECL typespec .)
    TEXT            reduce using rule 209 (typedecl -> TYPEDECL typespec .)
    TYPE_SYNONYM    reduce using rule 209 (typedecl -> TYPEDECL typespec .)
    TYPEDECL        reduce using rule 209 (typedecl -> TYPEDECL typespec .)
    END             reduce using rule 209 (typedecl -> TYPEDECL typespec .)
    LEFT_PAREN      shift and go to state 79
    BINDER          shift and go to state 80
    STRUCTURE       shift and go to state 81

    mixfix                         shift and go to state 103

state 66

    (145) axiomatization_block -> AXIOMATIZATION vars WHERE . axiomatization
    (146) axiomatization -> . axiomatization_header spec_prems for_fixes
    (147) axiomatization_header -> . thmdecl ID
    (148) axiomatization_header -> . thmdecl QUOTED_STRING
    (149) axiomatization_header -> . thmdecl ID AND axiomatization_header
    (150) axiomatization_header -> . thmdecl QUOTED_STRING AND axiomatization_header
    (106) thmdecl -> . thmbind COLON
    (113) thmbind -> . ID
    (114) thmbind -> . ID attributes
    (115) thmbind -> . attributes
    (116) attributes -> . LEFT_BRACKET attributes_list RIGHT_BRACKET

    ID              shift and go to state 70
    LEFT_BRACKET    shift and go to state 73

    axiomatization                 shift and go to state 104
    axiomatization_header          shift and go to state 68
    thmdecl                        shift and go to state 69
    thmbind                        shift and go to state 71
    attributes                     shift and go to state 72

state 67

    (144) axiomatization_block -> AXIOMATIZATION WHERE axiomatization .

    AXIOMATIZATION  reduce using rule 144 (axiomatization_block -> AXIOMATIZATION WHERE axiomatization .)
    FUN             reduce using rule 144 (axiomatization_block -> AXIOMATIZATION WHERE axiomatization .)
    FUNCTION        reduce using rule 144 (axiomatization_block -> AXIOMATIZATION WHERE axiomatization .)
    LEMMA           reduce using rule 144 (axiomatization_block -> AXIOMATIZATION WHERE axiomatization .)
    LOCALE          reduce using rule 144 (axiomatization_block -> AXIOMATIZATION WHERE axiomatization .)
    METHOD          reduce using rule 144 (axiomatization_block -> AXIOMATIZATION WHERE axiomatization .)
    SECTION         reduce using rule 144 (axiomatization_block -> AXIOMATIZATION WHERE axiomatization .)
    TEXT            reduce using rule 144 (axiomatization_block -> AXIOMATIZATION WHERE axiomatization .)
    TYPE_SYNONYM    reduce using rule 144 (axiomatization_block -> AXIOMATIZATION WHERE axiomatization .)
    TYPEDECL        reduce using rule 144 (axiomatization_block -> AXIOMATIZATION WHERE axiomatization .)
    END             reduce using rule 144 (axiomatization_block -> AXIOMATIZATION WHERE axiomatization .)


state 68

    (146) axiomatization -> axiomatization_header . spec_prems for_fixes
    (135) spec_prems -> . empty
    (136) spec_prems -> . IF prop_list
    (253) empty -> .

    IF              shift and go to state 107
    FOR             reduce using rule 253 (empty -> .)
    AXIOMATIZATION  reduce using rule 253 (empty -> .)
    FUN             reduce using rule 253 (empty -> .)
    FUNCTION        reduce using rule 253 (empty -> .)
    LEMMA           reduce using rule 253 (empty -> .)
    LOCALE          reduce using rule 253 (empty -> .)
    METHOD          reduce using rule 253 (empty -> .)
    SECTION         reduce using rule 253 (empty -> .)
    TEXT            reduce using rule 253 (empty -> .)
    TYPE_SYNONYM    reduce using rule 253 (empty -> .)
    TYPEDECL        reduce using rule 253 (empty -> .)
    END             reduce using rule 253 (empty -> .)

    spec_prems                     shift and go to state 105
    empty                          shift and go to state 106

state 69

    (147) axiomatization_header -> thmdecl . ID
    (148) axiomatization_header -> thmdecl . QUOTED_STRING
    (149) axiomatization_header -> thmdecl . ID AND axiomatization_header
    (150) axiomatization_header -> thmdecl . QUOTED_STRING AND axiomatization_header

    ID              shift and go to state 108
    QUOTED_STRING   shift and go to state 109


state 70

    (113) thmbind -> ID .
    (114) thmbind -> ID . attributes
    (116) attributes -> . LEFT_BRACKET attributes_list RIGHT_BRACKET

    COLON           reduce using rule 113 (thmbind -> ID .)
    LEFT_BRACKET    shift and go to state 73

    attributes                     shift and go to state 110

state 71

    (106) thmdecl -> thmbind . COLON

    COLON           shift and go to state 111


state 72

    (115) thmbind -> attributes .

    COLON           reduce using rule 115 (thmbind -> attributes .)


state 73

    (116) attributes -> LEFT_BRACKET . attributes_list RIGHT_BRACKET
    (117) attributes_list -> . empty
    (118) attributes_list -> . attribute
    (119) attributes_list -> . attribute COMMA attributes_list
    (253) empty -> .
    (120) attribute -> . ID args

    RIGHT_BRACKET   reduce using rule 253 (empty -> .)
    ID              shift and go to state 115

    attributes_list                shift and go to state 112
    empty                          shift and go to state 113
    attribute                      shift and go to state 114

state 74

    (84) vars -> var AND . vars
    (83) vars -> . var
    (84) vars -> . var AND vars
    (85) var -> . names
    (86) var -> . ID COLON COLON ID
    (87) var -> . GREEK COLON COLON ID
    (88) var -> . ID COLON COLON QUOTED_STRING
    (89) var -> . GREEK COLON COLON QUOTED_STRING
    (90) var -> . names COLON COLON ID
    (91) var -> . names COLON COLON QUOTED_STRING
    (92) var -> . ID mixfix
    (93) var -> . ID COLON COLON ID mixfix
    (94) var -> . GREEK COLON COLON ID mixfix
    (95) var -> . ID COLON COLON QUOTED_STRING mixfix
    (96) var -> . GREEK COLON COLON QUOTED_STRING mixfix
    (97) names -> . ID
    (98) names -> . ID AND names

    ID              shift and go to state 48
    GREEK           shift and go to state 49

    var                            shift and go to state 46
    vars                           shift and go to state 116
    names                          shift and go to state 47

state 75

    (90) var -> names COLON . COLON ID
    (91) var -> names COLON . COLON QUOTED_STRING

    COLON           shift and go to state 117


state 76

    (86) var -> ID COLON . COLON ID
    (88) var -> ID COLON . COLON QUOTED_STRING
    (93) var -> ID COLON . COLON ID mixfix
    (95) var -> ID COLON . COLON QUOTED_STRING mixfix

    COLON           shift and go to state 118


state 77

    (92) var -> ID mixfix .

    AND             reduce using rule 92 (var -> ID mixfix .)
    WHERE           reduce using rule 92 (var -> ID mixfix .)
    AXIOMATIZATION  reduce using rule 92 (var -> ID mixfix .)
    FUN             reduce using rule 92 (var -> ID mixfix .)
    FUNCTION        reduce using rule 92 (var -> ID mixfix .)
    LEMMA           reduce using rule 92 (var -> ID mixfix .)
    LOCALE          reduce using rule 92 (var -> ID mixfix .)
    METHOD          reduce using rule 92 (var -> ID mixfix .)
    SECTION         reduce using rule 92 (var -> ID mixfix .)
    TEXT            reduce using rule 92 (var -> ID mixfix .)
    TYPE_SYNONYM    reduce using rule 92 (var -> ID mixfix .)
    TYPEDECL        reduce using rule 92 (var -> ID mixfix .)
    END             reduce using rule 92 (var -> ID mixfix .)
    FIXES           reduce using rule 92 (var -> ID mixfix .)
    CONSTRAINS      reduce using rule 92 (var -> ID mixfix .)
    ASSUMES         reduce using rule 92 (var -> ID mixfix .)
    DEFINES         reduce using rule 92 (var -> ID mixfix .)
    NOTES           reduce using rule 92 (var -> ID mixfix .)
    BEGIN           reduce using rule 92 (var -> ID mixfix .)
    OPENING         reduce using rule 92 (var -> ID mixfix .)
    ID              reduce using rule 92 (var -> ID mixfix .)
    QUOTED_STRING   reduce using rule 92 (var -> ID mixfix .)
    LEFT_BRACKET    reduce using rule 92 (var -> ID mixfix .)


state 78

    (98) names -> ID AND . names
    (97) names -> . ID
    (98) names -> . ID AND names

    ID              shift and go to state 119

    names                          shift and go to state 120

state 79

    (213) mixfix -> LEFT_PAREN . template RIGHT_PAREN
    (214) mixfix -> LEFT_PAREN . template prios RIGHT_PAREN
    (215) mixfix -> LEFT_PAREN . template NAT RIGHT_PAREN
    (216) mixfix -> LEFT_PAREN . template prios NAT RIGHT_PAREN
    (217) mixfix -> LEFT_PAREN . INFIX template NAT RIGHT_PAREN
    (218) mixfix -> LEFT_PAREN . INFIXL template NAT RIGHT_PAREN
    (219) mixfix -> LEFT_PAREN . INFIXR template NAT RIGHT_PAREN
    (223) template -> . QUOTED_STRING
    (224) template -> . CARTOUCHE

    INFIX           shift and go to state 122
    INFIXL          shift and go to state 123
    INFIXR          shift and go to state 124
    QUOTED_STRING   shift and go to state 125
    CARTOUCHE       shift and go to state 126

    template                       shift and go to state 121

state 80

    (220) mixfix -> BINDER . template NAT RIGHT_PAREN
    (221) mixfix -> BINDER . template prio NAT RIGHT_PAREN
    (223) template -> . QUOTED_STRING
    (224) template -> . CARTOUCHE

    QUOTED_STRING   shift and go to state 125
    CARTOUCHE       shift and go to state 126

    template                       shift and go to state 127

state 81

    (222) mixfix -> STRUCTURE .

    AND             reduce using rule 222 (mixfix -> STRUCTURE .)
    WHERE           reduce using rule 222 (mixfix -> STRUCTURE .)
    AXIOMATIZATION  reduce using rule 222 (mixfix -> STRUCTURE .)
    FUN             reduce using rule 222 (mixfix -> STRUCTURE .)
    FUNCTION        reduce using rule 222 (mixfix -> STRUCTURE .)
    LEMMA           reduce using rule 222 (mixfix -> STRUCTURE .)
    LOCALE          reduce using rule 222 (mixfix -> STRUCTURE .)
    METHOD          reduce using rule 222 (mixfix -> STRUCTURE .)
    SECTION         reduce using rule 222 (mixfix -> STRUCTURE .)
    TEXT            reduce using rule 222 (mixfix -> STRUCTURE .)
    TYPE_SYNONYM    reduce using rule 222 (mixfix -> STRUCTURE .)
    TYPEDECL        reduce using rule 222 (mixfix -> STRUCTURE .)
    END             reduce using rule 222 (mixfix -> STRUCTURE .)
    FIXES           reduce using rule 222 (mixfix -> STRUCTURE .)
    CONSTRAINS      reduce using rule 222 (mixfix -> STRUCTURE .)
    ASSUMES         reduce using rule 222 (mixfix -> STRUCTURE .)
    DEFINES         reduce using rule 222 (mixfix -> STRUCTURE .)
    NOTES           reduce using rule 222 (mixfix -> STRUCTURE .)
    BEGIN           reduce using rule 222 (mixfix -> STRUCTURE .)
    OPENING         reduce using rule 222 (mixfix -> STRUCTURE .)
    ID              reduce using rule 222 (mixfix -> STRUCTURE .)
    QUOTED_STRING   reduce using rule 222 (mixfix -> STRUCTURE .)
    LEFT_BRACKET    reduce using rule 222 (mixfix -> STRUCTURE .)


state 82

    (87) var -> GREEK COLON . COLON ID
    (89) var -> GREEK COLON . COLON QUOTED_STRING
    (94) var -> GREEK COLON . COLON ID mixfix
    (96) var -> GREEK COLON . COLON QUOTED_STRING mixfix

    COLON           shift and go to state 128


state 83

    (232) fun_block -> FUN opts specification .

    AXIOMATIZATION  reduce using rule 232 (fun_block -> FUN opts specification .)
    FUN             reduce using rule 232 (fun_block -> FUN opts specification .)
    FUNCTION        reduce using rule 232 (fun_block -> FUN opts specification .)
    LEMMA           reduce using rule 232 (fun_block -> FUN opts specification .)
    LOCALE          reduce using rule 232 (fun_block -> FUN opts specification .)
    METHOD          reduce using rule 232 (fun_block -> FUN opts specification .)
    SECTION         reduce using rule 232 (fun_block -> FUN opts specification .)
    TEXT            reduce using rule 232 (fun_block -> FUN opts specification .)
    TYPE_SYNONYM    reduce using rule 232 (fun_block -> FUN opts specification .)
    TYPEDECL        reduce using rule 232 (fun_block -> FUN opts specification .)
    END             reduce using rule 232 (fun_block -> FUN opts specification .)


state 84

    (140) specification -> vars WHERE . multi_specs
    (129) multi_specs -> . structured_spec
    (130) multi_specs -> . structured_spec multi_specs
    (131) structured_spec -> . ID spec_prems for_fixes
    (132) structured_spec -> . QUOTED_STRING spec_prems for_fixes
    (133) structured_spec -> . thmdecl ID spec_prems for_fixes
    (134) structured_spec -> . thmdecl QUOTED_STRING spec_prems for_fixes
    (106) thmdecl -> . thmbind COLON
    (113) thmbind -> . ID
    (114) thmbind -> . ID attributes
    (115) thmbind -> . attributes
    (116) attributes -> . LEFT_BRACKET attributes_list RIGHT_BRACKET

    ID              shift and go to state 131
    QUOTED_STRING   shift and go to state 132
    LEFT_BRACKET    shift and go to state 73

    multi_specs                    shift and go to state 129
    structured_spec                shift and go to state 130
    thmdecl                        shift and go to state 133
    thmbind                        shift and go to state 71
    attributes                     shift and go to state 72

state 85

    (234) opts -> LEFT_PAREN opt_list . RIGHT_PAREN

    RIGHT_PAREN     shift and go to state 134


state 86

    (235) opt_list -> sequential .
    (237) opt_list -> sequential . COMMA opt_list

    RIGHT_PAREN     reduce using rule 235 (opt_list -> sequential .)
    COMMA           shift and go to state 135


state 87

    (236) opt_list -> domintros .
    (238) opt_list -> domintros . COMMA opt_list

    RIGHT_PAREN     reduce using rule 236 (opt_list -> domintros .)
    COMMA           shift and go to state 136


state 88

    (239) sequential -> ID .
    (241) domintros -> ID .

  ! reduce/reduce conflict for COMMA resolved using rule 239 (sequential -> ID .)
  ! reduce/reduce conflict for RIGHT_PAREN resolved using rule 239 (sequential -> ID .)
    COMMA           reduce using rule 239 (sequential -> ID .)
    RIGHT_PAREN     reduce using rule 239 (sequential -> ID .)

  ! COMMA           [ reduce using rule 241 (domintros -> ID .) ]
  ! RIGHT_PAREN     [ reduce using rule 241 (domintros -> ID .) ]


state 89

    (240) sequential -> QUOTED_STRING .
    (242) domintros -> QUOTED_STRING .

  ! reduce/reduce conflict for COMMA resolved using rule 240 (sequential -> QUOTED_STRING .)
  ! reduce/reduce conflict for RIGHT_PAREN resolved using rule 240 (sequential -> QUOTED_STRING .)
    COMMA           reduce using rule 240 (sequential -> QUOTED_STRING .)
    RIGHT_PAREN     reduce using rule 240 (sequential -> QUOTED_STRING .)

  ! COMMA           [ reduce using rule 242 (domintros -> QUOTED_STRING .) ]
  ! RIGHT_PAREN     [ reduce using rule 242 (domintros -> QUOTED_STRING .) ]


state 90

    (233) fun_block -> FUNCTION opts specification .

    AXIOMATIZATION  reduce using rule 233 (fun_block -> FUNCTION opts specification .)
    FUN             reduce using rule 233 (fun_block -> FUNCTION opts specification .)
    FUNCTION        reduce using rule 233 (fun_block -> FUNCTION opts specification .)
    LEMMA           reduce using rule 233 (fun_block -> FUNCTION opts specification .)
    LOCALE          reduce using rule 233 (fun_block -> FUNCTION opts specification .)
    METHOD          reduce using rule 233 (fun_block -> FUNCTION opts specification .)
    SECTION         reduce using rule 233 (fun_block -> FUNCTION opts specification .)
    TEXT            reduce using rule 233 (fun_block -> FUNCTION opts specification .)
    TYPE_SYNONYM    reduce using rule 233 (fun_block -> FUNCTION opts specification .)
    TYPEDECL        reduce using rule 233 (fun_block -> FUNCTION opts specification .)
    END             reduce using rule 233 (fun_block -> FUNCTION opts specification .)


state 91

    (44) lemma_block -> LEMMA ID COLON . assumes_block shows_clause lemma_proof_block
    (48) assumes_block -> . ASSUMES assumptions_list

    ASSUMES         shift and go to state 138

    assumes_block                  shift and go to state 137

state 92

    (175) locale_block -> LOCALE ID BEGIN . content END
    (10) content -> . statement content
    (11) content -> . empty
    (12) statement -> . axiomatization_block
    (13) statement -> . fun_block
    (14) statement -> . lemma_block
    (15) statement -> . locale_block
    (16) statement -> . method_block
    (17) statement -> . section_block
    (18) statement -> . text_block
    (19) statement -> . type_synonym
    (20) statement -> . typedecl
    (253) empty -> .
    (142) axiomatization_block -> . AXIOMATIZATION
    (143) axiomatization_block -> . AXIOMATIZATION vars
    (144) axiomatization_block -> . AXIOMATIZATION WHERE axiomatization
    (145) axiomatization_block -> . AXIOMATIZATION vars WHERE axiomatization
    (230) fun_block -> . FUN specification
    (231) fun_block -> . FUNCTION specification
    (232) fun_block -> . FUN opts specification
    (233) fun_block -> . FUNCTION opts specification
    (44) lemma_block -> . LEMMA ID COLON assumes_block shows_clause lemma_proof_block
    (174) locale_block -> . LOCALE ID
    (175) locale_block -> . LOCALE ID BEGIN content END
    (176) locale_block -> . LOCALE ID comment_block BEGIN content END
    (177) locale_block -> . LOCALE ID EQ locale
    (178) locale_block -> . LOCALE ID EQ locale BEGIN content END
    (21) method_block -> . METHOD method_name EQUALS instruction
    (243) section_block -> . SECTION CARTOUCHE
    (244) text_block -> . TEXT CARTOUCHE
    (211) type_synonym -> . TYPE_SYNONYM typespec EQUALS ID
    (212) type_synonym -> . TYPE_SYNONYM typespec EQUALS ID mixfix
    (209) typedecl -> . TYPEDECL typespec
    (210) typedecl -> . TYPEDECL typespec mixfix

    END             reduce using rule 253 (empty -> .)
    AXIOMATIZATION  shift and go to state 32
    FUN             shift and go to state 33
    FUNCTION        shift and go to state 34
    LEMMA           shift and go to state 35
    LOCALE          shift and go to state 36
    METHOD          shift and go to state 37
    SECTION         shift and go to state 6
    TEXT            shift and go to state 7
    TYPE_SYNONYM    shift and go to state 38
    TYPEDECL        shift and go to state 39

    content                        shift and go to state 139
    statement                      shift and go to state 21
    empty                          shift and go to state 22
    axiomatization_block           shift and go to state 23
    fun_block                      shift and go to state 24
    lemma_block                    shift and go to state 25
    locale_block                   shift and go to state 26
    method_block                   shift and go to state 27
    section_block                  shift and go to state 28
    text_block                     shift and go to state 29
    type_synonym                   shift and go to state 30
    typedecl                       shift and go to state 31

state 93

    (176) locale_block -> LOCALE ID comment_block . BEGIN content END

    BEGIN           shift and go to state 140


state 94

    (177) locale_block -> LOCALE ID EQ . locale
    (178) locale_block -> LOCALE ID EQ . locale BEGIN content END
    (179) locale -> . context_elem_list
    (180) locale -> . opening
    (181) locale -> . opening PLUS context_elem_list
    (182) locale -> . locale_expr
    (183) locale -> . locale opening
    (184) locale -> . locale opening PLUS context_elem_list
    (185) locale -> . locale_expr opening PLUS context_elem_list
    (186) context_elem_list -> . context_elem
    (187) context_elem_list -> . context_elem context_elem_list
    (141) opening -> . OPENING names_list
    (151) locale_expr -> . instance_list for_fixes
    (188) context_elem -> . FIXES vars
    (189) context_elem -> . CONSTRAINS name_type_list
    (190) context_elem -> . ASSUMES prop_list
    (191) context_elem -> . DEFINES defines_list
    (192) context_elem -> . NOTES notes_list
    (152) instance_list -> . instance
    (153) instance_list -> . instance PLUS instance_list
    (154) instance -> . ID
    (155) instance -> . ID pos_insts
    (156) instance -> . ID name_insts
    (157) instance -> . qualifier COLON ID pos_insts
    (158) instance -> . qualifier COLON ID name_insts
    (159) qualifier -> . ID
    (160) qualifier -> . QUOTED_STRING
    (161) qualifier -> . ID QUESTION_MARK
    (162) qualifier -> . QUOTED_STRING QUESTION_MARK

    OPENING         shift and go to state 147
    FIXES           shift and go to state 149
    CONSTRAINS      shift and go to state 150
    ASSUMES         shift and go to state 151
    DEFINES         shift and go to state 152
    NOTES           shift and go to state 153
    ID              shift and go to state 141
    QUOTED_STRING   shift and go to state 156

    locale                         shift and go to state 142
    context_elem_list              shift and go to state 143
    opening                        shift and go to state 144
    locale_expr                    shift and go to state 145
    context_elem                   shift and go to state 146
    instance_list                  shift and go to state 148
    instance                       shift and go to state 154
    qualifier                      shift and go to state 155

state 95

    (245) comment_block -> COMMENT_CARTOUCHE . CARTOUCHE

    CARTOUCHE       shift and go to state 157


state 96

    (21) method_block -> METHOD method_name EQUALS . instruction
    (23) instruction -> . single_instruction
    (24) instruction -> . single_instruction instruction_modifier
    (25) instruction -> . single_instruction instruction_modifier COMMA instruction
    (26) instruction -> . single_instruction SEMICOLON instruction
    (27) instruction -> . single_instruction COMMA instruction
    (28) instruction -> . LEFT_PAREN instruction RIGHT_PAREN
    (29) instruction -> . LEFT_PAREN instruction RIGHT_PAREN instruction_modifier
    (32) single_instruction -> . ID
    (33) single_instruction -> . ID method_args
    (34) single_instruction -> . LEFT_PAREN ID method_args RIGHT_PAREN
    (35) single_instruction -> . LEFT_PAREN ID method_args RIGHT_PAREN instruction_modifier

    LEFT_PAREN      shift and go to state 160
    ID              shift and go to state 161

    instruction                    shift and go to state 158
    single_instruction             shift and go to state 159

state 97

    (211) type_synonym -> TYPE_SYNONYM typespec EQUALS . ID
    (212) type_synonym -> TYPE_SYNONYM typespec EQUALS . ID mixfix

    ID              shift and go to state 162


state 98

    (79) typearg -> ID COLON . COLON ID

    COLON           shift and go to state 163


state 99

    (77) typespec -> typeargs ID .

    EQUALS          reduce using rule 77 (typespec -> typeargs ID .)
    LEFT_PAREN      reduce using rule 77 (typespec -> typeargs ID .)
    BINDER          reduce using rule 77 (typespec -> typeargs ID .)
    STRUCTURE       reduce using rule 77 (typespec -> typeargs ID .)
    AXIOMATIZATION  reduce using rule 77 (typespec -> typeargs ID .)
    FUN             reduce using rule 77 (typespec -> typeargs ID .)
    FUNCTION        reduce using rule 77 (typespec -> typeargs ID .)
    LEMMA           reduce using rule 77 (typespec -> typeargs ID .)
    LOCALE          reduce using rule 77 (typespec -> typeargs ID .)
    METHOD          reduce using rule 77 (typespec -> typeargs ID .)
    SECTION         reduce using rule 77 (typespec -> typeargs ID .)
    TEXT            reduce using rule 77 (typespec -> typeargs ID .)
    TYPE_SYNONYM    reduce using rule 77 (typespec -> typeargs ID .)
    TYPEDECL        reduce using rule 77 (typespec -> typeargs ID .)
    END             reduce using rule 77 (typespec -> typeargs ID .)


state 100

    (81) typeargs -> typearg COMMA . typeargs
    (80) typeargs -> . typearg
    (81) typeargs -> . typearg COMMA typeargs
    (82) typeargs -> . LEFT_PAREN typeargs RIGHT_PAREN
    (78) typearg -> . ID
    (79) typearg -> . ID COLON COLON ID

    LEFT_PAREN      shift and go to state 64
    ID              shift and go to state 102

    typearg                        shift and go to state 63
    typeargs                       shift and go to state 164

state 101

    (82) typeargs -> LEFT_PAREN typeargs . RIGHT_PAREN

    RIGHT_PAREN     shift and go to state 165


state 102

    (78) typearg -> ID .
    (79) typearg -> ID . COLON COLON ID

    COMMA           reduce using rule 78 (typearg -> ID .)
    RIGHT_PAREN     reduce using rule 78 (typearg -> ID .)
    ID              reduce using rule 78 (typearg -> ID .)
    COLON           shift and go to state 98


state 103

    (210) typedecl -> TYPEDECL typespec mixfix .

    AXIOMATIZATION  reduce using rule 210 (typedecl -> TYPEDECL typespec mixfix .)
    FUN             reduce using rule 210 (typedecl -> TYPEDECL typespec mixfix .)
    FUNCTION        reduce using rule 210 (typedecl -> TYPEDECL typespec mixfix .)
    LEMMA           reduce using rule 210 (typedecl -> TYPEDECL typespec mixfix .)
    LOCALE          reduce using rule 210 (typedecl -> TYPEDECL typespec mixfix .)
    METHOD          reduce using rule 210 (typedecl -> TYPEDECL typespec mixfix .)
    SECTION         reduce using rule 210 (typedecl -> TYPEDECL typespec mixfix .)
    TEXT            reduce using rule 210 (typedecl -> TYPEDECL typespec mixfix .)
    TYPE_SYNONYM    reduce using rule 210 (typedecl -> TYPEDECL typespec mixfix .)
    TYPEDECL        reduce using rule 210 (typedecl -> TYPEDECL typespec mixfix .)
    END             reduce using rule 210 (typedecl -> TYPEDECL typespec mixfix .)


state 104

    (145) axiomatization_block -> AXIOMATIZATION vars WHERE axiomatization .

    AXIOMATIZATION  reduce using rule 145 (axiomatization_block -> AXIOMATIZATION vars WHERE axiomatization .)
    FUN             reduce using rule 145 (axiomatization_block -> AXIOMATIZATION vars WHERE axiomatization .)
    FUNCTION        reduce using rule 145 (axiomatization_block -> AXIOMATIZATION vars WHERE axiomatization .)
    LEMMA           reduce using rule 145 (axiomatization_block -> AXIOMATIZATION vars WHERE axiomatization .)
    LOCALE          reduce using rule 145 (axiomatization_block -> AXIOMATIZATION vars WHERE axiomatization .)
    METHOD          reduce using rule 145 (axiomatization_block -> AXIOMATIZATION vars WHERE axiomatization .)
    SECTION         reduce using rule 145 (axiomatization_block -> AXIOMATIZATION vars WHERE axiomatization .)
    TEXT            reduce using rule 145 (axiomatization_block -> AXIOMATIZATION vars WHERE axiomatization .)
    TYPE_SYNONYM    reduce using rule 145 (axiomatization_block -> AXIOMATIZATION vars WHERE axiomatization .)
    TYPEDECL        reduce using rule 145 (axiomatization_block -> AXIOMATIZATION vars WHERE axiomatization .)
    END             reduce using rule 145 (axiomatization_block -> AXIOMATIZATION vars WHERE axiomatization .)


state 105

    (146) axiomatization -> axiomatization_header spec_prems . for_fixes
    (127) for_fixes -> . empty
    (128) for_fixes -> . FOR vars
    (253) empty -> .

    FOR             shift and go to state 168
    AXIOMATIZATION  reduce using rule 253 (empty -> .)
    FUN             reduce using rule 253 (empty -> .)
    FUNCTION        reduce using rule 253 (empty -> .)
    LEMMA           reduce using rule 253 (empty -> .)
    LOCALE          reduce using rule 253 (empty -> .)
    METHOD          reduce using rule 253 (empty -> .)
    SECTION         reduce using rule 253 (empty -> .)
    TEXT            reduce using rule 253 (empty -> .)
    TYPE_SYNONYM    reduce using rule 253 (empty -> .)
    TYPEDECL        reduce using rule 253 (empty -> .)
    END             reduce using rule 253 (empty -> .)

    for_fixes                      shift and go to state 166
    empty                          shift and go to state 167

state 106

    (135) spec_prems -> empty .

    FOR             reduce using rule 135 (spec_prems -> empty .)
    AXIOMATIZATION  reduce using rule 135 (spec_prems -> empty .)
    FUN             reduce using rule 135 (spec_prems -> empty .)
    FUNCTION        reduce using rule 135 (spec_prems -> empty .)
    LEMMA           reduce using rule 135 (spec_prems -> empty .)
    LOCALE          reduce using rule 135 (spec_prems -> empty .)
    METHOD          reduce using rule 135 (spec_prems -> empty .)
    SECTION         reduce using rule 135 (spec_prems -> empty .)
    TEXT            reduce using rule 135 (spec_prems -> empty .)
    TYPE_SYNONYM    reduce using rule 135 (spec_prems -> empty .)
    TYPEDECL        reduce using rule 135 (spec_prems -> empty .)
    END             reduce using rule 135 (spec_prems -> empty .)
    ID              reduce using rule 135 (spec_prems -> empty .)
    QUOTED_STRING   reduce using rule 135 (spec_prems -> empty .)
    LEFT_BRACKET    reduce using rule 135 (spec_prems -> empty .)


state 107

    (136) spec_prems -> IF . prop_list
    (137) prop_list -> . ID
    (138) prop_list -> . ID prop_list
    (139) prop_list -> . ID AND prop_list

    ID              shift and go to state 170

    prop_list                      shift and go to state 169

state 108

    (147) axiomatization_header -> thmdecl ID .
    (149) axiomatization_header -> thmdecl ID . AND axiomatization_header

    IF              reduce using rule 147 (axiomatization_header -> thmdecl ID .)
    FOR             reduce using rule 147 (axiomatization_header -> thmdecl ID .)
    AXIOMATIZATION  reduce using rule 147 (axiomatization_header -> thmdecl ID .)
    FUN             reduce using rule 147 (axiomatization_header -> thmdecl ID .)
    FUNCTION        reduce using rule 147 (axiomatization_header -> thmdecl ID .)
    LEMMA           reduce using rule 147 (axiomatization_header -> thmdecl ID .)
    LOCALE          reduce using rule 147 (axiomatization_header -> thmdecl ID .)
    METHOD          reduce using rule 147 (axiomatization_header -> thmdecl ID .)
    SECTION         reduce using rule 147 (axiomatization_header -> thmdecl ID .)
    TEXT            reduce using rule 147 (axiomatization_header -> thmdecl ID .)
    TYPE_SYNONYM    reduce using rule 147 (axiomatization_header -> thmdecl ID .)
    TYPEDECL        reduce using rule 147 (axiomatization_header -> thmdecl ID .)
    END             reduce using rule 147 (axiomatization_header -> thmdecl ID .)
    AND             shift and go to state 171


state 109

    (148) axiomatization_header -> thmdecl QUOTED_STRING .
    (150) axiomatization_header -> thmdecl QUOTED_STRING . AND axiomatization_header

    IF              reduce using rule 148 (axiomatization_header -> thmdecl QUOTED_STRING .)
    FOR             reduce using rule 148 (axiomatization_header -> thmdecl QUOTED_STRING .)
    AXIOMATIZATION  reduce using rule 148 (axiomatization_header -> thmdecl QUOTED_STRING .)
    FUN             reduce using rule 148 (axiomatization_header -> thmdecl QUOTED_STRING .)
    FUNCTION        reduce using rule 148 (axiomatization_header -> thmdecl QUOTED_STRING .)
    LEMMA           reduce using rule 148 (axiomatization_header -> thmdecl QUOTED_STRING .)
    LOCALE          reduce using rule 148 (axiomatization_header -> thmdecl QUOTED_STRING .)
    METHOD          reduce using rule 148 (axiomatization_header -> thmdecl QUOTED_STRING .)
    SECTION         reduce using rule 148 (axiomatization_header -> thmdecl QUOTED_STRING .)
    TEXT            reduce using rule 148 (axiomatization_header -> thmdecl QUOTED_STRING .)
    TYPE_SYNONYM    reduce using rule 148 (axiomatization_header -> thmdecl QUOTED_STRING .)
    TYPEDECL        reduce using rule 148 (axiomatization_header -> thmdecl QUOTED_STRING .)
    END             reduce using rule 148 (axiomatization_header -> thmdecl QUOTED_STRING .)
    AND             shift and go to state 172


state 110

    (114) thmbind -> ID attributes .

    COLON           reduce using rule 114 (thmbind -> ID attributes .)


state 111

    (106) thmdecl -> thmbind COLON .

    ID              reduce using rule 106 (thmdecl -> thmbind COLON .)
    QUOTED_STRING   reduce using rule 106 (thmdecl -> thmbind COLON .)


state 112

    (116) attributes -> LEFT_BRACKET attributes_list . RIGHT_BRACKET

    RIGHT_BRACKET   shift and go to state 173


state 113

    (117) attributes_list -> empty .

    RIGHT_BRACKET   reduce using rule 117 (attributes_list -> empty .)


state 114

    (118) attributes_list -> attribute .
    (119) attributes_list -> attribute . COMMA attributes_list

    RIGHT_BRACKET   reduce using rule 118 (attributes_list -> attribute .)
    COMMA           shift and go to state 174


state 115

    (120) attribute -> ID . args
    (121) args -> . empty
    (122) args -> . arg
    (123) args -> . arg args
    (253) empty -> .
    (124) arg -> . ID
    (125) arg -> . LEFT_PAREN args RIGHT_PAREN
    (126) arg -> . LEFT_BRACKET args RIGHT_BRACKET

    COMMA           reduce using rule 253 (empty -> .)
    RIGHT_BRACKET   reduce using rule 253 (empty -> .)
    ID              shift and go to state 175
    LEFT_PAREN      shift and go to state 179
    LEFT_BRACKET    shift and go to state 180

    args                           shift and go to state 176
    empty                          shift and go to state 177
    arg                            shift and go to state 178

state 116

    (84) vars -> var AND vars .

    WHERE           reduce using rule 84 (vars -> var AND vars .)
    AXIOMATIZATION  reduce using rule 84 (vars -> var AND vars .)
    FUN             reduce using rule 84 (vars -> var AND vars .)
    FUNCTION        reduce using rule 84 (vars -> var AND vars .)
    LEMMA           reduce using rule 84 (vars -> var AND vars .)
    LOCALE          reduce using rule 84 (vars -> var AND vars .)
    METHOD          reduce using rule 84 (vars -> var AND vars .)
    SECTION         reduce using rule 84 (vars -> var AND vars .)
    TEXT            reduce using rule 84 (vars -> var AND vars .)
    TYPE_SYNONYM    reduce using rule 84 (vars -> var AND vars .)
    TYPEDECL        reduce using rule 84 (vars -> var AND vars .)
    END             reduce using rule 84 (vars -> var AND vars .)
    FIXES           reduce using rule 84 (vars -> var AND vars .)
    CONSTRAINS      reduce using rule 84 (vars -> var AND vars .)
    ASSUMES         reduce using rule 84 (vars -> var AND vars .)
    DEFINES         reduce using rule 84 (vars -> var AND vars .)
    NOTES           reduce using rule 84 (vars -> var AND vars .)
    BEGIN           reduce using rule 84 (vars -> var AND vars .)
    OPENING         reduce using rule 84 (vars -> var AND vars .)
    ID              reduce using rule 84 (vars -> var AND vars .)
    QUOTED_STRING   reduce using rule 84 (vars -> var AND vars .)
    LEFT_BRACKET    reduce using rule 84 (vars -> var AND vars .)


state 117

    (90) var -> names COLON COLON . ID
    (91) var -> names COLON COLON . QUOTED_STRING

    ID              shift and go to state 181
    QUOTED_STRING   shift and go to state 182


state 118

    (86) var -> ID COLON COLON . ID
    (88) var -> ID COLON COLON . QUOTED_STRING
    (93) var -> ID COLON COLON . ID mixfix
    (95) var -> ID COLON COLON . QUOTED_STRING mixfix

    ID              shift and go to state 183
    QUOTED_STRING   shift and go to state 184


state 119

    (97) names -> ID .
    (98) names -> ID . AND names

  ! shift/reduce conflict for AND resolved as shift
    COLON           reduce using rule 97 (names -> ID .)
    WHERE           reduce using rule 97 (names -> ID .)
    AXIOMATIZATION  reduce using rule 97 (names -> ID .)
    FUN             reduce using rule 97 (names -> ID .)
    FUNCTION        reduce using rule 97 (names -> ID .)
    LEMMA           reduce using rule 97 (names -> ID .)
    LOCALE          reduce using rule 97 (names -> ID .)
    METHOD          reduce using rule 97 (names -> ID .)
    SECTION         reduce using rule 97 (names -> ID .)
    TEXT            reduce using rule 97 (names -> ID .)
    TYPE_SYNONYM    reduce using rule 97 (names -> ID .)
    TYPEDECL        reduce using rule 97 (names -> ID .)
    END             reduce using rule 97 (names -> ID .)
    FIXES           reduce using rule 97 (names -> ID .)
    CONSTRAINS      reduce using rule 97 (names -> ID .)
    ASSUMES         reduce using rule 97 (names -> ID .)
    DEFINES         reduce using rule 97 (names -> ID .)
    NOTES           reduce using rule 97 (names -> ID .)
    BEGIN           reduce using rule 97 (names -> ID .)
    OPENING         reduce using rule 97 (names -> ID .)
    ID              reduce using rule 97 (names -> ID .)
    QUOTED_STRING   reduce using rule 97 (names -> ID .)
    LEFT_BRACKET    reduce using rule 97 (names -> ID .)
    PLUS            reduce using rule 97 (names -> ID .)
    AND             shift and go to state 78

  ! AND             [ reduce using rule 97 (names -> ID .) ]


state 120

    (98) names -> ID AND names .

    COLON           reduce using rule 98 (names -> ID AND names .)
    AND             reduce using rule 98 (names -> ID AND names .)
    WHERE           reduce using rule 98 (names -> ID AND names .)
    AXIOMATIZATION  reduce using rule 98 (names -> ID AND names .)
    FUN             reduce using rule 98 (names -> ID AND names .)
    FUNCTION        reduce using rule 98 (names -> ID AND names .)
    LEMMA           reduce using rule 98 (names -> ID AND names .)
    LOCALE          reduce using rule 98 (names -> ID AND names .)
    METHOD          reduce using rule 98 (names -> ID AND names .)
    SECTION         reduce using rule 98 (names -> ID AND names .)
    TEXT            reduce using rule 98 (names -> ID AND names .)
    TYPE_SYNONYM    reduce using rule 98 (names -> ID AND names .)
    TYPEDECL        reduce using rule 98 (names -> ID AND names .)
    END             reduce using rule 98 (names -> ID AND names .)
    FIXES           reduce using rule 98 (names -> ID AND names .)
    CONSTRAINS      reduce using rule 98 (names -> ID AND names .)
    ASSUMES         reduce using rule 98 (names -> ID AND names .)
    DEFINES         reduce using rule 98 (names -> ID AND names .)
    NOTES           reduce using rule 98 (names -> ID AND names .)
    BEGIN           reduce using rule 98 (names -> ID AND names .)
    OPENING         reduce using rule 98 (names -> ID AND names .)
    ID              reduce using rule 98 (names -> ID AND names .)
    QUOTED_STRING   reduce using rule 98 (names -> ID AND names .)
    LEFT_BRACKET    reduce using rule 98 (names -> ID AND names .)
    PLUS            reduce using rule 98 (names -> ID AND names .)


state 121

    (213) mixfix -> LEFT_PAREN template . RIGHT_PAREN
    (214) mixfix -> LEFT_PAREN template . prios RIGHT_PAREN
    (215) mixfix -> LEFT_PAREN template . NAT RIGHT_PAREN
    (216) mixfix -> LEFT_PAREN template . prios NAT RIGHT_PAREN
    (225) prios -> . LEFT_BRACKET nat_list RIGHT_BRACKET

    RIGHT_PAREN     shift and go to state 185
    NAT             shift and go to state 187
    LEFT_BRACKET    shift and go to state 188

    prios                          shift and go to state 186

state 122

    (217) mixfix -> LEFT_PAREN INFIX . template NAT RIGHT_PAREN
    (223) template -> . QUOTED_STRING
    (224) template -> . CARTOUCHE

    QUOTED_STRING   shift and go to state 125
    CARTOUCHE       shift and go to state 126

    template                       shift and go to state 189

state 123

    (218) mixfix -> LEFT_PAREN INFIXL . template NAT RIGHT_PAREN
    (223) template -> . QUOTED_STRING
    (224) template -> . CARTOUCHE

    QUOTED_STRING   shift and go to state 125
    CARTOUCHE       shift and go to state 126

    template                       shift and go to state 190

state 124

    (219) mixfix -> LEFT_PAREN INFIXR . template NAT RIGHT_PAREN
    (223) template -> . QUOTED_STRING
    (224) template -> . CARTOUCHE

    QUOTED_STRING   shift and go to state 125
    CARTOUCHE       shift and go to state 126

    template                       shift and go to state 191

state 125

    (223) template -> QUOTED_STRING .

    RIGHT_PAREN     reduce using rule 223 (template -> QUOTED_STRING .)
    NAT             reduce using rule 223 (template -> QUOTED_STRING .)
    LEFT_BRACKET    reduce using rule 223 (template -> QUOTED_STRING .)


state 126

    (224) template -> CARTOUCHE .

    RIGHT_PAREN     reduce using rule 224 (template -> CARTOUCHE .)
    NAT             reduce using rule 224 (template -> CARTOUCHE .)
    LEFT_BRACKET    reduce using rule 224 (template -> CARTOUCHE .)


state 127

    (220) mixfix -> BINDER template . NAT RIGHT_PAREN
    (221) mixfix -> BINDER template . prio NAT RIGHT_PAREN
    (226) prio -> . LEFT_BRACKET NAT RIGHT_BRACKET

    NAT             shift and go to state 192
    LEFT_BRACKET    shift and go to state 194

    prio                           shift and go to state 193

state 128

    (87) var -> GREEK COLON COLON . ID
    (89) var -> GREEK COLON COLON . QUOTED_STRING
    (94) var -> GREEK COLON COLON . ID mixfix
    (96) var -> GREEK COLON COLON . QUOTED_STRING mixfix

    ID              shift and go to state 195
    QUOTED_STRING   shift and go to state 196


state 129

    (140) specification -> vars WHERE multi_specs .

    AXIOMATIZATION  reduce using rule 140 (specification -> vars WHERE multi_specs .)
    FUN             reduce using rule 140 (specification -> vars WHERE multi_specs .)
    FUNCTION        reduce using rule 140 (specification -> vars WHERE multi_specs .)
    LEMMA           reduce using rule 140 (specification -> vars WHERE multi_specs .)
    LOCALE          reduce using rule 140 (specification -> vars WHERE multi_specs .)
    METHOD          reduce using rule 140 (specification -> vars WHERE multi_specs .)
    SECTION         reduce using rule 140 (specification -> vars WHERE multi_specs .)
    TEXT            reduce using rule 140 (specification -> vars WHERE multi_specs .)
    TYPE_SYNONYM    reduce using rule 140 (specification -> vars WHERE multi_specs .)
    TYPEDECL        reduce using rule 140 (specification -> vars WHERE multi_specs .)
    END             reduce using rule 140 (specification -> vars WHERE multi_specs .)


state 130

    (129) multi_specs -> structured_spec .
    (130) multi_specs -> structured_spec . multi_specs
    (129) multi_specs -> . structured_spec
    (130) multi_specs -> . structured_spec multi_specs
    (131) structured_spec -> . ID spec_prems for_fixes
    (132) structured_spec -> . QUOTED_STRING spec_prems for_fixes
    (133) structured_spec -> . thmdecl ID spec_prems for_fixes
    (134) structured_spec -> . thmdecl QUOTED_STRING spec_prems for_fixes
    (106) thmdecl -> . thmbind COLON
    (113) thmbind -> . ID
    (114) thmbind -> . ID attributes
    (115) thmbind -> . attributes
    (116) attributes -> . LEFT_BRACKET attributes_list RIGHT_BRACKET

    AXIOMATIZATION  reduce using rule 129 (multi_specs -> structured_spec .)
    FUN             reduce using rule 129 (multi_specs -> structured_spec .)
    FUNCTION        reduce using rule 129 (multi_specs -> structured_spec .)
    LEMMA           reduce using rule 129 (multi_specs -> structured_spec .)
    LOCALE          reduce using rule 129 (multi_specs -> structured_spec .)
    METHOD          reduce using rule 129 (multi_specs -> structured_spec .)
    SECTION         reduce using rule 129 (multi_specs -> structured_spec .)
    TEXT            reduce using rule 129 (multi_specs -> structured_spec .)
    TYPE_SYNONYM    reduce using rule 129 (multi_specs -> structured_spec .)
    TYPEDECL        reduce using rule 129 (multi_specs -> structured_spec .)
    END             reduce using rule 129 (multi_specs -> structured_spec .)
    ID              shift and go to state 131
    QUOTED_STRING   shift and go to state 132
    LEFT_BRACKET    shift and go to state 73

    structured_spec                shift and go to state 130
    multi_specs                    shift and go to state 197
    thmdecl                        shift and go to state 133
    thmbind                        shift and go to state 71
    attributes                     shift and go to state 72

state 131

    (131) structured_spec -> ID . spec_prems for_fixes
    (113) thmbind -> ID .
    (114) thmbind -> ID . attributes
    (135) spec_prems -> . empty
    (136) spec_prems -> . IF prop_list
    (116) attributes -> . LEFT_BRACKET attributes_list RIGHT_BRACKET
    (253) empty -> .

  ! shift/reduce conflict for LEFT_BRACKET resolved as shift
    COLON           reduce using rule 113 (thmbind -> ID .)
    IF              shift and go to state 107
    LEFT_BRACKET    shift and go to state 73
    FOR             reduce using rule 253 (empty -> .)
    ID              reduce using rule 253 (empty -> .)
    QUOTED_STRING   reduce using rule 253 (empty -> .)
    AXIOMATIZATION  reduce using rule 253 (empty -> .)
    FUN             reduce using rule 253 (empty -> .)
    FUNCTION        reduce using rule 253 (empty -> .)
    LEMMA           reduce using rule 253 (empty -> .)
    LOCALE          reduce using rule 253 (empty -> .)
    METHOD          reduce using rule 253 (empty -> .)
    SECTION         reduce using rule 253 (empty -> .)
    TEXT            reduce using rule 253 (empty -> .)
    TYPE_SYNONYM    reduce using rule 253 (empty -> .)
    TYPEDECL        reduce using rule 253 (empty -> .)
    END             reduce using rule 253 (empty -> .)

  ! LEFT_BRACKET    [ reduce using rule 253 (empty -> .) ]

    spec_prems                     shift and go to state 198
    attributes                     shift and go to state 110
    empty                          shift and go to state 106

state 132

    (132) structured_spec -> QUOTED_STRING . spec_prems for_fixes
    (135) spec_prems -> . empty
    (136) spec_prems -> . IF prop_list
    (253) empty -> .

    IF              shift and go to state 107
    FOR             reduce using rule 253 (empty -> .)
    ID              reduce using rule 253 (empty -> .)
    QUOTED_STRING   reduce using rule 253 (empty -> .)
    LEFT_BRACKET    reduce using rule 253 (empty -> .)
    AXIOMATIZATION  reduce using rule 253 (empty -> .)
    FUN             reduce using rule 253 (empty -> .)
    FUNCTION        reduce using rule 253 (empty -> .)
    LEMMA           reduce using rule 253 (empty -> .)
    LOCALE          reduce using rule 253 (empty -> .)
    METHOD          reduce using rule 253 (empty -> .)
    SECTION         reduce using rule 253 (empty -> .)
    TEXT            reduce using rule 253 (empty -> .)
    TYPE_SYNONYM    reduce using rule 253 (empty -> .)
    TYPEDECL        reduce using rule 253 (empty -> .)
    END             reduce using rule 253 (empty -> .)

    spec_prems                     shift and go to state 199
    empty                          shift and go to state 106

state 133

    (133) structured_spec -> thmdecl . ID spec_prems for_fixes
    (134) structured_spec -> thmdecl . QUOTED_STRING spec_prems for_fixes

    ID              shift and go to state 200
    QUOTED_STRING   shift and go to state 201


state 134

    (234) opts -> LEFT_PAREN opt_list RIGHT_PAREN .

    ID              reduce using rule 234 (opts -> LEFT_PAREN opt_list RIGHT_PAREN .)
    GREEK           reduce using rule 234 (opts -> LEFT_PAREN opt_list RIGHT_PAREN .)


state 135

    (237) opt_list -> sequential COMMA . opt_list
    (235) opt_list -> . sequential
    (236) opt_list -> . domintros
    (237) opt_list -> . sequential COMMA opt_list
    (238) opt_list -> . domintros COMMA opt_list
    (239) sequential -> . ID
    (240) sequential -> . QUOTED_STRING
    (241) domintros -> . ID
    (242) domintros -> . QUOTED_STRING

    ID              shift and go to state 88
    QUOTED_STRING   shift and go to state 89

    sequential                     shift and go to state 86
    opt_list                       shift and go to state 202
    domintros                      shift and go to state 87

state 136

    (238) opt_list -> domintros COMMA . opt_list
    (235) opt_list -> . sequential
    (236) opt_list -> . domintros
    (237) opt_list -> . sequential COMMA opt_list
    (238) opt_list -> . domintros COMMA opt_list
    (239) sequential -> . ID
    (240) sequential -> . QUOTED_STRING
    (241) domintros -> . ID
    (242) domintros -> . QUOTED_STRING

    ID              shift and go to state 88
    QUOTED_STRING   shift and go to state 89

    domintros                      shift and go to state 87
    opt_list                       shift and go to state 203
    sequential                     shift and go to state 86

state 137

    (44) lemma_block -> LEMMA ID COLON assumes_block . shows_clause lemma_proof_block
    (53) shows_clause -> . SHOWS QUOTED_STRING

    SHOWS           shift and go to state 205

    shows_clause                   shift and go to state 204

state 138

    (48) assumes_block -> ASSUMES . assumptions_list
    (49) assumptions_list -> . assumption AND assumptions_list
    (50) assumptions_list -> . assumption
    (51) assumption -> . QUOTED_STRING
    (52) assumption -> . NAT COLON QUOTED_STRING

    QUOTED_STRING   shift and go to state 208
    NAT             shift and go to state 209

    assumptions_list               shift and go to state 206
    assumption                     shift and go to state 207

state 139

    (175) locale_block -> LOCALE ID BEGIN content . END

    END             shift and go to state 210


state 140

    (176) locale_block -> LOCALE ID comment_block BEGIN . content END
    (10) content -> . statement content
    (11) content -> . empty
    (12) statement -> . axiomatization_block
    (13) statement -> . fun_block
    (14) statement -> . lemma_block
    (15) statement -> . locale_block
    (16) statement -> . method_block
    (17) statement -> . section_block
    (18) statement -> . text_block
    (19) statement -> . type_synonym
    (20) statement -> . typedecl
    (253) empty -> .
    (142) axiomatization_block -> . AXIOMATIZATION
    (143) axiomatization_block -> . AXIOMATIZATION vars
    (144) axiomatization_block -> . AXIOMATIZATION WHERE axiomatization
    (145) axiomatization_block -> . AXIOMATIZATION vars WHERE axiomatization
    (230) fun_block -> . FUN specification
    (231) fun_block -> . FUNCTION specification
    (232) fun_block -> . FUN opts specification
    (233) fun_block -> . FUNCTION opts specification
    (44) lemma_block -> . LEMMA ID COLON assumes_block shows_clause lemma_proof_block
    (174) locale_block -> . LOCALE ID
    (175) locale_block -> . LOCALE ID BEGIN content END
    (176) locale_block -> . LOCALE ID comment_block BEGIN content END
    (177) locale_block -> . LOCALE ID EQ locale
    (178) locale_block -> . LOCALE ID EQ locale BEGIN content END
    (21) method_block -> . METHOD method_name EQUALS instruction
    (243) section_block -> . SECTION CARTOUCHE
    (244) text_block -> . TEXT CARTOUCHE
    (211) type_synonym -> . TYPE_SYNONYM typespec EQUALS ID
    (212) type_synonym -> . TYPE_SYNONYM typespec EQUALS ID mixfix
    (209) typedecl -> . TYPEDECL typespec
    (210) typedecl -> . TYPEDECL typespec mixfix

    END             reduce using rule 253 (empty -> .)
    AXIOMATIZATION  shift and go to state 32
    FUN             shift and go to state 33
    FUNCTION        shift and go to state 34
    LEMMA           shift and go to state 35
    LOCALE          shift and go to state 36
    METHOD          shift and go to state 37
    SECTION         shift and go to state 6
    TEXT            shift and go to state 7
    TYPE_SYNONYM    shift and go to state 38
    TYPEDECL        shift and go to state 39

    content                        shift and go to state 211
    statement                      shift and go to state 21
    empty                          shift and go to state 22
    axiomatization_block           shift and go to state 23
    fun_block                      shift and go to state 24
    lemma_block                    shift and go to state 25
    locale_block                   shift and go to state 26
    method_block                   shift and go to state 27
    section_block                  shift and go to state 28
    text_block                     shift and go to state 29
    type_synonym                   shift and go to state 30
    typedecl                       shift and go to state 31

state 141

    (154) instance -> ID .
    (155) instance -> ID . pos_insts
    (156) instance -> ID . name_insts
    (159) qualifier -> ID .
    (161) qualifier -> ID . QUESTION_MARK
    (163) pos_insts -> . UNDERSCORE
    (164) pos_insts -> . ID
    (165) pos_insts -> . QUOTED_STRING
    (166) pos_insts -> . UNDERSCORE pos_insts
    (167) pos_insts -> . ID pos_insts
    (168) pos_insts -> . QUOTED_STRING pos_insts
    (169) name_insts -> . WHERE name_insts_list

    PLUS            reduce using rule 154 (instance -> ID .)
    FOR             reduce using rule 154 (instance -> ID .)
    OPENING         reduce using rule 154 (instance -> ID .)
    BEGIN           reduce using rule 154 (instance -> ID .)
    AXIOMATIZATION  reduce using rule 154 (instance -> ID .)
    FUN             reduce using rule 154 (instance -> ID .)
    FUNCTION        reduce using rule 154 (instance -> ID .)
    LEMMA           reduce using rule 154 (instance -> ID .)
    LOCALE          reduce using rule 154 (instance -> ID .)
    METHOD          reduce using rule 154 (instance -> ID .)
    SECTION         reduce using rule 154 (instance -> ID .)
    TEXT            reduce using rule 154 (instance -> ID .)
    TYPE_SYNONYM    reduce using rule 154 (instance -> ID .)
    TYPEDECL        reduce using rule 154 (instance -> ID .)
    END             reduce using rule 154 (instance -> ID .)
    COLON           reduce using rule 159 (qualifier -> ID .)
    QUESTION_MARK   shift and go to state 215
    UNDERSCORE      shift and go to state 216
    ID              shift and go to state 212
    QUOTED_STRING   shift and go to state 217
    WHERE           shift and go to state 218

    pos_insts                      shift and go to state 213
    name_insts                     shift and go to state 214

state 142

    (177) locale_block -> LOCALE ID EQ locale .
    (178) locale_block -> LOCALE ID EQ locale . BEGIN content END
    (183) locale -> locale . opening
    (184) locale -> locale . opening PLUS context_elem_list
    (141) opening -> . OPENING names_list

    AXIOMATIZATION  reduce using rule 177 (locale_block -> LOCALE ID EQ locale .)
    FUN             reduce using rule 177 (locale_block -> LOCALE ID EQ locale .)
    FUNCTION        reduce using rule 177 (locale_block -> LOCALE ID EQ locale .)
    LEMMA           reduce using rule 177 (locale_block -> LOCALE ID EQ locale .)
    LOCALE          reduce using rule 177 (locale_block -> LOCALE ID EQ locale .)
    METHOD          reduce using rule 177 (locale_block -> LOCALE ID EQ locale .)
    SECTION         reduce using rule 177 (locale_block -> LOCALE ID EQ locale .)
    TEXT            reduce using rule 177 (locale_block -> LOCALE ID EQ locale .)
    TYPE_SYNONYM    reduce using rule 177 (locale_block -> LOCALE ID EQ locale .)
    TYPEDECL        reduce using rule 177 (locale_block -> LOCALE ID EQ locale .)
    END             reduce using rule 177 (locale_block -> LOCALE ID EQ locale .)
    BEGIN           shift and go to state 219
    OPENING         shift and go to state 147

    opening                        shift and go to state 220

state 143

    (179) locale -> context_elem_list .

    BEGIN           reduce using rule 179 (locale -> context_elem_list .)
    OPENING         reduce using rule 179 (locale -> context_elem_list .)
    AXIOMATIZATION  reduce using rule 179 (locale -> context_elem_list .)
    FUN             reduce using rule 179 (locale -> context_elem_list .)
    FUNCTION        reduce using rule 179 (locale -> context_elem_list .)
    LEMMA           reduce using rule 179 (locale -> context_elem_list .)
    LOCALE          reduce using rule 179 (locale -> context_elem_list .)
    METHOD          reduce using rule 179 (locale -> context_elem_list .)
    SECTION         reduce using rule 179 (locale -> context_elem_list .)
    TEXT            reduce using rule 179 (locale -> context_elem_list .)
    TYPE_SYNONYM    reduce using rule 179 (locale -> context_elem_list .)
    TYPEDECL        reduce using rule 179 (locale -> context_elem_list .)
    END             reduce using rule 179 (locale -> context_elem_list .)


state 144

    (180) locale -> opening .
    (181) locale -> opening . PLUS context_elem_list

    BEGIN           reduce using rule 180 (locale -> opening .)
    OPENING         reduce using rule 180 (locale -> opening .)
    AXIOMATIZATION  reduce using rule 180 (locale -> opening .)
    FUN             reduce using rule 180 (locale -> opening .)
    FUNCTION        reduce using rule 180 (locale -> opening .)
    LEMMA           reduce using rule 180 (locale -> opening .)
    LOCALE          reduce using rule 180 (locale -> opening .)
    METHOD          reduce using rule 180 (locale -> opening .)
    SECTION         reduce using rule 180 (locale -> opening .)
    TEXT            reduce using rule 180 (locale -> opening .)
    TYPE_SYNONYM    reduce using rule 180 (locale -> opening .)
    TYPEDECL        reduce using rule 180 (locale -> opening .)
    END             reduce using rule 180 (locale -> opening .)
    PLUS            shift and go to state 221


state 145

    (182) locale -> locale_expr .
    (185) locale -> locale_expr . opening PLUS context_elem_list
    (141) opening -> . OPENING names_list

  ! shift/reduce conflict for OPENING resolved as shift
    BEGIN           reduce using rule 182 (locale -> locale_expr .)
    AXIOMATIZATION  reduce using rule 182 (locale -> locale_expr .)
    FUN             reduce using rule 182 (locale -> locale_expr .)
    FUNCTION        reduce using rule 182 (locale -> locale_expr .)
    LEMMA           reduce using rule 182 (locale -> locale_expr .)
    LOCALE          reduce using rule 182 (locale -> locale_expr .)
    METHOD          reduce using rule 182 (locale -> locale_expr .)
    SECTION         reduce using rule 182 (locale -> locale_expr .)
    TEXT            reduce using rule 182 (locale -> locale_expr .)
    TYPE_SYNONYM    reduce using rule 182 (locale -> locale_expr .)
    TYPEDECL        reduce using rule 182 (locale -> locale_expr .)
    END             reduce using rule 182 (locale -> locale_expr .)
    OPENING         shift and go to state 147

  ! OPENING         [ reduce using rule 182 (locale -> locale_expr .) ]

    opening                        shift and go to state 222

state 146

    (186) context_elem_list -> context_elem .
    (187) context_elem_list -> context_elem . context_elem_list
    (186) context_elem_list -> . context_elem
    (187) context_elem_list -> . context_elem context_elem_list
    (188) context_elem -> . FIXES vars
    (189) context_elem -> . CONSTRAINS name_type_list
    (190) context_elem -> . ASSUMES prop_list
    (191) context_elem -> . DEFINES defines_list
    (192) context_elem -> . NOTES notes_list

    BEGIN           reduce using rule 186 (context_elem_list -> context_elem .)
    OPENING         reduce using rule 186 (context_elem_list -> context_elem .)
    AXIOMATIZATION  reduce using rule 186 (context_elem_list -> context_elem .)
    FUN             reduce using rule 186 (context_elem_list -> context_elem .)
    FUNCTION        reduce using rule 186 (context_elem_list -> context_elem .)
    LEMMA           reduce using rule 186 (context_elem_list -> context_elem .)
    LOCALE          reduce using rule 186 (context_elem_list -> context_elem .)
    METHOD          reduce using rule 186 (context_elem_list -> context_elem .)
    SECTION         reduce using rule 186 (context_elem_list -> context_elem .)
    TEXT            reduce using rule 186 (context_elem_list -> context_elem .)
    TYPE_SYNONYM    reduce using rule 186 (context_elem_list -> context_elem .)
    TYPEDECL        reduce using rule 186 (context_elem_list -> context_elem .)
    END             reduce using rule 186 (context_elem_list -> context_elem .)
    FIXES           shift and go to state 149
    CONSTRAINS      shift and go to state 150
    ASSUMES         shift and go to state 151
    DEFINES         shift and go to state 152
    NOTES           shift and go to state 153

    context_elem                   shift and go to state 146
    context_elem_list              shift and go to state 223

state 147

    (141) opening -> OPENING . names_list
    (99) names_list -> . ID
    (100) names_list -> . ID names

    ID              shift and go to state 225

    names_list                     shift and go to state 224

state 148

    (151) locale_expr -> instance_list . for_fixes
    (127) for_fixes -> . empty
    (128) for_fixes -> . FOR vars
    (253) empty -> .

    FOR             shift and go to state 168
    OPENING         reduce using rule 253 (empty -> .)
    BEGIN           reduce using rule 253 (empty -> .)
    AXIOMATIZATION  reduce using rule 253 (empty -> .)
    FUN             reduce using rule 253 (empty -> .)
    FUNCTION        reduce using rule 253 (empty -> .)
    LEMMA           reduce using rule 253 (empty -> .)
    LOCALE          reduce using rule 253 (empty -> .)
    METHOD          reduce using rule 253 (empty -> .)
    SECTION         reduce using rule 253 (empty -> .)
    TEXT            reduce using rule 253 (empty -> .)
    TYPE_SYNONYM    reduce using rule 253 (empty -> .)
    TYPEDECL        reduce using rule 253 (empty -> .)
    END             reduce using rule 253 (empty -> .)

    for_fixes                      shift and go to state 226
    empty                          shift and go to state 167

state 149

    (188) context_elem -> FIXES . vars
    (83) vars -> . var
    (84) vars -> . var AND vars
    (85) var -> . names
    (86) var -> . ID COLON COLON ID
    (87) var -> . GREEK COLON COLON ID
    (88) var -> . ID COLON COLON QUOTED_STRING
    (89) var -> . GREEK COLON COLON QUOTED_STRING
    (90) var -> . names COLON COLON ID
    (91) var -> . names COLON COLON QUOTED_STRING
    (92) var -> . ID mixfix
    (93) var -> . ID COLON COLON ID mixfix
    (94) var -> . GREEK COLON COLON ID mixfix
    (95) var -> . ID COLON COLON QUOTED_STRING mixfix
    (96) var -> . GREEK COLON COLON QUOTED_STRING mixfix
    (97) names -> . ID
    (98) names -> . ID AND names

    ID              shift and go to state 48
    GREEK           shift and go to state 49

    vars                           shift and go to state 227
    var                            shift and go to state 46
    names                          shift and go to state 47

state 150

    (189) context_elem -> CONSTRAINS . name_type_list
    (193) name_type_list -> . ID COLON COLON ID
    (194) name_type_list -> . ID COLON COLON ID AND name_type_list

    ID              shift and go to state 229

    name_type_list                 shift and go to state 228

state 151

    (190) context_elem -> ASSUMES . prop_list
    (137) prop_list -> . ID
    (138) prop_list -> . ID prop_list
    (139) prop_list -> . ID AND prop_list

    ID              shift and go to state 170

    prop_list                      shift and go to state 230

state 152

    (191) context_elem -> DEFINES . defines_list
    (195) defines_list -> . defines_list_element
    (196) defines_list -> . defines_list_element AND defines_list
    (197) defines_list_element -> . ID
    (198) defines_list_element -> . QUOTED_STRING
    (199) defines_list_element -> . thmdecl ID
    (200) defines_list_element -> . thmdecl QUOTED_STRING
    (201) defines_list_element -> . ID prop_pat
    (202) defines_list_element -> . QUOTED_STRING prop_pat
    (203) defines_list_element -> . thmdecl ID prop_pat
    (204) defines_list_element -> . thmdecl QUOTED_STRING prop_pat
    (106) thmdecl -> . thmbind COLON
    (113) thmbind -> . ID
    (114) thmbind -> . ID attributes
    (115) thmbind -> . attributes
    (116) attributes -> . LEFT_BRACKET attributes_list RIGHT_BRACKET

    ID              shift and go to state 233
    QUOTED_STRING   shift and go to state 234
    LEFT_BRACKET    shift and go to state 73

    defines_list                   shift and go to state 231
    defines_list_element           shift and go to state 232
    thmdecl                        shift and go to state 235
    thmbind                        shift and go to state 71
    attributes                     shift and go to state 72

state 153

    (192) context_elem -> NOTES . notes_list
    (205) notes_list -> . notes_list_element
    (206) notes_list -> . notes_list_element AND notes_list
    (207) notes_list_element -> . thmdef thms
    (208) notes_list_element -> . thms
    (107) thmdef -> . thmbind EQ
    (111) thms -> . thm
    (112) thms -> . thm thms
    (113) thmbind -> . ID
    (114) thmbind -> . ID attributes
    (115) thmbind -> . attributes
    (108) thm -> . ID attributes
    (109) thm -> . ID
    (110) thm -> . attributes
    (116) attributes -> . LEFT_BRACKET attributes_list RIGHT_BRACKET

    ID              shift and go to state 242
    LEFT_BRACKET    shift and go to state 73

    notes_list                     shift and go to state 236
    notes_list_element             shift and go to state 237
    thmdef                         shift and go to state 238
    thms                           shift and go to state 239
    thmbind                        shift and go to state 240
    thm                            shift and go to state 241
    attributes                     shift and go to state 243

state 154

    (152) instance_list -> instance .
    (153) instance_list -> instance . PLUS instance_list

    FOR             reduce using rule 152 (instance_list -> instance .)
    OPENING         reduce using rule 152 (instance_list -> instance .)
    BEGIN           reduce using rule 152 (instance_list -> instance .)
    AXIOMATIZATION  reduce using rule 152 (instance_list -> instance .)
    FUN             reduce using rule 152 (instance_list -> instance .)
    FUNCTION        reduce using rule 152 (instance_list -> instance .)
    LEMMA           reduce using rule 152 (instance_list -> instance .)
    LOCALE          reduce using rule 152 (instance_list -> instance .)
    METHOD          reduce using rule 152 (instance_list -> instance .)
    SECTION         reduce using rule 152 (instance_list -> instance .)
    TEXT            reduce using rule 152 (instance_list -> instance .)
    TYPE_SYNONYM    reduce using rule 152 (instance_list -> instance .)
    TYPEDECL        reduce using rule 152 (instance_list -> instance .)
    END             reduce using rule 152 (instance_list -> instance .)
    PLUS            shift and go to state 244


state 155

    (157) instance -> qualifier . COLON ID pos_insts
    (158) instance -> qualifier . COLON ID name_insts

    COLON           shift and go to state 245


state 156

    (160) qualifier -> QUOTED_STRING .
    (162) qualifier -> QUOTED_STRING . QUESTION_MARK

    COLON           reduce using rule 160 (qualifier -> QUOTED_STRING .)
    QUESTION_MARK   shift and go to state 246


state 157

    (245) comment_block -> COMMENT_CARTOUCHE CARTOUCHE .

    BEGIN           reduce using rule 245 (comment_block -> COMMENT_CARTOUCHE CARTOUCHE .)


state 158

    (21) method_block -> METHOD method_name EQUALS instruction .

    AXIOMATIZATION  reduce using rule 21 (method_block -> METHOD method_name EQUALS instruction .)
    FUN             reduce using rule 21 (method_block -> METHOD method_name EQUALS instruction .)
    FUNCTION        reduce using rule 21 (method_block -> METHOD method_name EQUALS instruction .)
    LEMMA           reduce using rule 21 (method_block -> METHOD method_name EQUALS instruction .)
    LOCALE          reduce using rule 21 (method_block -> METHOD method_name EQUALS instruction .)
    METHOD          reduce using rule 21 (method_block -> METHOD method_name EQUALS instruction .)
    SECTION         reduce using rule 21 (method_block -> METHOD method_name EQUALS instruction .)
    TEXT            reduce using rule 21 (method_block -> METHOD method_name EQUALS instruction .)
    TYPE_SYNONYM    reduce using rule 21 (method_block -> METHOD method_name EQUALS instruction .)
    TYPEDECL        reduce using rule 21 (method_block -> METHOD method_name EQUALS instruction .)
    END             reduce using rule 21 (method_block -> METHOD method_name EQUALS instruction .)


state 159

    (23) instruction -> single_instruction .
    (24) instruction -> single_instruction . instruction_modifier
    (25) instruction -> single_instruction . instruction_modifier COMMA instruction
    (26) instruction -> single_instruction . SEMICOLON instruction
    (27) instruction -> single_instruction . COMMA instruction
    (30) instruction_modifier -> . PLUS
    (31) instruction_modifier -> . QUESTION_MARK

    AXIOMATIZATION  reduce using rule 23 (instruction -> single_instruction .)
    FUN             reduce using rule 23 (instruction -> single_instruction .)
    FUNCTION        reduce using rule 23 (instruction -> single_instruction .)
    LEMMA           reduce using rule 23 (instruction -> single_instruction .)
    LOCALE          reduce using rule 23 (instruction -> single_instruction .)
    METHOD          reduce using rule 23 (instruction -> single_instruction .)
    SECTION         reduce using rule 23 (instruction -> single_instruction .)
    TEXT            reduce using rule 23 (instruction -> single_instruction .)
    TYPE_SYNONYM    reduce using rule 23 (instruction -> single_instruction .)
    TYPEDECL        reduce using rule 23 (instruction -> single_instruction .)
    END             reduce using rule 23 (instruction -> single_instruction .)
    RIGHT_PAREN     reduce using rule 23 (instruction -> single_instruction .)
    APPLY           reduce using rule 23 (instruction -> single_instruction .)
    USING           reduce using rule 23 (instruction -> single_instruction .)
    BY              reduce using rule 23 (instruction -> single_instruction .)
    DONE            reduce using rule 23 (instruction -> single_instruction .)
    SORRY           reduce using rule 23 (instruction -> single_instruction .)
    SUBGOAL         reduce using rule 23 (instruction -> single_instruction .)
    SEMICOLON       shift and go to state 249
    COMMA           shift and go to state 248
    PLUS            shift and go to state 250
    QUESTION_MARK   shift and go to state 251

    instruction_modifier           shift and go to state 247

state 160

    (28) instruction -> LEFT_PAREN . instruction RIGHT_PAREN
    (29) instruction -> LEFT_PAREN . instruction RIGHT_PAREN instruction_modifier
    (34) single_instruction -> LEFT_PAREN . ID method_args RIGHT_PAREN
    (35) single_instruction -> LEFT_PAREN . ID method_args RIGHT_PAREN instruction_modifier
    (23) instruction -> . single_instruction
    (24) instruction -> . single_instruction instruction_modifier
    (25) instruction -> . single_instruction instruction_modifier COMMA instruction
    (26) instruction -> . single_instruction SEMICOLON instruction
    (27) instruction -> . single_instruction COMMA instruction
    (28) instruction -> . LEFT_PAREN instruction RIGHT_PAREN
    (29) instruction -> . LEFT_PAREN instruction RIGHT_PAREN instruction_modifier
    (32) single_instruction -> . ID
    (33) single_instruction -> . ID method_args
    (34) single_instruction -> . LEFT_PAREN ID method_args RIGHT_PAREN
    (35) single_instruction -> . LEFT_PAREN ID method_args RIGHT_PAREN instruction_modifier

    ID              shift and go to state 253
    LEFT_PAREN      shift and go to state 160

    instruction                    shift and go to state 252
    single_instruction             shift and go to state 159

state 161

    (32) single_instruction -> ID .
    (33) single_instruction -> ID . method_args
    (36) method_args -> . ID COLON method_arg method_args
    (37) method_args -> . method_arg method_args
    (38) method_args -> . empty
    (39) method_arg -> . ID
    (40) method_arg -> . ID LEFT_PAREN NAT RIGHT_PAREN
    (41) method_arg -> . ID DOT ID
    (42) method_arg -> . ID DOT ID LEFT_PAREN NAT RIGHT_PAREN
    (43) method_arg -> . QUOTED_STRING
    (253) empty -> .

  ! reduce/reduce conflict for SEMICOLON resolved using rule 32 (single_instruction -> ID .)
  ! reduce/reduce conflict for COMMA resolved using rule 32 (single_instruction -> ID .)
  ! reduce/reduce conflict for PLUS resolved using rule 32 (single_instruction -> ID .)
  ! reduce/reduce conflict for QUESTION_MARK resolved using rule 32 (single_instruction -> ID .)
  ! reduce/reduce conflict for AXIOMATIZATION resolved using rule 32 (single_instruction -> ID .)
  ! reduce/reduce conflict for FUN resolved using rule 32 (single_instruction -> ID .)
  ! reduce/reduce conflict for FUNCTION resolved using rule 32 (single_instruction -> ID .)
  ! reduce/reduce conflict for LEMMA resolved using rule 32 (single_instruction -> ID .)
  ! reduce/reduce conflict for LOCALE resolved using rule 32 (single_instruction -> ID .)
  ! reduce/reduce conflict for METHOD resolved using rule 32 (single_instruction -> ID .)
  ! reduce/reduce conflict for SECTION resolved using rule 32 (single_instruction -> ID .)
  ! reduce/reduce conflict for TEXT resolved using rule 32 (single_instruction -> ID .)
  ! reduce/reduce conflict for TYPE_SYNONYM resolved using rule 32 (single_instruction -> ID .)
  ! reduce/reduce conflict for TYPEDECL resolved using rule 32 (single_instruction -> ID .)
  ! reduce/reduce conflict for END resolved using rule 32 (single_instruction -> ID .)
  ! reduce/reduce conflict for RIGHT_PAREN resolved using rule 32 (single_instruction -> ID .)
  ! reduce/reduce conflict for APPLY resolved using rule 32 (single_instruction -> ID .)
  ! reduce/reduce conflict for USING resolved using rule 32 (single_instruction -> ID .)
  ! reduce/reduce conflict for BY resolved using rule 32 (single_instruction -> ID .)
  ! reduce/reduce conflict for DONE resolved using rule 32 (single_instruction -> ID .)
  ! reduce/reduce conflict for SORRY resolved using rule 32 (single_instruction -> ID .)
  ! reduce/reduce conflict for SUBGOAL resolved using rule 32 (single_instruction -> ID .)
    SEMICOLON       reduce using rule 32 (single_instruction -> ID .)
    COMMA           reduce using rule 32 (single_instruction -> ID .)
    PLUS            reduce using rule 32 (single_instruction -> ID .)
    QUESTION_MARK   reduce using rule 32 (single_instruction -> ID .)
    AXIOMATIZATION  reduce using rule 32 (single_instruction -> ID .)
    FUN             reduce using rule 32 (single_instruction -> ID .)
    FUNCTION        reduce using rule 32 (single_instruction -> ID .)
    LEMMA           reduce using rule 32 (single_instruction -> ID .)
    LOCALE          reduce using rule 32 (single_instruction -> ID .)
    METHOD          reduce using rule 32 (single_instruction -> ID .)
    SECTION         reduce using rule 32 (single_instruction -> ID .)
    TEXT            reduce using rule 32 (single_instruction -> ID .)
    TYPE_SYNONYM    reduce using rule 32 (single_instruction -> ID .)
    TYPEDECL        reduce using rule 32 (single_instruction -> ID .)
    END             reduce using rule 32 (single_instruction -> ID .)
    RIGHT_PAREN     reduce using rule 32 (single_instruction -> ID .)
    APPLY           reduce using rule 32 (single_instruction -> ID .)
    USING           reduce using rule 32 (single_instruction -> ID .)
    BY              reduce using rule 32 (single_instruction -> ID .)
    DONE            reduce using rule 32 (single_instruction -> ID .)
    SORRY           reduce using rule 32 (single_instruction -> ID .)
    SUBGOAL         reduce using rule 32 (single_instruction -> ID .)
    ID              shift and go to state 254
    QUOTED_STRING   shift and go to state 258

  ! SEMICOLON       [ reduce using rule 253 (empty -> .) ]
  ! COMMA           [ reduce using rule 253 (empty -> .) ]
  ! PLUS            [ reduce using rule 253 (empty -> .) ]
  ! QUESTION_MARK   [ reduce using rule 253 (empty -> .) ]
  ! AXIOMATIZATION  [ reduce using rule 253 (empty -> .) ]
  ! FUN             [ reduce using rule 253 (empty -> .) ]
  ! FUNCTION        [ reduce using rule 253 (empty -> .) ]
  ! LEMMA           [ reduce using rule 253 (empty -> .) ]
  ! LOCALE          [ reduce using rule 253 (empty -> .) ]
  ! METHOD          [ reduce using rule 253 (empty -> .) ]
  ! SECTION         [ reduce using rule 253 (empty -> .) ]
  ! TEXT            [ reduce using rule 253 (empty -> .) ]
  ! TYPE_SYNONYM    [ reduce using rule 253 (empty -> .) ]
  ! TYPEDECL        [ reduce using rule 253 (empty -> .) ]
  ! END             [ reduce using rule 253 (empty -> .) ]
  ! RIGHT_PAREN     [ reduce using rule 253 (empty -> .) ]
  ! APPLY           [ reduce using rule 253 (empty -> .) ]
  ! USING           [ reduce using rule 253 (empty -> .) ]
  ! BY              [ reduce using rule 253 (empty -> .) ]
  ! DONE            [ reduce using rule 253 (empty -> .) ]
  ! SORRY           [ reduce using rule 253 (empty -> .) ]
  ! SUBGOAL         [ reduce using rule 253 (empty -> .) ]

    method_args                    shift and go to state 255
    method_arg                     shift and go to state 256
    empty                          shift and go to state 257

state 162

    (211) type_synonym -> TYPE_SYNONYM typespec EQUALS ID .
    (212) type_synonym -> TYPE_SYNONYM typespec EQUALS ID . mixfix
    (213) mixfix -> . LEFT_PAREN template RIGHT_PAREN
    (214) mixfix -> . LEFT_PAREN template prios RIGHT_PAREN
    (215) mixfix -> . LEFT_PAREN template NAT RIGHT_PAREN
    (216) mixfix -> . LEFT_PAREN template prios NAT RIGHT_PAREN
    (217) mixfix -> . LEFT_PAREN INFIX template NAT RIGHT_PAREN
    (218) mixfix -> . LEFT_PAREN INFIXL template NAT RIGHT_PAREN
    (219) mixfix -> . LEFT_PAREN INFIXR template NAT RIGHT_PAREN
    (220) mixfix -> . BINDER template NAT RIGHT_PAREN
    (221) mixfix -> . BINDER template prio NAT RIGHT_PAREN
    (222) mixfix -> . STRUCTURE

    AXIOMATIZATION  reduce using rule 211 (type_synonym -> TYPE_SYNONYM typespec EQUALS ID .)
    FUN             reduce using rule 211 (type_synonym -> TYPE_SYNONYM typespec EQUALS ID .)
    FUNCTION        reduce using rule 211 (type_synonym -> TYPE_SYNONYM typespec EQUALS ID .)
    LEMMA           reduce using rule 211 (type_synonym -> TYPE_SYNONYM typespec EQUALS ID .)
    LOCALE          reduce using rule 211 (type_synonym -> TYPE_SYNONYM typespec EQUALS ID .)
    METHOD          reduce using rule 211 (type_synonym -> TYPE_SYNONYM typespec EQUALS ID .)
    SECTION         reduce using rule 211 (type_synonym -> TYPE_SYNONYM typespec EQUALS ID .)
    TEXT            reduce using rule 211 (type_synonym -> TYPE_SYNONYM typespec EQUALS ID .)
    TYPE_SYNONYM    reduce using rule 211 (type_synonym -> TYPE_SYNONYM typespec EQUALS ID .)
    TYPEDECL        reduce using rule 211 (type_synonym -> TYPE_SYNONYM typespec EQUALS ID .)
    END             reduce using rule 211 (type_synonym -> TYPE_SYNONYM typespec EQUALS ID .)
    LEFT_PAREN      shift and go to state 79
    BINDER          shift and go to state 80
    STRUCTURE       shift and go to state 81

    mixfix                         shift and go to state 259

state 163

    (79) typearg -> ID COLON COLON . ID

    ID              shift and go to state 260


state 164

    (81) typeargs -> typearg COMMA typeargs .

    ID              reduce using rule 81 (typeargs -> typearg COMMA typeargs .)
    RIGHT_PAREN     reduce using rule 81 (typeargs -> typearg COMMA typeargs .)


state 165

    (82) typeargs -> LEFT_PAREN typeargs RIGHT_PAREN .

    ID              reduce using rule 82 (typeargs -> LEFT_PAREN typeargs RIGHT_PAREN .)
    RIGHT_PAREN     reduce using rule 82 (typeargs -> LEFT_PAREN typeargs RIGHT_PAREN .)


state 166

    (146) axiomatization -> axiomatization_header spec_prems for_fixes .

    AXIOMATIZATION  reduce using rule 146 (axiomatization -> axiomatization_header spec_prems for_fixes .)
    FUN             reduce using rule 146 (axiomatization -> axiomatization_header spec_prems for_fixes .)
    FUNCTION        reduce using rule 146 (axiomatization -> axiomatization_header spec_prems for_fixes .)
    LEMMA           reduce using rule 146 (axiomatization -> axiomatization_header spec_prems for_fixes .)
    LOCALE          reduce using rule 146 (axiomatization -> axiomatization_header spec_prems for_fixes .)
    METHOD          reduce using rule 146 (axiomatization -> axiomatization_header spec_prems for_fixes .)
    SECTION         reduce using rule 146 (axiomatization -> axiomatization_header spec_prems for_fixes .)
    TEXT            reduce using rule 146 (axiomatization -> axiomatization_header spec_prems for_fixes .)
    TYPE_SYNONYM    reduce using rule 146 (axiomatization -> axiomatization_header spec_prems for_fixes .)
    TYPEDECL        reduce using rule 146 (axiomatization -> axiomatization_header spec_prems for_fixes .)
    END             reduce using rule 146 (axiomatization -> axiomatization_header spec_prems for_fixes .)


state 167

    (127) for_fixes -> empty .

    AXIOMATIZATION  reduce using rule 127 (for_fixes -> empty .)
    FUN             reduce using rule 127 (for_fixes -> empty .)
    FUNCTION        reduce using rule 127 (for_fixes -> empty .)
    LEMMA           reduce using rule 127 (for_fixes -> empty .)
    LOCALE          reduce using rule 127 (for_fixes -> empty .)
    METHOD          reduce using rule 127 (for_fixes -> empty .)
    SECTION         reduce using rule 127 (for_fixes -> empty .)
    TEXT            reduce using rule 127 (for_fixes -> empty .)
    TYPE_SYNONYM    reduce using rule 127 (for_fixes -> empty .)
    TYPEDECL        reduce using rule 127 (for_fixes -> empty .)
    END             reduce using rule 127 (for_fixes -> empty .)
    OPENING         reduce using rule 127 (for_fixes -> empty .)
    BEGIN           reduce using rule 127 (for_fixes -> empty .)
    ID              reduce using rule 127 (for_fixes -> empty .)
    QUOTED_STRING   reduce using rule 127 (for_fixes -> empty .)
    LEFT_BRACKET    reduce using rule 127 (for_fixes -> empty .)


state 168

    (128) for_fixes -> FOR . vars
    (83) vars -> . var
    (84) vars -> . var AND vars
    (85) var -> . names
    (86) var -> . ID COLON COLON ID
    (87) var -> . GREEK COLON COLON ID
    (88) var -> . ID COLON COLON QUOTED_STRING
    (89) var -> . GREEK COLON COLON QUOTED_STRING
    (90) var -> . names COLON COLON ID
    (91) var -> . names COLON COLON QUOTED_STRING
    (92) var -> . ID mixfix
    (93) var -> . ID COLON COLON ID mixfix
    (94) var -> . GREEK COLON COLON ID mixfix
    (95) var -> . ID COLON COLON QUOTED_STRING mixfix
    (96) var -> . GREEK COLON COLON QUOTED_STRING mixfix
    (97) names -> . ID
    (98) names -> . ID AND names

    ID              shift and go to state 48
    GREEK           shift and go to state 49

    vars                           shift and go to state 261
    var                            shift and go to state 46
    names                          shift and go to state 47

state 169

    (136) spec_prems -> IF prop_list .

    FOR             reduce using rule 136 (spec_prems -> IF prop_list .)
    AXIOMATIZATION  reduce using rule 136 (spec_prems -> IF prop_list .)
    FUN             reduce using rule 136 (spec_prems -> IF prop_list .)
    FUNCTION        reduce using rule 136 (spec_prems -> IF prop_list .)
    LEMMA           reduce using rule 136 (spec_prems -> IF prop_list .)
    LOCALE          reduce using rule 136 (spec_prems -> IF prop_list .)
    METHOD          reduce using rule 136 (spec_prems -> IF prop_list .)
    SECTION         reduce using rule 136 (spec_prems -> IF prop_list .)
    TEXT            reduce using rule 136 (spec_prems -> IF prop_list .)
    TYPE_SYNONYM    reduce using rule 136 (spec_prems -> IF prop_list .)
    TYPEDECL        reduce using rule 136 (spec_prems -> IF prop_list .)
    END             reduce using rule 136 (spec_prems -> IF prop_list .)
    ID              reduce using rule 136 (spec_prems -> IF prop_list .)
    QUOTED_STRING   reduce using rule 136 (spec_prems -> IF prop_list .)
    LEFT_BRACKET    reduce using rule 136 (spec_prems -> IF prop_list .)


state 170

    (137) prop_list -> ID .
    (138) prop_list -> ID . prop_list
    (139) prop_list -> ID . AND prop_list
    (137) prop_list -> . ID
    (138) prop_list -> . ID prop_list
    (139) prop_list -> . ID AND prop_list

  ! shift/reduce conflict for ID resolved as shift
    FOR             reduce using rule 137 (prop_list -> ID .)
    AXIOMATIZATION  reduce using rule 137 (prop_list -> ID .)
    FUN             reduce using rule 137 (prop_list -> ID .)
    FUNCTION        reduce using rule 137 (prop_list -> ID .)
    LEMMA           reduce using rule 137 (prop_list -> ID .)
    LOCALE          reduce using rule 137 (prop_list -> ID .)
    METHOD          reduce using rule 137 (prop_list -> ID .)
    SECTION         reduce using rule 137 (prop_list -> ID .)
    TEXT            reduce using rule 137 (prop_list -> ID .)
    TYPE_SYNONYM    reduce using rule 137 (prop_list -> ID .)
    TYPEDECL        reduce using rule 137 (prop_list -> ID .)
    END             reduce using rule 137 (prop_list -> ID .)
    QUOTED_STRING   reduce using rule 137 (prop_list -> ID .)
    LEFT_BRACKET    reduce using rule 137 (prop_list -> ID .)
    FIXES           reduce using rule 137 (prop_list -> ID .)
    CONSTRAINS      reduce using rule 137 (prop_list -> ID .)
    ASSUMES         reduce using rule 137 (prop_list -> ID .)
    DEFINES         reduce using rule 137 (prop_list -> ID .)
    NOTES           reduce using rule 137 (prop_list -> ID .)
    BEGIN           reduce using rule 137 (prop_list -> ID .)
    OPENING         reduce using rule 137 (prop_list -> ID .)
    AND             shift and go to state 263
    ID              shift and go to state 170

  ! ID              [ reduce using rule 137 (prop_list -> ID .) ]

    prop_list                      shift and go to state 262

state 171

    (149) axiomatization_header -> thmdecl ID AND . axiomatization_header
    (147) axiomatization_header -> . thmdecl ID
    (148) axiomatization_header -> . thmdecl QUOTED_STRING
    (149) axiomatization_header -> . thmdecl ID AND axiomatization_header
    (150) axiomatization_header -> . thmdecl QUOTED_STRING AND axiomatization_header
    (106) thmdecl -> . thmbind COLON
    (113) thmbind -> . ID
    (114) thmbind -> . ID attributes
    (115) thmbind -> . attributes
    (116) attributes -> . LEFT_BRACKET attributes_list RIGHT_BRACKET

    ID              shift and go to state 70
    LEFT_BRACKET    shift and go to state 73

    thmdecl                        shift and go to state 69
    axiomatization_header          shift and go to state 264
    thmbind                        shift and go to state 71
    attributes                     shift and go to state 72

state 172

    (150) axiomatization_header -> thmdecl QUOTED_STRING AND . axiomatization_header
    (147) axiomatization_header -> . thmdecl ID
    (148) axiomatization_header -> . thmdecl QUOTED_STRING
    (149) axiomatization_header -> . thmdecl ID AND axiomatization_header
    (150) axiomatization_header -> . thmdecl QUOTED_STRING AND axiomatization_header
    (106) thmdecl -> . thmbind COLON
    (113) thmbind -> . ID
    (114) thmbind -> . ID attributes
    (115) thmbind -> . attributes
    (116) attributes -> . LEFT_BRACKET attributes_list RIGHT_BRACKET

    ID              shift and go to state 70
    LEFT_BRACKET    shift and go to state 73

    thmdecl                        shift and go to state 69
    axiomatization_header          shift and go to state 265
    thmbind                        shift and go to state 71
    attributes                     shift and go to state 72

state 173

    (116) attributes -> LEFT_BRACKET attributes_list RIGHT_BRACKET .

    COLON           reduce using rule 116 (attributes -> LEFT_BRACKET attributes_list RIGHT_BRACKET .)
    EQ              reduce using rule 116 (attributes -> LEFT_BRACKET attributes_list RIGHT_BRACKET .)
    ID              reduce using rule 116 (attributes -> LEFT_BRACKET attributes_list RIGHT_BRACKET .)
    LEFT_BRACKET    reduce using rule 116 (attributes -> LEFT_BRACKET attributes_list RIGHT_BRACKET .)
    AND             reduce using rule 116 (attributes -> LEFT_BRACKET attributes_list RIGHT_BRACKET .)
    FIXES           reduce using rule 116 (attributes -> LEFT_BRACKET attributes_list RIGHT_BRACKET .)
    CONSTRAINS      reduce using rule 116 (attributes -> LEFT_BRACKET attributes_list RIGHT_BRACKET .)
    ASSUMES         reduce using rule 116 (attributes -> LEFT_BRACKET attributes_list RIGHT_BRACKET .)
    DEFINES         reduce using rule 116 (attributes -> LEFT_BRACKET attributes_list RIGHT_BRACKET .)
    NOTES           reduce using rule 116 (attributes -> LEFT_BRACKET attributes_list RIGHT_BRACKET .)
    BEGIN           reduce using rule 116 (attributes -> LEFT_BRACKET attributes_list RIGHT_BRACKET .)
    OPENING         reduce using rule 116 (attributes -> LEFT_BRACKET attributes_list RIGHT_BRACKET .)
    AXIOMATIZATION  reduce using rule 116 (attributes -> LEFT_BRACKET attributes_list RIGHT_BRACKET .)
    FUN             reduce using rule 116 (attributes -> LEFT_BRACKET attributes_list RIGHT_BRACKET .)
    FUNCTION        reduce using rule 116 (attributes -> LEFT_BRACKET attributes_list RIGHT_BRACKET .)
    LEMMA           reduce using rule 116 (attributes -> LEFT_BRACKET attributes_list RIGHT_BRACKET .)
    LOCALE          reduce using rule 116 (attributes -> LEFT_BRACKET attributes_list RIGHT_BRACKET .)
    METHOD          reduce using rule 116 (attributes -> LEFT_BRACKET attributes_list RIGHT_BRACKET .)
    SECTION         reduce using rule 116 (attributes -> LEFT_BRACKET attributes_list RIGHT_BRACKET .)
    TEXT            reduce using rule 116 (attributes -> LEFT_BRACKET attributes_list RIGHT_BRACKET .)
    TYPE_SYNONYM    reduce using rule 116 (attributes -> LEFT_BRACKET attributes_list RIGHT_BRACKET .)
    TYPEDECL        reduce using rule 116 (attributes -> LEFT_BRACKET attributes_list RIGHT_BRACKET .)
    END             reduce using rule 116 (attributes -> LEFT_BRACKET attributes_list RIGHT_BRACKET .)


state 174

    (119) attributes_list -> attribute COMMA . attributes_list
    (117) attributes_list -> . empty
    (118) attributes_list -> . attribute
    (119) attributes_list -> . attribute COMMA attributes_list
    (253) empty -> .
    (120) attribute -> . ID args

    RIGHT_BRACKET   reduce using rule 253 (empty -> .)
    ID              shift and go to state 115

    attribute                      shift and go to state 114
    attributes_list                shift and go to state 266
    empty                          shift and go to state 113

state 175

    (124) arg -> ID .

    ID              reduce using rule 124 (arg -> ID .)
    LEFT_PAREN      reduce using rule 124 (arg -> ID .)
    LEFT_BRACKET    reduce using rule 124 (arg -> ID .)
    COMMA           reduce using rule 124 (arg -> ID .)
    RIGHT_BRACKET   reduce using rule 124 (arg -> ID .)
    RIGHT_PAREN     reduce using rule 124 (arg -> ID .)


state 176

    (120) attribute -> ID args .

    COMMA           reduce using rule 120 (attribute -> ID args .)
    RIGHT_BRACKET   reduce using rule 120 (attribute -> ID args .)


state 177

    (121) args -> empty .

    COMMA           reduce using rule 121 (args -> empty .)
    RIGHT_BRACKET   reduce using rule 121 (args -> empty .)
    RIGHT_PAREN     reduce using rule 121 (args -> empty .)


state 178

    (122) args -> arg .
    (123) args -> arg . args
    (121) args -> . empty
    (122) args -> . arg
    (123) args -> . arg args
    (253) empty -> .
    (124) arg -> . ID
    (125) arg -> . LEFT_PAREN args RIGHT_PAREN
    (126) arg -> . LEFT_BRACKET args RIGHT_BRACKET

  ! reduce/reduce conflict for COMMA resolved using rule 122 (args -> arg .)
  ! reduce/reduce conflict for RIGHT_BRACKET resolved using rule 122 (args -> arg .)
  ! reduce/reduce conflict for RIGHT_PAREN resolved using rule 122 (args -> arg .)
    COMMA           reduce using rule 122 (args -> arg .)
    RIGHT_BRACKET   reduce using rule 122 (args -> arg .)
    RIGHT_PAREN     reduce using rule 122 (args -> arg .)
    ID              shift and go to state 175
    LEFT_PAREN      shift and go to state 179
    LEFT_BRACKET    shift and go to state 180

  ! COMMA           [ reduce using rule 253 (empty -> .) ]
  ! RIGHT_BRACKET   [ reduce using rule 253 (empty -> .) ]
  ! RIGHT_PAREN     [ reduce using rule 253 (empty -> .) ]

    arg                            shift and go to state 178
    args                           shift and go to state 267
    empty                          shift and go to state 177

state 179

    (125) arg -> LEFT_PAREN . args RIGHT_PAREN
    (121) args -> . empty
    (122) args -> . arg
    (123) args -> . arg args
    (253) empty -> .
    (124) arg -> . ID
    (125) arg -> . LEFT_PAREN args RIGHT_PAREN
    (126) arg -> . LEFT_BRACKET args RIGHT_BRACKET

    RIGHT_PAREN     reduce using rule 253 (empty -> .)
    ID              shift and go to state 175
    LEFT_PAREN      shift and go to state 179
    LEFT_BRACKET    shift and go to state 180

    args                           shift and go to state 268
    empty                          shift and go to state 177
    arg                            shift and go to state 178

state 180

    (126) arg -> LEFT_BRACKET . args RIGHT_BRACKET
    (121) args -> . empty
    (122) args -> . arg
    (123) args -> . arg args
    (253) empty -> .
    (124) arg -> . ID
    (125) arg -> . LEFT_PAREN args RIGHT_PAREN
    (126) arg -> . LEFT_BRACKET args RIGHT_BRACKET

    RIGHT_BRACKET   reduce using rule 253 (empty -> .)
    ID              shift and go to state 175
    LEFT_PAREN      shift and go to state 179
    LEFT_BRACKET    shift and go to state 180

    args                           shift and go to state 269
    empty                          shift and go to state 177
    arg                            shift and go to state 178

state 181

    (90) var -> names COLON COLON ID .

    AND             reduce using rule 90 (var -> names COLON COLON ID .)
    WHERE           reduce using rule 90 (var -> names COLON COLON ID .)
    AXIOMATIZATION  reduce using rule 90 (var -> names COLON COLON ID .)
    FUN             reduce using rule 90 (var -> names COLON COLON ID .)
    FUNCTION        reduce using rule 90 (var -> names COLON COLON ID .)
    LEMMA           reduce using rule 90 (var -> names COLON COLON ID .)
    LOCALE          reduce using rule 90 (var -> names COLON COLON ID .)
    METHOD          reduce using rule 90 (var -> names COLON COLON ID .)
    SECTION         reduce using rule 90 (var -> names COLON COLON ID .)
    TEXT            reduce using rule 90 (var -> names COLON COLON ID .)
    TYPE_SYNONYM    reduce using rule 90 (var -> names COLON COLON ID .)
    TYPEDECL        reduce using rule 90 (var -> names COLON COLON ID .)
    END             reduce using rule 90 (var -> names COLON COLON ID .)
    FIXES           reduce using rule 90 (var -> names COLON COLON ID .)
    CONSTRAINS      reduce using rule 90 (var -> names COLON COLON ID .)
    ASSUMES         reduce using rule 90 (var -> names COLON COLON ID .)
    DEFINES         reduce using rule 90 (var -> names COLON COLON ID .)
    NOTES           reduce using rule 90 (var -> names COLON COLON ID .)
    BEGIN           reduce using rule 90 (var -> names COLON COLON ID .)
    OPENING         reduce using rule 90 (var -> names COLON COLON ID .)
    ID              reduce using rule 90 (var -> names COLON COLON ID .)
    QUOTED_STRING   reduce using rule 90 (var -> names COLON COLON ID .)
    LEFT_BRACKET    reduce using rule 90 (var -> names COLON COLON ID .)


state 182

    (91) var -> names COLON COLON QUOTED_STRING .

    AND             reduce using rule 91 (var -> names COLON COLON QUOTED_STRING .)
    WHERE           reduce using rule 91 (var -> names COLON COLON QUOTED_STRING .)
    AXIOMATIZATION  reduce using rule 91 (var -> names COLON COLON QUOTED_STRING .)
    FUN             reduce using rule 91 (var -> names COLON COLON QUOTED_STRING .)
    FUNCTION        reduce using rule 91 (var -> names COLON COLON QUOTED_STRING .)
    LEMMA           reduce using rule 91 (var -> names COLON COLON QUOTED_STRING .)
    LOCALE          reduce using rule 91 (var -> names COLON COLON QUOTED_STRING .)
    METHOD          reduce using rule 91 (var -> names COLON COLON QUOTED_STRING .)
    SECTION         reduce using rule 91 (var -> names COLON COLON QUOTED_STRING .)
    TEXT            reduce using rule 91 (var -> names COLON COLON QUOTED_STRING .)
    TYPE_SYNONYM    reduce using rule 91 (var -> names COLON COLON QUOTED_STRING .)
    TYPEDECL        reduce using rule 91 (var -> names COLON COLON QUOTED_STRING .)
    END             reduce using rule 91 (var -> names COLON COLON QUOTED_STRING .)
    FIXES           reduce using rule 91 (var -> names COLON COLON QUOTED_STRING .)
    CONSTRAINS      reduce using rule 91 (var -> names COLON COLON QUOTED_STRING .)
    ASSUMES         reduce using rule 91 (var -> names COLON COLON QUOTED_STRING .)
    DEFINES         reduce using rule 91 (var -> names COLON COLON QUOTED_STRING .)
    NOTES           reduce using rule 91 (var -> names COLON COLON QUOTED_STRING .)
    BEGIN           reduce using rule 91 (var -> names COLON COLON QUOTED_STRING .)
    OPENING         reduce using rule 91 (var -> names COLON COLON QUOTED_STRING .)
    ID              reduce using rule 91 (var -> names COLON COLON QUOTED_STRING .)
    QUOTED_STRING   reduce using rule 91 (var -> names COLON COLON QUOTED_STRING .)
    LEFT_BRACKET    reduce using rule 91 (var -> names COLON COLON QUOTED_STRING .)


state 183

    (86) var -> ID COLON COLON ID .
    (93) var -> ID COLON COLON ID . mixfix
    (213) mixfix -> . LEFT_PAREN template RIGHT_PAREN
    (214) mixfix -> . LEFT_PAREN template prios RIGHT_PAREN
    (215) mixfix -> . LEFT_PAREN template NAT RIGHT_PAREN
    (216) mixfix -> . LEFT_PAREN template prios NAT RIGHT_PAREN
    (217) mixfix -> . LEFT_PAREN INFIX template NAT RIGHT_PAREN
    (218) mixfix -> . LEFT_PAREN INFIXL template NAT RIGHT_PAREN
    (219) mixfix -> . LEFT_PAREN INFIXR template NAT RIGHT_PAREN
    (220) mixfix -> . BINDER template NAT RIGHT_PAREN
    (221) mixfix -> . BINDER template prio NAT RIGHT_PAREN
    (222) mixfix -> . STRUCTURE

    AND             reduce using rule 86 (var -> ID COLON COLON ID .)
    WHERE           reduce using rule 86 (var -> ID COLON COLON ID .)
    AXIOMATIZATION  reduce using rule 86 (var -> ID COLON COLON ID .)
    FUN             reduce using rule 86 (var -> ID COLON COLON ID .)
    FUNCTION        reduce using rule 86 (var -> ID COLON COLON ID .)
    LEMMA           reduce using rule 86 (var -> ID COLON COLON ID .)
    LOCALE          reduce using rule 86 (var -> ID COLON COLON ID .)
    METHOD          reduce using rule 86 (var -> ID COLON COLON ID .)
    SECTION         reduce using rule 86 (var -> ID COLON COLON ID .)
    TEXT            reduce using rule 86 (var -> ID COLON COLON ID .)
    TYPE_SYNONYM    reduce using rule 86 (var -> ID COLON COLON ID .)
    TYPEDECL        reduce using rule 86 (var -> ID COLON COLON ID .)
    END             reduce using rule 86 (var -> ID COLON COLON ID .)
    FIXES           reduce using rule 86 (var -> ID COLON COLON ID .)
    CONSTRAINS      reduce using rule 86 (var -> ID COLON COLON ID .)
    ASSUMES         reduce using rule 86 (var -> ID COLON COLON ID .)
    DEFINES         reduce using rule 86 (var -> ID COLON COLON ID .)
    NOTES           reduce using rule 86 (var -> ID COLON COLON ID .)
    BEGIN           reduce using rule 86 (var -> ID COLON COLON ID .)
    OPENING         reduce using rule 86 (var -> ID COLON COLON ID .)
    ID              reduce using rule 86 (var -> ID COLON COLON ID .)
    QUOTED_STRING   reduce using rule 86 (var -> ID COLON COLON ID .)
    LEFT_BRACKET    reduce using rule 86 (var -> ID COLON COLON ID .)
    LEFT_PAREN      shift and go to state 79
    BINDER          shift and go to state 80
    STRUCTURE       shift and go to state 81

    mixfix                         shift and go to state 270

state 184

    (88) var -> ID COLON COLON QUOTED_STRING .
    (95) var -> ID COLON COLON QUOTED_STRING . mixfix
    (213) mixfix -> . LEFT_PAREN template RIGHT_PAREN
    (214) mixfix -> . LEFT_PAREN template prios RIGHT_PAREN
    (215) mixfix -> . LEFT_PAREN template NAT RIGHT_PAREN
    (216) mixfix -> . LEFT_PAREN template prios NAT RIGHT_PAREN
    (217) mixfix -> . LEFT_PAREN INFIX template NAT RIGHT_PAREN
    (218) mixfix -> . LEFT_PAREN INFIXL template NAT RIGHT_PAREN
    (219) mixfix -> . LEFT_PAREN INFIXR template NAT RIGHT_PAREN
    (220) mixfix -> . BINDER template NAT RIGHT_PAREN
    (221) mixfix -> . BINDER template prio NAT RIGHT_PAREN
    (222) mixfix -> . STRUCTURE

    AND             reduce using rule 88 (var -> ID COLON COLON QUOTED_STRING .)
    WHERE           reduce using rule 88 (var -> ID COLON COLON QUOTED_STRING .)
    AXIOMATIZATION  reduce using rule 88 (var -> ID COLON COLON QUOTED_STRING .)
    FUN             reduce using rule 88 (var -> ID COLON COLON QUOTED_STRING .)
    FUNCTION        reduce using rule 88 (var -> ID COLON COLON QUOTED_STRING .)
    LEMMA           reduce using rule 88 (var -> ID COLON COLON QUOTED_STRING .)
    LOCALE          reduce using rule 88 (var -> ID COLON COLON QUOTED_STRING .)
    METHOD          reduce using rule 88 (var -> ID COLON COLON QUOTED_STRING .)
    SECTION         reduce using rule 88 (var -> ID COLON COLON QUOTED_STRING .)
    TEXT            reduce using rule 88 (var -> ID COLON COLON QUOTED_STRING .)
    TYPE_SYNONYM    reduce using rule 88 (var -> ID COLON COLON QUOTED_STRING .)
    TYPEDECL        reduce using rule 88 (var -> ID COLON COLON QUOTED_STRING .)
    END             reduce using rule 88 (var -> ID COLON COLON QUOTED_STRING .)
    FIXES           reduce using rule 88 (var -> ID COLON COLON QUOTED_STRING .)
    CONSTRAINS      reduce using rule 88 (var -> ID COLON COLON QUOTED_STRING .)
    ASSUMES         reduce using rule 88 (var -> ID COLON COLON QUOTED_STRING .)
    DEFINES         reduce using rule 88 (var -> ID COLON COLON QUOTED_STRING .)
    NOTES           reduce using rule 88 (var -> ID COLON COLON QUOTED_STRING .)
    BEGIN           reduce using rule 88 (var -> ID COLON COLON QUOTED_STRING .)
    OPENING         reduce using rule 88 (var -> ID COLON COLON QUOTED_STRING .)
    ID              reduce using rule 88 (var -> ID COLON COLON QUOTED_STRING .)
    QUOTED_STRING   reduce using rule 88 (var -> ID COLON COLON QUOTED_STRING .)
    LEFT_BRACKET    reduce using rule 88 (var -> ID COLON COLON QUOTED_STRING .)
    LEFT_PAREN      shift and go to state 79
    BINDER          shift and go to state 80
    STRUCTURE       shift and go to state 81

    mixfix                         shift and go to state 271

state 185

    (213) mixfix -> LEFT_PAREN template RIGHT_PAREN .

    AND             reduce using rule 213 (mixfix -> LEFT_PAREN template RIGHT_PAREN .)
    WHERE           reduce using rule 213 (mixfix -> LEFT_PAREN template RIGHT_PAREN .)
    AXIOMATIZATION  reduce using rule 213 (mixfix -> LEFT_PAREN template RIGHT_PAREN .)
    FUN             reduce using rule 213 (mixfix -> LEFT_PAREN template RIGHT_PAREN .)
    FUNCTION        reduce using rule 213 (mixfix -> LEFT_PAREN template RIGHT_PAREN .)
    LEMMA           reduce using rule 213 (mixfix -> LEFT_PAREN template RIGHT_PAREN .)
    LOCALE          reduce using rule 213 (mixfix -> LEFT_PAREN template RIGHT_PAREN .)
    METHOD          reduce using rule 213 (mixfix -> LEFT_PAREN template RIGHT_PAREN .)
    SECTION         reduce using rule 213 (mixfix -> LEFT_PAREN template RIGHT_PAREN .)
    TEXT            reduce using rule 213 (mixfix -> LEFT_PAREN template RIGHT_PAREN .)
    TYPE_SYNONYM    reduce using rule 213 (mixfix -> LEFT_PAREN template RIGHT_PAREN .)
    TYPEDECL        reduce using rule 213 (mixfix -> LEFT_PAREN template RIGHT_PAREN .)
    END             reduce using rule 213 (mixfix -> LEFT_PAREN template RIGHT_PAREN .)
    FIXES           reduce using rule 213 (mixfix -> LEFT_PAREN template RIGHT_PAREN .)
    CONSTRAINS      reduce using rule 213 (mixfix -> LEFT_PAREN template RIGHT_PAREN .)
    ASSUMES         reduce using rule 213 (mixfix -> LEFT_PAREN template RIGHT_PAREN .)
    DEFINES         reduce using rule 213 (mixfix -> LEFT_PAREN template RIGHT_PAREN .)
    NOTES           reduce using rule 213 (mixfix -> LEFT_PAREN template RIGHT_PAREN .)
    BEGIN           reduce using rule 213 (mixfix -> LEFT_PAREN template RIGHT_PAREN .)
    OPENING         reduce using rule 213 (mixfix -> LEFT_PAREN template RIGHT_PAREN .)
    ID              reduce using rule 213 (mixfix -> LEFT_PAREN template RIGHT_PAREN .)
    QUOTED_STRING   reduce using rule 213 (mixfix -> LEFT_PAREN template RIGHT_PAREN .)
    LEFT_BRACKET    reduce using rule 213 (mixfix -> LEFT_PAREN template RIGHT_PAREN .)


state 186

    (214) mixfix -> LEFT_PAREN template prios . RIGHT_PAREN
    (216) mixfix -> LEFT_PAREN template prios . NAT RIGHT_PAREN

    RIGHT_PAREN     shift and go to state 272
    NAT             shift and go to state 273


state 187

    (215) mixfix -> LEFT_PAREN template NAT . RIGHT_PAREN

    RIGHT_PAREN     shift and go to state 274


state 188

    (225) prios -> LEFT_BRACKET . nat_list RIGHT_BRACKET
    (227) nat_list -> . NAT
    (228) nat_list -> . NAT COMMA nat_list

    NAT             shift and go to state 276

    nat_list                       shift and go to state 275

state 189

    (217) mixfix -> LEFT_PAREN INFIX template . NAT RIGHT_PAREN

    NAT             shift and go to state 277


state 190

    (218) mixfix -> LEFT_PAREN INFIXL template . NAT RIGHT_PAREN

    NAT             shift and go to state 278


state 191

    (219) mixfix -> LEFT_PAREN INFIXR template . NAT RIGHT_PAREN

    NAT             shift and go to state 279


state 192

    (220) mixfix -> BINDER template NAT . RIGHT_PAREN

    RIGHT_PAREN     shift and go to state 280


state 193

    (221) mixfix -> BINDER template prio . NAT RIGHT_PAREN

    NAT             shift and go to state 281


state 194

    (226) prio -> LEFT_BRACKET . NAT RIGHT_BRACKET

    NAT             shift and go to state 282


state 195

    (87) var -> GREEK COLON COLON ID .
    (94) var -> GREEK COLON COLON ID . mixfix
    (213) mixfix -> . LEFT_PAREN template RIGHT_PAREN
    (214) mixfix -> . LEFT_PAREN template prios RIGHT_PAREN
    (215) mixfix -> . LEFT_PAREN template NAT RIGHT_PAREN
    (216) mixfix -> . LEFT_PAREN template prios NAT RIGHT_PAREN
    (217) mixfix -> . LEFT_PAREN INFIX template NAT RIGHT_PAREN
    (218) mixfix -> . LEFT_PAREN INFIXL template NAT RIGHT_PAREN
    (219) mixfix -> . LEFT_PAREN INFIXR template NAT RIGHT_PAREN
    (220) mixfix -> . BINDER template NAT RIGHT_PAREN
    (221) mixfix -> . BINDER template prio NAT RIGHT_PAREN
    (222) mixfix -> . STRUCTURE

    AND             reduce using rule 87 (var -> GREEK COLON COLON ID .)
    WHERE           reduce using rule 87 (var -> GREEK COLON COLON ID .)
    AXIOMATIZATION  reduce using rule 87 (var -> GREEK COLON COLON ID .)
    FUN             reduce using rule 87 (var -> GREEK COLON COLON ID .)
    FUNCTION        reduce using rule 87 (var -> GREEK COLON COLON ID .)
    LEMMA           reduce using rule 87 (var -> GREEK COLON COLON ID .)
    LOCALE          reduce using rule 87 (var -> GREEK COLON COLON ID .)
    METHOD          reduce using rule 87 (var -> GREEK COLON COLON ID .)
    SECTION         reduce using rule 87 (var -> GREEK COLON COLON ID .)
    TEXT            reduce using rule 87 (var -> GREEK COLON COLON ID .)
    TYPE_SYNONYM    reduce using rule 87 (var -> GREEK COLON COLON ID .)
    TYPEDECL        reduce using rule 87 (var -> GREEK COLON COLON ID .)
    END             reduce using rule 87 (var -> GREEK COLON COLON ID .)
    FIXES           reduce using rule 87 (var -> GREEK COLON COLON ID .)
    CONSTRAINS      reduce using rule 87 (var -> GREEK COLON COLON ID .)
    ASSUMES         reduce using rule 87 (var -> GREEK COLON COLON ID .)
    DEFINES         reduce using rule 87 (var -> GREEK COLON COLON ID .)
    NOTES           reduce using rule 87 (var -> GREEK COLON COLON ID .)
    BEGIN           reduce using rule 87 (var -> GREEK COLON COLON ID .)
    OPENING         reduce using rule 87 (var -> GREEK COLON COLON ID .)
    ID              reduce using rule 87 (var -> GREEK COLON COLON ID .)
    QUOTED_STRING   reduce using rule 87 (var -> GREEK COLON COLON ID .)
    LEFT_BRACKET    reduce using rule 87 (var -> GREEK COLON COLON ID .)
    LEFT_PAREN      shift and go to state 79
    BINDER          shift and go to state 80
    STRUCTURE       shift and go to state 81

    mixfix                         shift and go to state 283

state 196

    (89) var -> GREEK COLON COLON QUOTED_STRING .
    (96) var -> GREEK COLON COLON QUOTED_STRING . mixfix
    (213) mixfix -> . LEFT_PAREN template RIGHT_PAREN
    (214) mixfix -> . LEFT_PAREN template prios RIGHT_PAREN
    (215) mixfix -> . LEFT_PAREN template NAT RIGHT_PAREN
    (216) mixfix -> . LEFT_PAREN template prios NAT RIGHT_PAREN
    (217) mixfix -> . LEFT_PAREN INFIX template NAT RIGHT_PAREN
    (218) mixfix -> . LEFT_PAREN INFIXL template NAT RIGHT_PAREN
    (219) mixfix -> . LEFT_PAREN INFIXR template NAT RIGHT_PAREN
    (220) mixfix -> . BINDER template NAT RIGHT_PAREN
    (221) mixfix -> . BINDER template prio NAT RIGHT_PAREN
    (222) mixfix -> . STRUCTURE

    AND             reduce using rule 89 (var -> GREEK COLON COLON QUOTED_STRING .)
    WHERE           reduce using rule 89 (var -> GREEK COLON COLON QUOTED_STRING .)
    AXIOMATIZATION  reduce using rule 89 (var -> GREEK COLON COLON QUOTED_STRING .)
    FUN             reduce using rule 89 (var -> GREEK COLON COLON QUOTED_STRING .)
    FUNCTION        reduce using rule 89 (var -> GREEK COLON COLON QUOTED_STRING .)
    LEMMA           reduce using rule 89 (var -> GREEK COLON COLON QUOTED_STRING .)
    LOCALE          reduce using rule 89 (var -> GREEK COLON COLON QUOTED_STRING .)
    METHOD          reduce using rule 89 (var -> GREEK COLON COLON QUOTED_STRING .)
    SECTION         reduce using rule 89 (var -> GREEK COLON COLON QUOTED_STRING .)
    TEXT            reduce using rule 89 (var -> GREEK COLON COLON QUOTED_STRING .)
    TYPE_SYNONYM    reduce using rule 89 (var -> GREEK COLON COLON QUOTED_STRING .)
    TYPEDECL        reduce using rule 89 (var -> GREEK COLON COLON QUOTED_STRING .)
    END             reduce using rule 89 (var -> GREEK COLON COLON QUOTED_STRING .)
    FIXES           reduce using rule 89 (var -> GREEK COLON COLON QUOTED_STRING .)
    CONSTRAINS      reduce using rule 89 (var -> GREEK COLON COLON QUOTED_STRING .)
    ASSUMES         reduce using rule 89 (var -> GREEK COLON COLON QUOTED_STRING .)
    DEFINES         reduce using rule 89 (var -> GREEK COLON COLON QUOTED_STRING .)
    NOTES           reduce using rule 89 (var -> GREEK COLON COLON QUOTED_STRING .)
    BEGIN           reduce using rule 89 (var -> GREEK COLON COLON QUOTED_STRING .)
    OPENING         reduce using rule 89 (var -> GREEK COLON COLON QUOTED_STRING .)
    ID              reduce using rule 89 (var -> GREEK COLON COLON QUOTED_STRING .)
    QUOTED_STRING   reduce using rule 89 (var -> GREEK COLON COLON QUOTED_STRING .)
    LEFT_BRACKET    reduce using rule 89 (var -> GREEK COLON COLON QUOTED_STRING .)
    LEFT_PAREN      shift and go to state 79
    BINDER          shift and go to state 80
    STRUCTURE       shift and go to state 81

    mixfix                         shift and go to state 284

state 197

    (130) multi_specs -> structured_spec multi_specs .

    AXIOMATIZATION  reduce using rule 130 (multi_specs -> structured_spec multi_specs .)
    FUN             reduce using rule 130 (multi_specs -> structured_spec multi_specs .)
    FUNCTION        reduce using rule 130 (multi_specs -> structured_spec multi_specs .)
    LEMMA           reduce using rule 130 (multi_specs -> structured_spec multi_specs .)
    LOCALE          reduce using rule 130 (multi_specs -> structured_spec multi_specs .)
    METHOD          reduce using rule 130 (multi_specs -> structured_spec multi_specs .)
    SECTION         reduce using rule 130 (multi_specs -> structured_spec multi_specs .)
    TEXT            reduce using rule 130 (multi_specs -> structured_spec multi_specs .)
    TYPE_SYNONYM    reduce using rule 130 (multi_specs -> structured_spec multi_specs .)
    TYPEDECL        reduce using rule 130 (multi_specs -> structured_spec multi_specs .)
    END             reduce using rule 130 (multi_specs -> structured_spec multi_specs .)


state 198

    (131) structured_spec -> ID spec_prems . for_fixes
    (127) for_fixes -> . empty
    (128) for_fixes -> . FOR vars
    (253) empty -> .

    FOR             shift and go to state 168
    ID              reduce using rule 253 (empty -> .)
    QUOTED_STRING   reduce using rule 253 (empty -> .)
    LEFT_BRACKET    reduce using rule 253 (empty -> .)
    AXIOMATIZATION  reduce using rule 253 (empty -> .)
    FUN             reduce using rule 253 (empty -> .)
    FUNCTION        reduce using rule 253 (empty -> .)
    LEMMA           reduce using rule 253 (empty -> .)
    LOCALE          reduce using rule 253 (empty -> .)
    METHOD          reduce using rule 253 (empty -> .)
    SECTION         reduce using rule 253 (empty -> .)
    TEXT            reduce using rule 253 (empty -> .)
    TYPE_SYNONYM    reduce using rule 253 (empty -> .)
    TYPEDECL        reduce using rule 253 (empty -> .)
    END             reduce using rule 253 (empty -> .)

    for_fixes                      shift and go to state 285
    empty                          shift and go to state 167

state 199

    (132) structured_spec -> QUOTED_STRING spec_prems . for_fixes
    (127) for_fixes -> . empty
    (128) for_fixes -> . FOR vars
    (253) empty -> .

    FOR             shift and go to state 168
    ID              reduce using rule 253 (empty -> .)
    QUOTED_STRING   reduce using rule 253 (empty -> .)
    LEFT_BRACKET    reduce using rule 253 (empty -> .)
    AXIOMATIZATION  reduce using rule 253 (empty -> .)
    FUN             reduce using rule 253 (empty -> .)
    FUNCTION        reduce using rule 253 (empty -> .)
    LEMMA           reduce using rule 253 (empty -> .)
    LOCALE          reduce using rule 253 (empty -> .)
    METHOD          reduce using rule 253 (empty -> .)
    SECTION         reduce using rule 253 (empty -> .)
    TEXT            reduce using rule 253 (empty -> .)
    TYPE_SYNONYM    reduce using rule 253 (empty -> .)
    TYPEDECL        reduce using rule 253 (empty -> .)
    END             reduce using rule 253 (empty -> .)

    for_fixes                      shift and go to state 286
    empty                          shift and go to state 167

state 200

    (133) structured_spec -> thmdecl ID . spec_prems for_fixes
    (135) spec_prems -> . empty
    (136) spec_prems -> . IF prop_list
    (253) empty -> .

    IF              shift and go to state 107
    FOR             reduce using rule 253 (empty -> .)
    ID              reduce using rule 253 (empty -> .)
    QUOTED_STRING   reduce using rule 253 (empty -> .)
    LEFT_BRACKET    reduce using rule 253 (empty -> .)
    AXIOMATIZATION  reduce using rule 253 (empty -> .)
    FUN             reduce using rule 253 (empty -> .)
    FUNCTION        reduce using rule 253 (empty -> .)
    LEMMA           reduce using rule 253 (empty -> .)
    LOCALE          reduce using rule 253 (empty -> .)
    METHOD          reduce using rule 253 (empty -> .)
    SECTION         reduce using rule 253 (empty -> .)
    TEXT            reduce using rule 253 (empty -> .)
    TYPE_SYNONYM    reduce using rule 253 (empty -> .)
    TYPEDECL        reduce using rule 253 (empty -> .)
    END             reduce using rule 253 (empty -> .)

    spec_prems                     shift and go to state 287
    empty                          shift and go to state 106

state 201

    (134) structured_spec -> thmdecl QUOTED_STRING . spec_prems for_fixes
    (135) spec_prems -> . empty
    (136) spec_prems -> . IF prop_list
    (253) empty -> .

    IF              shift and go to state 107
    FOR             reduce using rule 253 (empty -> .)
    ID              reduce using rule 253 (empty -> .)
    QUOTED_STRING   reduce using rule 253 (empty -> .)
    LEFT_BRACKET    reduce using rule 253 (empty -> .)
    AXIOMATIZATION  reduce using rule 253 (empty -> .)
    FUN             reduce using rule 253 (empty -> .)
    FUNCTION        reduce using rule 253 (empty -> .)
    LEMMA           reduce using rule 253 (empty -> .)
    LOCALE          reduce using rule 253 (empty -> .)
    METHOD          reduce using rule 253 (empty -> .)
    SECTION         reduce using rule 253 (empty -> .)
    TEXT            reduce using rule 253 (empty -> .)
    TYPE_SYNONYM    reduce using rule 253 (empty -> .)
    TYPEDECL        reduce using rule 253 (empty -> .)
    END             reduce using rule 253 (empty -> .)

    spec_prems                     shift and go to state 288
    empty                          shift and go to state 106

state 202

    (237) opt_list -> sequential COMMA opt_list .

    RIGHT_PAREN     reduce using rule 237 (opt_list -> sequential COMMA opt_list .)


state 203

    (238) opt_list -> domintros COMMA opt_list .

    RIGHT_PAREN     reduce using rule 238 (opt_list -> domintros COMMA opt_list .)


state 204

    (44) lemma_block -> LEMMA ID COLON assumes_block shows_clause . lemma_proof_block
    (45) lemma_proof_block -> . PROOF apply_block
    (46) lemma_proof_block -> . apply_block
    (47) lemma_proof_block -> . empty
    (54) apply_block -> . single_apply apply_block
    (55) apply_block -> . subgoal apply_block
    (56) apply_block -> . empty
    (253) empty -> .
    (57) single_apply -> . APPLY instruction
    (58) single_apply -> . APPLY LEFT_PAREN instruction RIGHT_PAREN
    (59) single_apply -> . USING using_block APPLY DASH
    (60) single_apply -> . USING using_block APPLY instruction
    (61) single_apply -> . USING using_block APPLY LEFT_PAREN instruction RIGHT_PAREN
    (62) single_apply -> . BY instruction
    (63) single_apply -> . BY LEFT_PAREN instruction RIGHT_PAREN
    (64) single_apply -> . USING using_block BY instruction
    (65) single_apply -> . USING using_block BY LEFT_PAREN instruction RIGHT_PAREN
    (66) single_apply -> . DONE
    (67) single_apply -> . SORRY
    (75) subgoal -> . SUBGOAL QUOTED_STRING apply_block

    PROOF           shift and go to state 290
    AXIOMATIZATION  reduce using rule 253 (empty -> .)
    FUN             reduce using rule 253 (empty -> .)
    FUNCTION        reduce using rule 253 (empty -> .)
    LEMMA           reduce using rule 253 (empty -> .)
    LOCALE          reduce using rule 253 (empty -> .)
    METHOD          reduce using rule 253 (empty -> .)
    SECTION         reduce using rule 253 (empty -> .)
    TEXT            reduce using rule 253 (empty -> .)
    TYPE_SYNONYM    reduce using rule 253 (empty -> .)
    TYPEDECL        reduce using rule 253 (empty -> .)
    END             reduce using rule 253 (empty -> .)
    APPLY           shift and go to state 295
    USING           shift and go to state 296
    BY              shift and go to state 297
    DONE            shift and go to state 298
    SORRY           shift and go to state 299
    SUBGOAL         shift and go to state 300

    lemma_proof_block              shift and go to state 289
    apply_block                    shift and go to state 291
    empty                          shift and go to state 292
    single_apply                   shift and go to state 293
    subgoal                        shift and go to state 294

state 205

    (53) shows_clause -> SHOWS . QUOTED_STRING

    QUOTED_STRING   shift and go to state 301


state 206

    (48) assumes_block -> ASSUMES assumptions_list .

    SHOWS           reduce using rule 48 (assumes_block -> ASSUMES assumptions_list .)


state 207

    (49) assumptions_list -> assumption . AND assumptions_list
    (50) assumptions_list -> assumption .

    AND             shift and go to state 302
    SHOWS           reduce using rule 50 (assumptions_list -> assumption .)


state 208

    (51) assumption -> QUOTED_STRING .

    AND             reduce using rule 51 (assumption -> QUOTED_STRING .)
    SHOWS           reduce using rule 51 (assumption -> QUOTED_STRING .)


state 209

    (52) assumption -> NAT . COLON QUOTED_STRING

    COLON           shift and go to state 303


state 210

    (175) locale_block -> LOCALE ID BEGIN content END .

    AXIOMATIZATION  reduce using rule 175 (locale_block -> LOCALE ID BEGIN content END .)
    FUN             reduce using rule 175 (locale_block -> LOCALE ID BEGIN content END .)
    FUNCTION        reduce using rule 175 (locale_block -> LOCALE ID BEGIN content END .)
    LEMMA           reduce using rule 175 (locale_block -> LOCALE ID BEGIN content END .)
    LOCALE          reduce using rule 175 (locale_block -> LOCALE ID BEGIN content END .)
    METHOD          reduce using rule 175 (locale_block -> LOCALE ID BEGIN content END .)
    SECTION         reduce using rule 175 (locale_block -> LOCALE ID BEGIN content END .)
    TEXT            reduce using rule 175 (locale_block -> LOCALE ID BEGIN content END .)
    TYPE_SYNONYM    reduce using rule 175 (locale_block -> LOCALE ID BEGIN content END .)
    TYPEDECL        reduce using rule 175 (locale_block -> LOCALE ID BEGIN content END .)
    END             reduce using rule 175 (locale_block -> LOCALE ID BEGIN content END .)


state 211

    (176) locale_block -> LOCALE ID comment_block BEGIN content . END

    END             shift and go to state 304


state 212

    (164) pos_insts -> ID .
    (167) pos_insts -> ID . pos_insts
    (163) pos_insts -> . UNDERSCORE
    (164) pos_insts -> . ID
    (165) pos_insts -> . QUOTED_STRING
    (166) pos_insts -> . UNDERSCORE pos_insts
    (167) pos_insts -> . ID pos_insts
    (168) pos_insts -> . QUOTED_STRING pos_insts

    PLUS            reduce using rule 164 (pos_insts -> ID .)
    FOR             reduce using rule 164 (pos_insts -> ID .)
    OPENING         reduce using rule 164 (pos_insts -> ID .)
    BEGIN           reduce using rule 164 (pos_insts -> ID .)
    AXIOMATIZATION  reduce using rule 164 (pos_insts -> ID .)
    FUN             reduce using rule 164 (pos_insts -> ID .)
    FUNCTION        reduce using rule 164 (pos_insts -> ID .)
    LEMMA           reduce using rule 164 (pos_insts -> ID .)
    LOCALE          reduce using rule 164 (pos_insts -> ID .)
    METHOD          reduce using rule 164 (pos_insts -> ID .)
    SECTION         reduce using rule 164 (pos_insts -> ID .)
    TEXT            reduce using rule 164 (pos_insts -> ID .)
    TYPE_SYNONYM    reduce using rule 164 (pos_insts -> ID .)
    TYPEDECL        reduce using rule 164 (pos_insts -> ID .)
    END             reduce using rule 164 (pos_insts -> ID .)
    UNDERSCORE      shift and go to state 216
    ID              shift and go to state 212
    QUOTED_STRING   shift and go to state 217

    pos_insts                      shift and go to state 305

state 213

    (155) instance -> ID pos_insts .

    PLUS            reduce using rule 155 (instance -> ID pos_insts .)
    FOR             reduce using rule 155 (instance -> ID pos_insts .)
    OPENING         reduce using rule 155 (instance -> ID pos_insts .)
    BEGIN           reduce using rule 155 (instance -> ID pos_insts .)
    AXIOMATIZATION  reduce using rule 155 (instance -> ID pos_insts .)
    FUN             reduce using rule 155 (instance -> ID pos_insts .)
    FUNCTION        reduce using rule 155 (instance -> ID pos_insts .)
    LEMMA           reduce using rule 155 (instance -> ID pos_insts .)
    LOCALE          reduce using rule 155 (instance -> ID pos_insts .)
    METHOD          reduce using rule 155 (instance -> ID pos_insts .)
    SECTION         reduce using rule 155 (instance -> ID pos_insts .)
    TEXT            reduce using rule 155 (instance -> ID pos_insts .)
    TYPE_SYNONYM    reduce using rule 155 (instance -> ID pos_insts .)
    TYPEDECL        reduce using rule 155 (instance -> ID pos_insts .)
    END             reduce using rule 155 (instance -> ID pos_insts .)


state 214

    (156) instance -> ID name_insts .

    PLUS            reduce using rule 156 (instance -> ID name_insts .)
    FOR             reduce using rule 156 (instance -> ID name_insts .)
    OPENING         reduce using rule 156 (instance -> ID name_insts .)
    BEGIN           reduce using rule 156 (instance -> ID name_insts .)
    AXIOMATIZATION  reduce using rule 156 (instance -> ID name_insts .)
    FUN             reduce using rule 156 (instance -> ID name_insts .)
    FUNCTION        reduce using rule 156 (instance -> ID name_insts .)
    LEMMA           reduce using rule 156 (instance -> ID name_insts .)
    LOCALE          reduce using rule 156 (instance -> ID name_insts .)
    METHOD          reduce using rule 156 (instance -> ID name_insts .)
    SECTION         reduce using rule 156 (instance -> ID name_insts .)
    TEXT            reduce using rule 156 (instance -> ID name_insts .)
    TYPE_SYNONYM    reduce using rule 156 (instance -> ID name_insts .)
    TYPEDECL        reduce using rule 156 (instance -> ID name_insts .)
    END             reduce using rule 156 (instance -> ID name_insts .)


state 215

    (161) qualifier -> ID QUESTION_MARK .

    COLON           reduce using rule 161 (qualifier -> ID QUESTION_MARK .)


state 216

    (163) pos_insts -> UNDERSCORE .
    (166) pos_insts -> UNDERSCORE . pos_insts
    (163) pos_insts -> . UNDERSCORE
    (164) pos_insts -> . ID
    (165) pos_insts -> . QUOTED_STRING
    (166) pos_insts -> . UNDERSCORE pos_insts
    (167) pos_insts -> . ID pos_insts
    (168) pos_insts -> . QUOTED_STRING pos_insts

    PLUS            reduce using rule 163 (pos_insts -> UNDERSCORE .)
    FOR             reduce using rule 163 (pos_insts -> UNDERSCORE .)
    OPENING         reduce using rule 163 (pos_insts -> UNDERSCORE .)
    BEGIN           reduce using rule 163 (pos_insts -> UNDERSCORE .)
    AXIOMATIZATION  reduce using rule 163 (pos_insts -> UNDERSCORE .)
    FUN             reduce using rule 163 (pos_insts -> UNDERSCORE .)
    FUNCTION        reduce using rule 163 (pos_insts -> UNDERSCORE .)
    LEMMA           reduce using rule 163 (pos_insts -> UNDERSCORE .)
    LOCALE          reduce using rule 163 (pos_insts -> UNDERSCORE .)
    METHOD          reduce using rule 163 (pos_insts -> UNDERSCORE .)
    SECTION         reduce using rule 163 (pos_insts -> UNDERSCORE .)
    TEXT            reduce using rule 163 (pos_insts -> UNDERSCORE .)
    TYPE_SYNONYM    reduce using rule 163 (pos_insts -> UNDERSCORE .)
    TYPEDECL        reduce using rule 163 (pos_insts -> UNDERSCORE .)
    END             reduce using rule 163 (pos_insts -> UNDERSCORE .)
    UNDERSCORE      shift and go to state 216
    ID              shift and go to state 212
    QUOTED_STRING   shift and go to state 217

    pos_insts                      shift and go to state 306

state 217

    (165) pos_insts -> QUOTED_STRING .
    (168) pos_insts -> QUOTED_STRING . pos_insts
    (163) pos_insts -> . UNDERSCORE
    (164) pos_insts -> . ID
    (165) pos_insts -> . QUOTED_STRING
    (166) pos_insts -> . UNDERSCORE pos_insts
    (167) pos_insts -> . ID pos_insts
    (168) pos_insts -> . QUOTED_STRING pos_insts

    PLUS            reduce using rule 165 (pos_insts -> QUOTED_STRING .)
    FOR             reduce using rule 165 (pos_insts -> QUOTED_STRING .)
    OPENING         reduce using rule 165 (pos_insts -> QUOTED_STRING .)
    BEGIN           reduce using rule 165 (pos_insts -> QUOTED_STRING .)
    AXIOMATIZATION  reduce using rule 165 (pos_insts -> QUOTED_STRING .)
    FUN             reduce using rule 165 (pos_insts -> QUOTED_STRING .)
    FUNCTION        reduce using rule 165 (pos_insts -> QUOTED_STRING .)
    LEMMA           reduce using rule 165 (pos_insts -> QUOTED_STRING .)
    LOCALE          reduce using rule 165 (pos_insts -> QUOTED_STRING .)
    METHOD          reduce using rule 165 (pos_insts -> QUOTED_STRING .)
    SECTION         reduce using rule 165 (pos_insts -> QUOTED_STRING .)
    TEXT            reduce using rule 165 (pos_insts -> QUOTED_STRING .)
    TYPE_SYNONYM    reduce using rule 165 (pos_insts -> QUOTED_STRING .)
    TYPEDECL        reduce using rule 165 (pos_insts -> QUOTED_STRING .)
    END             reduce using rule 165 (pos_insts -> QUOTED_STRING .)
    UNDERSCORE      shift and go to state 216
    ID              shift and go to state 212
    QUOTED_STRING   shift and go to state 217

    pos_insts                      shift and go to state 307

state 218

    (169) name_insts -> WHERE . name_insts_list
    (170) name_insts_list -> . ID EQUALS ID
    (171) name_insts_list -> . ID EQUALS QUOTED_STRING
    (172) name_insts_list -> . ID EQUALS ID name_insts_list
    (173) name_insts_list -> . ID EQUALS QUOTED_STRING name_insts_list

    ID              shift and go to state 309

    name_insts_list                shift and go to state 308

state 219

    (178) locale_block -> LOCALE ID EQ locale BEGIN . content END
    (10) content -> . statement content
    (11) content -> . empty
    (12) statement -> . axiomatization_block
    (13) statement -> . fun_block
    (14) statement -> . lemma_block
    (15) statement -> . locale_block
    (16) statement -> . method_block
    (17) statement -> . section_block
    (18) statement -> . text_block
    (19) statement -> . type_synonym
    (20) statement -> . typedecl
    (253) empty -> .
    (142) axiomatization_block -> . AXIOMATIZATION
    (143) axiomatization_block -> . AXIOMATIZATION vars
    (144) axiomatization_block -> . AXIOMATIZATION WHERE axiomatization
    (145) axiomatization_block -> . AXIOMATIZATION vars WHERE axiomatization
    (230) fun_block -> . FUN specification
    (231) fun_block -> . FUNCTION specification
    (232) fun_block -> . FUN opts specification
    (233) fun_block -> . FUNCTION opts specification
    (44) lemma_block -> . LEMMA ID COLON assumes_block shows_clause lemma_proof_block
    (174) locale_block -> . LOCALE ID
    (175) locale_block -> . LOCALE ID BEGIN content END
    (176) locale_block -> . LOCALE ID comment_block BEGIN content END
    (177) locale_block -> . LOCALE ID EQ locale
    (178) locale_block -> . LOCALE ID EQ locale BEGIN content END
    (21) method_block -> . METHOD method_name EQUALS instruction
    (243) section_block -> . SECTION CARTOUCHE
    (244) text_block -> . TEXT CARTOUCHE
    (211) type_synonym -> . TYPE_SYNONYM typespec EQUALS ID
    (212) type_synonym -> . TYPE_SYNONYM typespec EQUALS ID mixfix
    (209) typedecl -> . TYPEDECL typespec
    (210) typedecl -> . TYPEDECL typespec mixfix

    END             reduce using rule 253 (empty -> .)
    AXIOMATIZATION  shift and go to state 32
    FUN             shift and go to state 33
    FUNCTION        shift and go to state 34
    LEMMA           shift and go to state 35
    LOCALE          shift and go to state 36
    METHOD          shift and go to state 37
    SECTION         shift and go to state 6
    TEXT            shift and go to state 7
    TYPE_SYNONYM    shift and go to state 38
    TYPEDECL        shift and go to state 39

    content                        shift and go to state 310
    statement                      shift and go to state 21
    empty                          shift and go to state 22
    axiomatization_block           shift and go to state 23
    fun_block                      shift and go to state 24
    lemma_block                    shift and go to state 25
    locale_block                   shift and go to state 26
    method_block                   shift and go to state 27
    section_block                  shift and go to state 28
    text_block                     shift and go to state 29
    type_synonym                   shift and go to state 30
    typedecl                       shift and go to state 31

state 220

    (183) locale -> locale opening .
    (184) locale -> locale opening . PLUS context_elem_list

    BEGIN           reduce using rule 183 (locale -> locale opening .)
    OPENING         reduce using rule 183 (locale -> locale opening .)
    AXIOMATIZATION  reduce using rule 183 (locale -> locale opening .)
    FUN             reduce using rule 183 (locale -> locale opening .)
    FUNCTION        reduce using rule 183 (locale -> locale opening .)
    LEMMA           reduce using rule 183 (locale -> locale opening .)
    LOCALE          reduce using rule 183 (locale -> locale opening .)
    METHOD          reduce using rule 183 (locale -> locale opening .)
    SECTION         reduce using rule 183 (locale -> locale opening .)
    TEXT            reduce using rule 183 (locale -> locale opening .)
    TYPE_SYNONYM    reduce using rule 183 (locale -> locale opening .)
    TYPEDECL        reduce using rule 183 (locale -> locale opening .)
    END             reduce using rule 183 (locale -> locale opening .)
    PLUS            shift and go to state 311


state 221

    (181) locale -> opening PLUS . context_elem_list
    (186) context_elem_list -> . context_elem
    (187) context_elem_list -> . context_elem context_elem_list
    (188) context_elem -> . FIXES vars
    (189) context_elem -> . CONSTRAINS name_type_list
    (190) context_elem -> . ASSUMES prop_list
    (191) context_elem -> . DEFINES defines_list
    (192) context_elem -> . NOTES notes_list

    FIXES           shift and go to state 149
    CONSTRAINS      shift and go to state 150
    ASSUMES         shift and go to state 151
    DEFINES         shift and go to state 152
    NOTES           shift and go to state 153

    context_elem_list              shift and go to state 312
    context_elem                   shift and go to state 146

state 222

    (185) locale -> locale_expr opening . PLUS context_elem_list

    PLUS            shift and go to state 313


state 223

    (187) context_elem_list -> context_elem context_elem_list .

    BEGIN           reduce using rule 187 (context_elem_list -> context_elem context_elem_list .)
    OPENING         reduce using rule 187 (context_elem_list -> context_elem context_elem_list .)
    AXIOMATIZATION  reduce using rule 187 (context_elem_list -> context_elem context_elem_list .)
    FUN             reduce using rule 187 (context_elem_list -> context_elem context_elem_list .)
    FUNCTION        reduce using rule 187 (context_elem_list -> context_elem context_elem_list .)
    LEMMA           reduce using rule 187 (context_elem_list -> context_elem context_elem_list .)
    LOCALE          reduce using rule 187 (context_elem_list -> context_elem context_elem_list .)
    METHOD          reduce using rule 187 (context_elem_list -> context_elem context_elem_list .)
    SECTION         reduce using rule 187 (context_elem_list -> context_elem context_elem_list .)
    TEXT            reduce using rule 187 (context_elem_list -> context_elem context_elem_list .)
    TYPE_SYNONYM    reduce using rule 187 (context_elem_list -> context_elem context_elem_list .)
    TYPEDECL        reduce using rule 187 (context_elem_list -> context_elem context_elem_list .)
    END             reduce using rule 187 (context_elem_list -> context_elem context_elem_list .)


state 224

    (141) opening -> OPENING names_list .

    PLUS            reduce using rule 141 (opening -> OPENING names_list .)
    BEGIN           reduce using rule 141 (opening -> OPENING names_list .)
    OPENING         reduce using rule 141 (opening -> OPENING names_list .)
    AXIOMATIZATION  reduce using rule 141 (opening -> OPENING names_list .)
    FUN             reduce using rule 141 (opening -> OPENING names_list .)
    FUNCTION        reduce using rule 141 (opening -> OPENING names_list .)
    LEMMA           reduce using rule 141 (opening -> OPENING names_list .)
    LOCALE          reduce using rule 141 (opening -> OPENING names_list .)
    METHOD          reduce using rule 141 (opening -> OPENING names_list .)
    SECTION         reduce using rule 141 (opening -> OPENING names_list .)
    TEXT            reduce using rule 141 (opening -> OPENING names_list .)
    TYPE_SYNONYM    reduce using rule 141 (opening -> OPENING names_list .)
    TYPEDECL        reduce using rule 141 (opening -> OPENING names_list .)
    END             reduce using rule 141 (opening -> OPENING names_list .)


state 225

    (99) names_list -> ID .
    (100) names_list -> ID . names
    (97) names -> . ID
    (98) names -> . ID AND names

    PLUS            reduce using rule 99 (names_list -> ID .)
    BEGIN           reduce using rule 99 (names_list -> ID .)
    OPENING         reduce using rule 99 (names_list -> ID .)
    AXIOMATIZATION  reduce using rule 99 (names_list -> ID .)
    FUN             reduce using rule 99 (names_list -> ID .)
    FUNCTION        reduce using rule 99 (names_list -> ID .)
    LEMMA           reduce using rule 99 (names_list -> ID .)
    LOCALE          reduce using rule 99 (names_list -> ID .)
    METHOD          reduce using rule 99 (names_list -> ID .)
    SECTION         reduce using rule 99 (names_list -> ID .)
    TEXT            reduce using rule 99 (names_list -> ID .)
    TYPE_SYNONYM    reduce using rule 99 (names_list -> ID .)
    TYPEDECL        reduce using rule 99 (names_list -> ID .)
    END             reduce using rule 99 (names_list -> ID .)
    ID              shift and go to state 119

    names                          shift and go to state 314

state 226

    (151) locale_expr -> instance_list for_fixes .

    OPENING         reduce using rule 151 (locale_expr -> instance_list for_fixes .)
    BEGIN           reduce using rule 151 (locale_expr -> instance_list for_fixes .)
    AXIOMATIZATION  reduce using rule 151 (locale_expr -> instance_list for_fixes .)
    FUN             reduce using rule 151 (locale_expr -> instance_list for_fixes .)
    FUNCTION        reduce using rule 151 (locale_expr -> instance_list for_fixes .)
    LEMMA           reduce using rule 151 (locale_expr -> instance_list for_fixes .)
    LOCALE          reduce using rule 151 (locale_expr -> instance_list for_fixes .)
    METHOD          reduce using rule 151 (locale_expr -> instance_list for_fixes .)
    SECTION         reduce using rule 151 (locale_expr -> instance_list for_fixes .)
    TEXT            reduce using rule 151 (locale_expr -> instance_list for_fixes .)
    TYPE_SYNONYM    reduce using rule 151 (locale_expr -> instance_list for_fixes .)
    TYPEDECL        reduce using rule 151 (locale_expr -> instance_list for_fixes .)
    END             reduce using rule 151 (locale_expr -> instance_list for_fixes .)


state 227

    (188) context_elem -> FIXES vars .

    FIXES           reduce using rule 188 (context_elem -> FIXES vars .)
    CONSTRAINS      reduce using rule 188 (context_elem -> FIXES vars .)
    ASSUMES         reduce using rule 188 (context_elem -> FIXES vars .)
    DEFINES         reduce using rule 188 (context_elem -> FIXES vars .)
    NOTES           reduce using rule 188 (context_elem -> FIXES vars .)
    BEGIN           reduce using rule 188 (context_elem -> FIXES vars .)
    OPENING         reduce using rule 188 (context_elem -> FIXES vars .)
    AXIOMATIZATION  reduce using rule 188 (context_elem -> FIXES vars .)
    FUN             reduce using rule 188 (context_elem -> FIXES vars .)
    FUNCTION        reduce using rule 188 (context_elem -> FIXES vars .)
    LEMMA           reduce using rule 188 (context_elem -> FIXES vars .)
    LOCALE          reduce using rule 188 (context_elem -> FIXES vars .)
    METHOD          reduce using rule 188 (context_elem -> FIXES vars .)
    SECTION         reduce using rule 188 (context_elem -> FIXES vars .)
    TEXT            reduce using rule 188 (context_elem -> FIXES vars .)
    TYPE_SYNONYM    reduce using rule 188 (context_elem -> FIXES vars .)
    TYPEDECL        reduce using rule 188 (context_elem -> FIXES vars .)
    END             reduce using rule 188 (context_elem -> FIXES vars .)


state 228

    (189) context_elem -> CONSTRAINS name_type_list .

    FIXES           reduce using rule 189 (context_elem -> CONSTRAINS name_type_list .)
    CONSTRAINS      reduce using rule 189 (context_elem -> CONSTRAINS name_type_list .)
    ASSUMES         reduce using rule 189 (context_elem -> CONSTRAINS name_type_list .)
    DEFINES         reduce using rule 189 (context_elem -> CONSTRAINS name_type_list .)
    NOTES           reduce using rule 189 (context_elem -> CONSTRAINS name_type_list .)
    BEGIN           reduce using rule 189 (context_elem -> CONSTRAINS name_type_list .)
    OPENING         reduce using rule 189 (context_elem -> CONSTRAINS name_type_list .)
    AXIOMATIZATION  reduce using rule 189 (context_elem -> CONSTRAINS name_type_list .)
    FUN             reduce using rule 189 (context_elem -> CONSTRAINS name_type_list .)
    FUNCTION        reduce using rule 189 (context_elem -> CONSTRAINS name_type_list .)
    LEMMA           reduce using rule 189 (context_elem -> CONSTRAINS name_type_list .)
    LOCALE          reduce using rule 189 (context_elem -> CONSTRAINS name_type_list .)
    METHOD          reduce using rule 189 (context_elem -> CONSTRAINS name_type_list .)
    SECTION         reduce using rule 189 (context_elem -> CONSTRAINS name_type_list .)
    TEXT            reduce using rule 189 (context_elem -> CONSTRAINS name_type_list .)
    TYPE_SYNONYM    reduce using rule 189 (context_elem -> CONSTRAINS name_type_list .)
    TYPEDECL        reduce using rule 189 (context_elem -> CONSTRAINS name_type_list .)
    END             reduce using rule 189 (context_elem -> CONSTRAINS name_type_list .)


state 229

    (193) name_type_list -> ID . COLON COLON ID
    (194) name_type_list -> ID . COLON COLON ID AND name_type_list

    COLON           shift and go to state 315


state 230

    (190) context_elem -> ASSUMES prop_list .

    FIXES           reduce using rule 190 (context_elem -> ASSUMES prop_list .)
    CONSTRAINS      reduce using rule 190 (context_elem -> ASSUMES prop_list .)
    ASSUMES         reduce using rule 190 (context_elem -> ASSUMES prop_list .)
    DEFINES         reduce using rule 190 (context_elem -> ASSUMES prop_list .)
    NOTES           reduce using rule 190 (context_elem -> ASSUMES prop_list .)
    BEGIN           reduce using rule 190 (context_elem -> ASSUMES prop_list .)
    OPENING         reduce using rule 190 (context_elem -> ASSUMES prop_list .)
    AXIOMATIZATION  reduce using rule 190 (context_elem -> ASSUMES prop_list .)
    FUN             reduce using rule 190 (context_elem -> ASSUMES prop_list .)
    FUNCTION        reduce using rule 190 (context_elem -> ASSUMES prop_list .)
    LEMMA           reduce using rule 190 (context_elem -> ASSUMES prop_list .)
    LOCALE          reduce using rule 190 (context_elem -> ASSUMES prop_list .)
    METHOD          reduce using rule 190 (context_elem -> ASSUMES prop_list .)
    SECTION         reduce using rule 190 (context_elem -> ASSUMES prop_list .)
    TEXT            reduce using rule 190 (context_elem -> ASSUMES prop_list .)
    TYPE_SYNONYM    reduce using rule 190 (context_elem -> ASSUMES prop_list .)
    TYPEDECL        reduce using rule 190 (context_elem -> ASSUMES prop_list .)
    END             reduce using rule 190 (context_elem -> ASSUMES prop_list .)


state 231

    (191) context_elem -> DEFINES defines_list .

    FIXES           reduce using rule 191 (context_elem -> DEFINES defines_list .)
    CONSTRAINS      reduce using rule 191 (context_elem -> DEFINES defines_list .)
    ASSUMES         reduce using rule 191 (context_elem -> DEFINES defines_list .)
    DEFINES         reduce using rule 191 (context_elem -> DEFINES defines_list .)
    NOTES           reduce using rule 191 (context_elem -> DEFINES defines_list .)
    BEGIN           reduce using rule 191 (context_elem -> DEFINES defines_list .)
    OPENING         reduce using rule 191 (context_elem -> DEFINES defines_list .)
    AXIOMATIZATION  reduce using rule 191 (context_elem -> DEFINES defines_list .)
    FUN             reduce using rule 191 (context_elem -> DEFINES defines_list .)
    FUNCTION        reduce using rule 191 (context_elem -> DEFINES defines_list .)
    LEMMA           reduce using rule 191 (context_elem -> DEFINES defines_list .)
    LOCALE          reduce using rule 191 (context_elem -> DEFINES defines_list .)
    METHOD          reduce using rule 191 (context_elem -> DEFINES defines_list .)
    SECTION         reduce using rule 191 (context_elem -> DEFINES defines_list .)
    TEXT            reduce using rule 191 (context_elem -> DEFINES defines_list .)
    TYPE_SYNONYM    reduce using rule 191 (context_elem -> DEFINES defines_list .)
    TYPEDECL        reduce using rule 191 (context_elem -> DEFINES defines_list .)
    END             reduce using rule 191 (context_elem -> DEFINES defines_list .)


state 232

    (195) defines_list -> defines_list_element .
    (196) defines_list -> defines_list_element . AND defines_list

    FIXES           reduce using rule 195 (defines_list -> defines_list_element .)
    CONSTRAINS      reduce using rule 195 (defines_list -> defines_list_element .)
    ASSUMES         reduce using rule 195 (defines_list -> defines_list_element .)
    DEFINES         reduce using rule 195 (defines_list -> defines_list_element .)
    NOTES           reduce using rule 195 (defines_list -> defines_list_element .)
    BEGIN           reduce using rule 195 (defines_list -> defines_list_element .)
    OPENING         reduce using rule 195 (defines_list -> defines_list_element .)
    AXIOMATIZATION  reduce using rule 195 (defines_list -> defines_list_element .)
    FUN             reduce using rule 195 (defines_list -> defines_list_element .)
    FUNCTION        reduce using rule 195 (defines_list -> defines_list_element .)
    LEMMA           reduce using rule 195 (defines_list -> defines_list_element .)
    LOCALE          reduce using rule 195 (defines_list -> defines_list_element .)
    METHOD          reduce using rule 195 (defines_list -> defines_list_element .)
    SECTION         reduce using rule 195 (defines_list -> defines_list_element .)
    TEXT            reduce using rule 195 (defines_list -> defines_list_element .)
    TYPE_SYNONYM    reduce using rule 195 (defines_list -> defines_list_element .)
    TYPEDECL        reduce using rule 195 (defines_list -> defines_list_element .)
    END             reduce using rule 195 (defines_list -> defines_list_element .)
    AND             shift and go to state 316


state 233

    (197) defines_list_element -> ID .
    (201) defines_list_element -> ID . prop_pat
    (113) thmbind -> ID .
    (114) thmbind -> ID . attributes
    (101) prop_pat -> . LEFT_PAREN prop_pat_terms RIGHT_PAREN
    (116) attributes -> . LEFT_BRACKET attributes_list RIGHT_BRACKET

    AND             reduce using rule 197 (defines_list_element -> ID .)
    FIXES           reduce using rule 197 (defines_list_element -> ID .)
    CONSTRAINS      reduce using rule 197 (defines_list_element -> ID .)
    ASSUMES         reduce using rule 197 (defines_list_element -> ID .)
    DEFINES         reduce using rule 197 (defines_list_element -> ID .)
    NOTES           reduce using rule 197 (defines_list_element -> ID .)
    BEGIN           reduce using rule 197 (defines_list_element -> ID .)
    OPENING         reduce using rule 197 (defines_list_element -> ID .)
    AXIOMATIZATION  reduce using rule 197 (defines_list_element -> ID .)
    FUN             reduce using rule 197 (defines_list_element -> ID .)
    FUNCTION        reduce using rule 197 (defines_list_element -> ID .)
    LEMMA           reduce using rule 197 (defines_list_element -> ID .)
    LOCALE          reduce using rule 197 (defines_list_element -> ID .)
    METHOD          reduce using rule 197 (defines_list_element -> ID .)
    SECTION         reduce using rule 197 (defines_list_element -> ID .)
    TEXT            reduce using rule 197 (defines_list_element -> ID .)
    TYPE_SYNONYM    reduce using rule 197 (defines_list_element -> ID .)
    TYPEDECL        reduce using rule 197 (defines_list_element -> ID .)
    END             reduce using rule 197 (defines_list_element -> ID .)
    COLON           reduce using rule 113 (thmbind -> ID .)
    LEFT_PAREN      shift and go to state 318
    LEFT_BRACKET    shift and go to state 73

    prop_pat                       shift and go to state 317
    attributes                     shift and go to state 110

state 234

    (198) defines_list_element -> QUOTED_STRING .
    (202) defines_list_element -> QUOTED_STRING . prop_pat
    (101) prop_pat -> . LEFT_PAREN prop_pat_terms RIGHT_PAREN

    AND             reduce using rule 198 (defines_list_element -> QUOTED_STRING .)
    FIXES           reduce using rule 198 (defines_list_element -> QUOTED_STRING .)
    CONSTRAINS      reduce using rule 198 (defines_list_element -> QUOTED_STRING .)
    ASSUMES         reduce using rule 198 (defines_list_element -> QUOTED_STRING .)
    DEFINES         reduce using rule 198 (defines_list_element -> QUOTED_STRING .)
    NOTES           reduce using rule 198 (defines_list_element -> QUOTED_STRING .)
    BEGIN           reduce using rule 198 (defines_list_element -> QUOTED_STRING .)
    OPENING         reduce using rule 198 (defines_list_element -> QUOTED_STRING .)
    AXIOMATIZATION  reduce using rule 198 (defines_list_element -> QUOTED_STRING .)
    FUN             reduce using rule 198 (defines_list_element -> QUOTED_STRING .)
    FUNCTION        reduce using rule 198 (defines_list_element -> QUOTED_STRING .)
    LEMMA           reduce using rule 198 (defines_list_element -> QUOTED_STRING .)
    LOCALE          reduce using rule 198 (defines_list_element -> QUOTED_STRING .)
    METHOD          reduce using rule 198 (defines_list_element -> QUOTED_STRING .)
    SECTION         reduce using rule 198 (defines_list_element -> QUOTED_STRING .)
    TEXT            reduce using rule 198 (defines_list_element -> QUOTED_STRING .)
    TYPE_SYNONYM    reduce using rule 198 (defines_list_element -> QUOTED_STRING .)
    TYPEDECL        reduce using rule 198 (defines_list_element -> QUOTED_STRING .)
    END             reduce using rule 198 (defines_list_element -> QUOTED_STRING .)
    LEFT_PAREN      shift and go to state 318

    prop_pat                       shift and go to state 319

state 235

    (199) defines_list_element -> thmdecl . ID
    (200) defines_list_element -> thmdecl . QUOTED_STRING
    (203) defines_list_element -> thmdecl . ID prop_pat
    (204) defines_list_element -> thmdecl . QUOTED_STRING prop_pat

    ID              shift and go to state 320
    QUOTED_STRING   shift and go to state 321


state 236

    (192) context_elem -> NOTES notes_list .

    FIXES           reduce using rule 192 (context_elem -> NOTES notes_list .)
    CONSTRAINS      reduce using rule 192 (context_elem -> NOTES notes_list .)
    ASSUMES         reduce using rule 192 (context_elem -> NOTES notes_list .)
    DEFINES         reduce using rule 192 (context_elem -> NOTES notes_list .)
    NOTES           reduce using rule 192 (context_elem -> NOTES notes_list .)
    BEGIN           reduce using rule 192 (context_elem -> NOTES notes_list .)
    OPENING         reduce using rule 192 (context_elem -> NOTES notes_list .)
    AXIOMATIZATION  reduce using rule 192 (context_elem -> NOTES notes_list .)
    FUN             reduce using rule 192 (context_elem -> NOTES notes_list .)
    FUNCTION        reduce using rule 192 (context_elem -> NOTES notes_list .)
    LEMMA           reduce using rule 192 (context_elem -> NOTES notes_list .)
    LOCALE          reduce using rule 192 (context_elem -> NOTES notes_list .)
    METHOD          reduce using rule 192 (context_elem -> NOTES notes_list .)
    SECTION         reduce using rule 192 (context_elem -> NOTES notes_list .)
    TEXT            reduce using rule 192 (context_elem -> NOTES notes_list .)
    TYPE_SYNONYM    reduce using rule 192 (context_elem -> NOTES notes_list .)
    TYPEDECL        reduce using rule 192 (context_elem -> NOTES notes_list .)
    END             reduce using rule 192 (context_elem -> NOTES notes_list .)


state 237

    (205) notes_list -> notes_list_element .
    (206) notes_list -> notes_list_element . AND notes_list

    FIXES           reduce using rule 205 (notes_list -> notes_list_element .)
    CONSTRAINS      reduce using rule 205 (notes_list -> notes_list_element .)
    ASSUMES         reduce using rule 205 (notes_list -> notes_list_element .)
    DEFINES         reduce using rule 205 (notes_list -> notes_list_element .)
    NOTES           reduce using rule 205 (notes_list -> notes_list_element .)
    BEGIN           reduce using rule 205 (notes_list -> notes_list_element .)
    OPENING         reduce using rule 205 (notes_list -> notes_list_element .)
    AXIOMATIZATION  reduce using rule 205 (notes_list -> notes_list_element .)
    FUN             reduce using rule 205 (notes_list -> notes_list_element .)
    FUNCTION        reduce using rule 205 (notes_list -> notes_list_element .)
    LEMMA           reduce using rule 205 (notes_list -> notes_list_element .)
    LOCALE          reduce using rule 205 (notes_list -> notes_list_element .)
    METHOD          reduce using rule 205 (notes_list -> notes_list_element .)
    SECTION         reduce using rule 205 (notes_list -> notes_list_element .)
    TEXT            reduce using rule 205 (notes_list -> notes_list_element .)
    TYPE_SYNONYM    reduce using rule 205 (notes_list -> notes_list_element .)
    TYPEDECL        reduce using rule 205 (notes_list -> notes_list_element .)
    END             reduce using rule 205 (notes_list -> notes_list_element .)
    AND             shift and go to state 322


state 238

    (207) notes_list_element -> thmdef . thms
    (111) thms -> . thm
    (112) thms -> . thm thms
    (108) thm -> . ID attributes
    (109) thm -> . ID
    (110) thm -> . attributes
    (116) attributes -> . LEFT_BRACKET attributes_list RIGHT_BRACKET

    ID              shift and go to state 324
    LEFT_BRACKET    shift and go to state 73

    thms                           shift and go to state 323
    thm                            shift and go to state 241
    attributes                     shift and go to state 325

state 239

    (208) notes_list_element -> thms .

    AND             reduce using rule 208 (notes_list_element -> thms .)
    FIXES           reduce using rule 208 (notes_list_element -> thms .)
    CONSTRAINS      reduce using rule 208 (notes_list_element -> thms .)
    ASSUMES         reduce using rule 208 (notes_list_element -> thms .)
    DEFINES         reduce using rule 208 (notes_list_element -> thms .)
    NOTES           reduce using rule 208 (notes_list_element -> thms .)
    BEGIN           reduce using rule 208 (notes_list_element -> thms .)
    OPENING         reduce using rule 208 (notes_list_element -> thms .)
    AXIOMATIZATION  reduce using rule 208 (notes_list_element -> thms .)
    FUN             reduce using rule 208 (notes_list_element -> thms .)
    FUNCTION        reduce using rule 208 (notes_list_element -> thms .)
    LEMMA           reduce using rule 208 (notes_list_element -> thms .)
    LOCALE          reduce using rule 208 (notes_list_element -> thms .)
    METHOD          reduce using rule 208 (notes_list_element -> thms .)
    SECTION         reduce using rule 208 (notes_list_element -> thms .)
    TEXT            reduce using rule 208 (notes_list_element -> thms .)
    TYPE_SYNONYM    reduce using rule 208 (notes_list_element -> thms .)
    TYPEDECL        reduce using rule 208 (notes_list_element -> thms .)
    END             reduce using rule 208 (notes_list_element -> thms .)


state 240

    (107) thmdef -> thmbind . EQ

    EQ              shift and go to state 326


state 241

    (111) thms -> thm .
    (112) thms -> thm . thms
    (111) thms -> . thm
    (112) thms -> . thm thms
    (108) thm -> . ID attributes
    (109) thm -> . ID
    (110) thm -> . attributes
    (116) attributes -> . LEFT_BRACKET attributes_list RIGHT_BRACKET

    AND             reduce using rule 111 (thms -> thm .)
    FIXES           reduce using rule 111 (thms -> thm .)
    CONSTRAINS      reduce using rule 111 (thms -> thm .)
    ASSUMES         reduce using rule 111 (thms -> thm .)
    DEFINES         reduce using rule 111 (thms -> thm .)
    NOTES           reduce using rule 111 (thms -> thm .)
    BEGIN           reduce using rule 111 (thms -> thm .)
    OPENING         reduce using rule 111 (thms -> thm .)
    AXIOMATIZATION  reduce using rule 111 (thms -> thm .)
    FUN             reduce using rule 111 (thms -> thm .)
    FUNCTION        reduce using rule 111 (thms -> thm .)
    LEMMA           reduce using rule 111 (thms -> thm .)
    LOCALE          reduce using rule 111 (thms -> thm .)
    METHOD          reduce using rule 111 (thms -> thm .)
    SECTION         reduce using rule 111 (thms -> thm .)
    TEXT            reduce using rule 111 (thms -> thm .)
    TYPE_SYNONYM    reduce using rule 111 (thms -> thm .)
    TYPEDECL        reduce using rule 111 (thms -> thm .)
    END             reduce using rule 111 (thms -> thm .)
    ID              shift and go to state 324
    LEFT_BRACKET    shift and go to state 73

    thm                            shift and go to state 241
    thms                           shift and go to state 327
    attributes                     shift and go to state 325

state 242

    (113) thmbind -> ID .
    (114) thmbind -> ID . attributes
    (108) thm -> ID . attributes
    (109) thm -> ID .
    (116) attributes -> . LEFT_BRACKET attributes_list RIGHT_BRACKET

  ! shift/reduce conflict for LEFT_BRACKET resolved as shift
    EQ              reduce using rule 113 (thmbind -> ID .)
    ID              reduce using rule 109 (thm -> ID .)
    AND             reduce using rule 109 (thm -> ID .)
    FIXES           reduce using rule 109 (thm -> ID .)
    CONSTRAINS      reduce using rule 109 (thm -> ID .)
    ASSUMES         reduce using rule 109 (thm -> ID .)
    DEFINES         reduce using rule 109 (thm -> ID .)
    NOTES           reduce using rule 109 (thm -> ID .)
    BEGIN           reduce using rule 109 (thm -> ID .)
    OPENING         reduce using rule 109 (thm -> ID .)
    AXIOMATIZATION  reduce using rule 109 (thm -> ID .)
    FUN             reduce using rule 109 (thm -> ID .)
    FUNCTION        reduce using rule 109 (thm -> ID .)
    LEMMA           reduce using rule 109 (thm -> ID .)
    LOCALE          reduce using rule 109 (thm -> ID .)
    METHOD          reduce using rule 109 (thm -> ID .)
    SECTION         reduce using rule 109 (thm -> ID .)
    TEXT            reduce using rule 109 (thm -> ID .)
    TYPE_SYNONYM    reduce using rule 109 (thm -> ID .)
    TYPEDECL        reduce using rule 109 (thm -> ID .)
    END             reduce using rule 109 (thm -> ID .)
    LEFT_BRACKET    shift and go to state 73

  ! LEFT_BRACKET    [ reduce using rule 109 (thm -> ID .) ]

    attributes                     shift and go to state 328

state 243

    (115) thmbind -> attributes .
    (110) thm -> attributes .

    EQ              reduce using rule 115 (thmbind -> attributes .)
    ID              reduce using rule 110 (thm -> attributes .)
    LEFT_BRACKET    reduce using rule 110 (thm -> attributes .)
    AND             reduce using rule 110 (thm -> attributes .)
    FIXES           reduce using rule 110 (thm -> attributes .)
    CONSTRAINS      reduce using rule 110 (thm -> attributes .)
    ASSUMES         reduce using rule 110 (thm -> attributes .)
    DEFINES         reduce using rule 110 (thm -> attributes .)
    NOTES           reduce using rule 110 (thm -> attributes .)
    BEGIN           reduce using rule 110 (thm -> attributes .)
    OPENING         reduce using rule 110 (thm -> attributes .)
    AXIOMATIZATION  reduce using rule 110 (thm -> attributes .)
    FUN             reduce using rule 110 (thm -> attributes .)
    FUNCTION        reduce using rule 110 (thm -> attributes .)
    LEMMA           reduce using rule 110 (thm -> attributes .)
    LOCALE          reduce using rule 110 (thm -> attributes .)
    METHOD          reduce using rule 110 (thm -> attributes .)
    SECTION         reduce using rule 110 (thm -> attributes .)
    TEXT            reduce using rule 110 (thm -> attributes .)
    TYPE_SYNONYM    reduce using rule 110 (thm -> attributes .)
    TYPEDECL        reduce using rule 110 (thm -> attributes .)
    END             reduce using rule 110 (thm -> attributes .)


state 244

    (153) instance_list -> instance PLUS . instance_list
    (152) instance_list -> . instance
    (153) instance_list -> . instance PLUS instance_list
    (154) instance -> . ID
    (155) instance -> . ID pos_insts
    (156) instance -> . ID name_insts
    (157) instance -> . qualifier COLON ID pos_insts
    (158) instance -> . qualifier COLON ID name_insts
    (159) qualifier -> . ID
    (160) qualifier -> . QUOTED_STRING
    (161) qualifier -> . ID QUESTION_MARK
    (162) qualifier -> . QUOTED_STRING QUESTION_MARK

    ID              shift and go to state 141
    QUOTED_STRING   shift and go to state 156

    instance                       shift and go to state 154
    instance_list                  shift and go to state 329
    qualifier                      shift and go to state 155

state 245

    (157) instance -> qualifier COLON . ID pos_insts
    (158) instance -> qualifier COLON . ID name_insts

    ID              shift and go to state 330


state 246

    (162) qualifier -> QUOTED_STRING QUESTION_MARK .

    COLON           reduce using rule 162 (qualifier -> QUOTED_STRING QUESTION_MARK .)


state 247

    (24) instruction -> single_instruction instruction_modifier .
    (25) instruction -> single_instruction instruction_modifier . COMMA instruction

    AXIOMATIZATION  reduce using rule 24 (instruction -> single_instruction instruction_modifier .)
    FUN             reduce using rule 24 (instruction -> single_instruction instruction_modifier .)
    FUNCTION        reduce using rule 24 (instruction -> single_instruction instruction_modifier .)
    LEMMA           reduce using rule 24 (instruction -> single_instruction instruction_modifier .)
    LOCALE          reduce using rule 24 (instruction -> single_instruction instruction_modifier .)
    METHOD          reduce using rule 24 (instruction -> single_instruction instruction_modifier .)
    SECTION         reduce using rule 24 (instruction -> single_instruction instruction_modifier .)
    TEXT            reduce using rule 24 (instruction -> single_instruction instruction_modifier .)
    TYPE_SYNONYM    reduce using rule 24 (instruction -> single_instruction instruction_modifier .)
    TYPEDECL        reduce using rule 24 (instruction -> single_instruction instruction_modifier .)
    END             reduce using rule 24 (instruction -> single_instruction instruction_modifier .)
    RIGHT_PAREN     reduce using rule 24 (instruction -> single_instruction instruction_modifier .)
    APPLY           reduce using rule 24 (instruction -> single_instruction instruction_modifier .)
    USING           reduce using rule 24 (instruction -> single_instruction instruction_modifier .)
    BY              reduce using rule 24 (instruction -> single_instruction instruction_modifier .)
    DONE            reduce using rule 24 (instruction -> single_instruction instruction_modifier .)
    SORRY           reduce using rule 24 (instruction -> single_instruction instruction_modifier .)
    SUBGOAL         reduce using rule 24 (instruction -> single_instruction instruction_modifier .)
    COMMA           shift and go to state 331


state 248

    (27) instruction -> single_instruction COMMA . instruction
    (23) instruction -> . single_instruction
    (24) instruction -> . single_instruction instruction_modifier
    (25) instruction -> . single_instruction instruction_modifier COMMA instruction
    (26) instruction -> . single_instruction SEMICOLON instruction
    (27) instruction -> . single_instruction COMMA instruction
    (28) instruction -> . LEFT_PAREN instruction RIGHT_PAREN
    (29) instruction -> . LEFT_PAREN instruction RIGHT_PAREN instruction_modifier
    (32) single_instruction -> . ID
    (33) single_instruction -> . ID method_args
    (34) single_instruction -> . LEFT_PAREN ID method_args RIGHT_PAREN
    (35) single_instruction -> . LEFT_PAREN ID method_args RIGHT_PAREN instruction_modifier

    LEFT_PAREN      shift and go to state 160
    ID              shift and go to state 161

    single_instruction             shift and go to state 159
    instruction                    shift and go to state 332

state 249

    (26) instruction -> single_instruction SEMICOLON . instruction
    (23) instruction -> . single_instruction
    (24) instruction -> . single_instruction instruction_modifier
    (25) instruction -> . single_instruction instruction_modifier COMMA instruction
    (26) instruction -> . single_instruction SEMICOLON instruction
    (27) instruction -> . single_instruction COMMA instruction
    (28) instruction -> . LEFT_PAREN instruction RIGHT_PAREN
    (29) instruction -> . LEFT_PAREN instruction RIGHT_PAREN instruction_modifier
    (32) single_instruction -> . ID
    (33) single_instruction -> . ID method_args
    (34) single_instruction -> . LEFT_PAREN ID method_args RIGHT_PAREN
    (35) single_instruction -> . LEFT_PAREN ID method_args RIGHT_PAREN instruction_modifier

    LEFT_PAREN      shift and go to state 160
    ID              shift and go to state 161

    single_instruction             shift and go to state 159
    instruction                    shift and go to state 333

state 250

    (30) instruction_modifier -> PLUS .

    COMMA           reduce using rule 30 (instruction_modifier -> PLUS .)
    AXIOMATIZATION  reduce using rule 30 (instruction_modifier -> PLUS .)
    FUN             reduce using rule 30 (instruction_modifier -> PLUS .)
    FUNCTION        reduce using rule 30 (instruction_modifier -> PLUS .)
    LEMMA           reduce using rule 30 (instruction_modifier -> PLUS .)
    LOCALE          reduce using rule 30 (instruction_modifier -> PLUS .)
    METHOD          reduce using rule 30 (instruction_modifier -> PLUS .)
    SECTION         reduce using rule 30 (instruction_modifier -> PLUS .)
    TEXT            reduce using rule 30 (instruction_modifier -> PLUS .)
    TYPE_SYNONYM    reduce using rule 30 (instruction_modifier -> PLUS .)
    TYPEDECL        reduce using rule 30 (instruction_modifier -> PLUS .)
    END             reduce using rule 30 (instruction_modifier -> PLUS .)
    RIGHT_PAREN     reduce using rule 30 (instruction_modifier -> PLUS .)
    APPLY           reduce using rule 30 (instruction_modifier -> PLUS .)
    USING           reduce using rule 30 (instruction_modifier -> PLUS .)
    BY              reduce using rule 30 (instruction_modifier -> PLUS .)
    DONE            reduce using rule 30 (instruction_modifier -> PLUS .)
    SORRY           reduce using rule 30 (instruction_modifier -> PLUS .)
    SUBGOAL         reduce using rule 30 (instruction_modifier -> PLUS .)
    SEMICOLON       reduce using rule 30 (instruction_modifier -> PLUS .)
    PLUS            reduce using rule 30 (instruction_modifier -> PLUS .)
    QUESTION_MARK   reduce using rule 30 (instruction_modifier -> PLUS .)


state 251

    (31) instruction_modifier -> QUESTION_MARK .

    COMMA           reduce using rule 31 (instruction_modifier -> QUESTION_MARK .)
    AXIOMATIZATION  reduce using rule 31 (instruction_modifier -> QUESTION_MARK .)
    FUN             reduce using rule 31 (instruction_modifier -> QUESTION_MARK .)
    FUNCTION        reduce using rule 31 (instruction_modifier -> QUESTION_MARK .)
    LEMMA           reduce using rule 31 (instruction_modifier -> QUESTION_MARK .)
    LOCALE          reduce using rule 31 (instruction_modifier -> QUESTION_MARK .)
    METHOD          reduce using rule 31 (instruction_modifier -> QUESTION_MARK .)
    SECTION         reduce using rule 31 (instruction_modifier -> QUESTION_MARK .)
    TEXT            reduce using rule 31 (instruction_modifier -> QUESTION_MARK .)
    TYPE_SYNONYM    reduce using rule 31 (instruction_modifier -> QUESTION_MARK .)
    TYPEDECL        reduce using rule 31 (instruction_modifier -> QUESTION_MARK .)
    END             reduce using rule 31 (instruction_modifier -> QUESTION_MARK .)
    RIGHT_PAREN     reduce using rule 31 (instruction_modifier -> QUESTION_MARK .)
    APPLY           reduce using rule 31 (instruction_modifier -> QUESTION_MARK .)
    USING           reduce using rule 31 (instruction_modifier -> QUESTION_MARK .)
    BY              reduce using rule 31 (instruction_modifier -> QUESTION_MARK .)
    DONE            reduce using rule 31 (instruction_modifier -> QUESTION_MARK .)
    SORRY           reduce using rule 31 (instruction_modifier -> QUESTION_MARK .)
    SUBGOAL         reduce using rule 31 (instruction_modifier -> QUESTION_MARK .)
    SEMICOLON       reduce using rule 31 (instruction_modifier -> QUESTION_MARK .)
    PLUS            reduce using rule 31 (instruction_modifier -> QUESTION_MARK .)
    QUESTION_MARK   reduce using rule 31 (instruction_modifier -> QUESTION_MARK .)


state 252

    (28) instruction -> LEFT_PAREN instruction . RIGHT_PAREN
    (29) instruction -> LEFT_PAREN instruction . RIGHT_PAREN instruction_modifier

    RIGHT_PAREN     shift and go to state 334


state 253

    (34) single_instruction -> LEFT_PAREN ID . method_args RIGHT_PAREN
    (35) single_instruction -> LEFT_PAREN ID . method_args RIGHT_PAREN instruction_modifier
    (32) single_instruction -> ID .
    (33) single_instruction -> ID . method_args
    (36) method_args -> . ID COLON method_arg method_args
    (37) method_args -> . method_arg method_args
    (38) method_args -> . empty
    (39) method_arg -> . ID
    (40) method_arg -> . ID LEFT_PAREN NAT RIGHT_PAREN
    (41) method_arg -> . ID DOT ID
    (42) method_arg -> . ID DOT ID LEFT_PAREN NAT RIGHT_PAREN
    (43) method_arg -> . QUOTED_STRING
    (253) empty -> .

  ! reduce/reduce conflict for RIGHT_PAREN resolved using rule 32 (single_instruction -> ID .)
  ! reduce/reduce conflict for SEMICOLON resolved using rule 32 (single_instruction -> ID .)
  ! reduce/reduce conflict for COMMA resolved using rule 32 (single_instruction -> ID .)
  ! reduce/reduce conflict for PLUS resolved using rule 32 (single_instruction -> ID .)
  ! reduce/reduce conflict for QUESTION_MARK resolved using rule 32 (single_instruction -> ID .)
    SEMICOLON       reduce using rule 32 (single_instruction -> ID .)
    COMMA           reduce using rule 32 (single_instruction -> ID .)
    PLUS            reduce using rule 32 (single_instruction -> ID .)
    QUESTION_MARK   reduce using rule 32 (single_instruction -> ID .)
    RIGHT_PAREN     reduce using rule 32 (single_instruction -> ID .)
    ID              shift and go to state 254
    QUOTED_STRING   shift and go to state 258

  ! RIGHT_PAREN     [ reduce using rule 253 (empty -> .) ]
  ! SEMICOLON       [ reduce using rule 253 (empty -> .) ]
  ! COMMA           [ reduce using rule 253 (empty -> .) ]
  ! PLUS            [ reduce using rule 253 (empty -> .) ]
  ! QUESTION_MARK   [ reduce using rule 253 (empty -> .) ]

    method_args                    shift and go to state 335
    method_arg                     shift and go to state 256
    empty                          shift and go to state 257

state 254

    (36) method_args -> ID . COLON method_arg method_args
    (39) method_arg -> ID .
    (40) method_arg -> ID . LEFT_PAREN NAT RIGHT_PAREN
    (41) method_arg -> ID . DOT ID
    (42) method_arg -> ID . DOT ID LEFT_PAREN NAT RIGHT_PAREN

    COLON           shift and go to state 336
    ID              reduce using rule 39 (method_arg -> ID .)
    QUOTED_STRING   reduce using rule 39 (method_arg -> ID .)
    SEMICOLON       reduce using rule 39 (method_arg -> ID .)
    COMMA           reduce using rule 39 (method_arg -> ID .)
    PLUS            reduce using rule 39 (method_arg -> ID .)
    QUESTION_MARK   reduce using rule 39 (method_arg -> ID .)
    AXIOMATIZATION  reduce using rule 39 (method_arg -> ID .)
    FUN             reduce using rule 39 (method_arg -> ID .)
    FUNCTION        reduce using rule 39 (method_arg -> ID .)
    LEMMA           reduce using rule 39 (method_arg -> ID .)
    LOCALE          reduce using rule 39 (method_arg -> ID .)
    METHOD          reduce using rule 39 (method_arg -> ID .)
    SECTION         reduce using rule 39 (method_arg -> ID .)
    TEXT            reduce using rule 39 (method_arg -> ID .)
    TYPE_SYNONYM    reduce using rule 39 (method_arg -> ID .)
    TYPEDECL        reduce using rule 39 (method_arg -> ID .)
    END             reduce using rule 39 (method_arg -> ID .)
    RIGHT_PAREN     reduce using rule 39 (method_arg -> ID .)
    APPLY           reduce using rule 39 (method_arg -> ID .)
    USING           reduce using rule 39 (method_arg -> ID .)
    BY              reduce using rule 39 (method_arg -> ID .)
    DONE            reduce using rule 39 (method_arg -> ID .)
    SORRY           reduce using rule 39 (method_arg -> ID .)
    SUBGOAL         reduce using rule 39 (method_arg -> ID .)
    LEFT_PAREN      shift and go to state 337
    DOT             shift and go to state 338


state 255

    (33) single_instruction -> ID method_args .

    SEMICOLON       reduce using rule 33 (single_instruction -> ID method_args .)
    COMMA           reduce using rule 33 (single_instruction -> ID method_args .)
    PLUS            reduce using rule 33 (single_instruction -> ID method_args .)
    QUESTION_MARK   reduce using rule 33 (single_instruction -> ID method_args .)
    AXIOMATIZATION  reduce using rule 33 (single_instruction -> ID method_args .)
    FUN             reduce using rule 33 (single_instruction -> ID method_args .)
    FUNCTION        reduce using rule 33 (single_instruction -> ID method_args .)
    LEMMA           reduce using rule 33 (single_instruction -> ID method_args .)
    LOCALE          reduce using rule 33 (single_instruction -> ID method_args .)
    METHOD          reduce using rule 33 (single_instruction -> ID method_args .)
    SECTION         reduce using rule 33 (single_instruction -> ID method_args .)
    TEXT            reduce using rule 33 (single_instruction -> ID method_args .)
    TYPE_SYNONYM    reduce using rule 33 (single_instruction -> ID method_args .)
    TYPEDECL        reduce using rule 33 (single_instruction -> ID method_args .)
    END             reduce using rule 33 (single_instruction -> ID method_args .)
    RIGHT_PAREN     reduce using rule 33 (single_instruction -> ID method_args .)
    APPLY           reduce using rule 33 (single_instruction -> ID method_args .)
    USING           reduce using rule 33 (single_instruction -> ID method_args .)
    BY              reduce using rule 33 (single_instruction -> ID method_args .)
    DONE            reduce using rule 33 (single_instruction -> ID method_args .)
    SORRY           reduce using rule 33 (single_instruction -> ID method_args .)
    SUBGOAL         reduce using rule 33 (single_instruction -> ID method_args .)


state 256

    (37) method_args -> method_arg . method_args
    (36) method_args -> . ID COLON method_arg method_args
    (37) method_args -> . method_arg method_args
    (38) method_args -> . empty
    (39) method_arg -> . ID
    (40) method_arg -> . ID LEFT_PAREN NAT RIGHT_PAREN
    (41) method_arg -> . ID DOT ID
    (42) method_arg -> . ID DOT ID LEFT_PAREN NAT RIGHT_PAREN
    (43) method_arg -> . QUOTED_STRING
    (253) empty -> .

    ID              shift and go to state 254
    QUOTED_STRING   shift and go to state 258
    SEMICOLON       reduce using rule 253 (empty -> .)
    COMMA           reduce using rule 253 (empty -> .)
    PLUS            reduce using rule 253 (empty -> .)
    QUESTION_MARK   reduce using rule 253 (empty -> .)
    AXIOMATIZATION  reduce using rule 253 (empty -> .)
    FUN             reduce using rule 253 (empty -> .)
    FUNCTION        reduce using rule 253 (empty -> .)
    LEMMA           reduce using rule 253 (empty -> .)
    LOCALE          reduce using rule 253 (empty -> .)
    METHOD          reduce using rule 253 (empty -> .)
    SECTION         reduce using rule 253 (empty -> .)
    TEXT            reduce using rule 253 (empty -> .)
    TYPE_SYNONYM    reduce using rule 253 (empty -> .)
    TYPEDECL        reduce using rule 253 (empty -> .)
    END             reduce using rule 253 (empty -> .)
    RIGHT_PAREN     reduce using rule 253 (empty -> .)
    APPLY           reduce using rule 253 (empty -> .)
    USING           reduce using rule 253 (empty -> .)
    BY              reduce using rule 253 (empty -> .)
    DONE            reduce using rule 253 (empty -> .)
    SORRY           reduce using rule 253 (empty -> .)
    SUBGOAL         reduce using rule 253 (empty -> .)

    method_arg                     shift and go to state 256
    method_args                    shift and go to state 339
    empty                          shift and go to state 257

state 257

    (38) method_args -> empty .

    SEMICOLON       reduce using rule 38 (method_args -> empty .)
    COMMA           reduce using rule 38 (method_args -> empty .)
    PLUS            reduce using rule 38 (method_args -> empty .)
    QUESTION_MARK   reduce using rule 38 (method_args -> empty .)
    AXIOMATIZATION  reduce using rule 38 (method_args -> empty .)
    FUN             reduce using rule 38 (method_args -> empty .)
    FUNCTION        reduce using rule 38 (method_args -> empty .)
    LEMMA           reduce using rule 38 (method_args -> empty .)
    LOCALE          reduce using rule 38 (method_args -> empty .)
    METHOD          reduce using rule 38 (method_args -> empty .)
    SECTION         reduce using rule 38 (method_args -> empty .)
    TEXT            reduce using rule 38 (method_args -> empty .)
    TYPE_SYNONYM    reduce using rule 38 (method_args -> empty .)
    TYPEDECL        reduce using rule 38 (method_args -> empty .)
    END             reduce using rule 38 (method_args -> empty .)
    RIGHT_PAREN     reduce using rule 38 (method_args -> empty .)
    APPLY           reduce using rule 38 (method_args -> empty .)
    USING           reduce using rule 38 (method_args -> empty .)
    BY              reduce using rule 38 (method_args -> empty .)
    DONE            reduce using rule 38 (method_args -> empty .)
    SORRY           reduce using rule 38 (method_args -> empty .)
    SUBGOAL         reduce using rule 38 (method_args -> empty .)


state 258

    (43) method_arg -> QUOTED_STRING .

    ID              reduce using rule 43 (method_arg -> QUOTED_STRING .)
    QUOTED_STRING   reduce using rule 43 (method_arg -> QUOTED_STRING .)
    SEMICOLON       reduce using rule 43 (method_arg -> QUOTED_STRING .)
    COMMA           reduce using rule 43 (method_arg -> QUOTED_STRING .)
    PLUS            reduce using rule 43 (method_arg -> QUOTED_STRING .)
    QUESTION_MARK   reduce using rule 43 (method_arg -> QUOTED_STRING .)
    AXIOMATIZATION  reduce using rule 43 (method_arg -> QUOTED_STRING .)
    FUN             reduce using rule 43 (method_arg -> QUOTED_STRING .)
    FUNCTION        reduce using rule 43 (method_arg -> QUOTED_STRING .)
    LEMMA           reduce using rule 43 (method_arg -> QUOTED_STRING .)
    LOCALE          reduce using rule 43 (method_arg -> QUOTED_STRING .)
    METHOD          reduce using rule 43 (method_arg -> QUOTED_STRING .)
    SECTION         reduce using rule 43 (method_arg -> QUOTED_STRING .)
    TEXT            reduce using rule 43 (method_arg -> QUOTED_STRING .)
    TYPE_SYNONYM    reduce using rule 43 (method_arg -> QUOTED_STRING .)
    TYPEDECL        reduce using rule 43 (method_arg -> QUOTED_STRING .)
    END             reduce using rule 43 (method_arg -> QUOTED_STRING .)
    RIGHT_PAREN     reduce using rule 43 (method_arg -> QUOTED_STRING .)
    APPLY           reduce using rule 43 (method_arg -> QUOTED_STRING .)
    USING           reduce using rule 43 (method_arg -> QUOTED_STRING .)
    BY              reduce using rule 43 (method_arg -> QUOTED_STRING .)
    DONE            reduce using rule 43 (method_arg -> QUOTED_STRING .)
    SORRY           reduce using rule 43 (method_arg -> QUOTED_STRING .)
    SUBGOAL         reduce using rule 43 (method_arg -> QUOTED_STRING .)


state 259

    (212) type_synonym -> TYPE_SYNONYM typespec EQUALS ID mixfix .

    AXIOMATIZATION  reduce using rule 212 (type_synonym -> TYPE_SYNONYM typespec EQUALS ID mixfix .)
    FUN             reduce using rule 212 (type_synonym -> TYPE_SYNONYM typespec EQUALS ID mixfix .)
    FUNCTION        reduce using rule 212 (type_synonym -> TYPE_SYNONYM typespec EQUALS ID mixfix .)
    LEMMA           reduce using rule 212 (type_synonym -> TYPE_SYNONYM typespec EQUALS ID mixfix .)
    LOCALE          reduce using rule 212 (type_synonym -> TYPE_SYNONYM typespec EQUALS ID mixfix .)
    METHOD          reduce using rule 212 (type_synonym -> TYPE_SYNONYM typespec EQUALS ID mixfix .)
    SECTION         reduce using rule 212 (type_synonym -> TYPE_SYNONYM typespec EQUALS ID mixfix .)
    TEXT            reduce using rule 212 (type_synonym -> TYPE_SYNONYM typespec EQUALS ID mixfix .)
    TYPE_SYNONYM    reduce using rule 212 (type_synonym -> TYPE_SYNONYM typespec EQUALS ID mixfix .)
    TYPEDECL        reduce using rule 212 (type_synonym -> TYPE_SYNONYM typespec EQUALS ID mixfix .)
    END             reduce using rule 212 (type_synonym -> TYPE_SYNONYM typespec EQUALS ID mixfix .)


state 260

    (79) typearg -> ID COLON COLON ID .

    COMMA           reduce using rule 79 (typearg -> ID COLON COLON ID .)
    ID              reduce using rule 79 (typearg -> ID COLON COLON ID .)
    RIGHT_PAREN     reduce using rule 79 (typearg -> ID COLON COLON ID .)


state 261

    (128) for_fixes -> FOR vars .

    AXIOMATIZATION  reduce using rule 128 (for_fixes -> FOR vars .)
    FUN             reduce using rule 128 (for_fixes -> FOR vars .)
    FUNCTION        reduce using rule 128 (for_fixes -> FOR vars .)
    LEMMA           reduce using rule 128 (for_fixes -> FOR vars .)
    LOCALE          reduce using rule 128 (for_fixes -> FOR vars .)
    METHOD          reduce using rule 128 (for_fixes -> FOR vars .)
    SECTION         reduce using rule 128 (for_fixes -> FOR vars .)
    TEXT            reduce using rule 128 (for_fixes -> FOR vars .)
    TYPE_SYNONYM    reduce using rule 128 (for_fixes -> FOR vars .)
    TYPEDECL        reduce using rule 128 (for_fixes -> FOR vars .)
    END             reduce using rule 128 (for_fixes -> FOR vars .)
    OPENING         reduce using rule 128 (for_fixes -> FOR vars .)
    BEGIN           reduce using rule 128 (for_fixes -> FOR vars .)
    ID              reduce using rule 128 (for_fixes -> FOR vars .)
    QUOTED_STRING   reduce using rule 128 (for_fixes -> FOR vars .)
    LEFT_BRACKET    reduce using rule 128 (for_fixes -> FOR vars .)


state 262

    (138) prop_list -> ID prop_list .

    FOR             reduce using rule 138 (prop_list -> ID prop_list .)
    AXIOMATIZATION  reduce using rule 138 (prop_list -> ID prop_list .)
    FUN             reduce using rule 138 (prop_list -> ID prop_list .)
    FUNCTION        reduce using rule 138 (prop_list -> ID prop_list .)
    LEMMA           reduce using rule 138 (prop_list -> ID prop_list .)
    LOCALE          reduce using rule 138 (prop_list -> ID prop_list .)
    METHOD          reduce using rule 138 (prop_list -> ID prop_list .)
    SECTION         reduce using rule 138 (prop_list -> ID prop_list .)
    TEXT            reduce using rule 138 (prop_list -> ID prop_list .)
    TYPE_SYNONYM    reduce using rule 138 (prop_list -> ID prop_list .)
    TYPEDECL        reduce using rule 138 (prop_list -> ID prop_list .)
    END             reduce using rule 138 (prop_list -> ID prop_list .)
    ID              reduce using rule 138 (prop_list -> ID prop_list .)
    QUOTED_STRING   reduce using rule 138 (prop_list -> ID prop_list .)
    LEFT_BRACKET    reduce using rule 138 (prop_list -> ID prop_list .)
    FIXES           reduce using rule 138 (prop_list -> ID prop_list .)
    CONSTRAINS      reduce using rule 138 (prop_list -> ID prop_list .)
    ASSUMES         reduce using rule 138 (prop_list -> ID prop_list .)
    DEFINES         reduce using rule 138 (prop_list -> ID prop_list .)
    NOTES           reduce using rule 138 (prop_list -> ID prop_list .)
    BEGIN           reduce using rule 138 (prop_list -> ID prop_list .)
    OPENING         reduce using rule 138 (prop_list -> ID prop_list .)


state 263

    (139) prop_list -> ID AND . prop_list
    (137) prop_list -> . ID
    (138) prop_list -> . ID prop_list
    (139) prop_list -> . ID AND prop_list

    ID              shift and go to state 170

    prop_list                      shift and go to state 340

state 264

    (149) axiomatization_header -> thmdecl ID AND axiomatization_header .

    IF              reduce using rule 149 (axiomatization_header -> thmdecl ID AND axiomatization_header .)
    FOR             reduce using rule 149 (axiomatization_header -> thmdecl ID AND axiomatization_header .)
    AXIOMATIZATION  reduce using rule 149 (axiomatization_header -> thmdecl ID AND axiomatization_header .)
    FUN             reduce using rule 149 (axiomatization_header -> thmdecl ID AND axiomatization_header .)
    FUNCTION        reduce using rule 149 (axiomatization_header -> thmdecl ID AND axiomatization_header .)
    LEMMA           reduce using rule 149 (axiomatization_header -> thmdecl ID AND axiomatization_header .)
    LOCALE          reduce using rule 149 (axiomatization_header -> thmdecl ID AND axiomatization_header .)
    METHOD          reduce using rule 149 (axiomatization_header -> thmdecl ID AND axiomatization_header .)
    SECTION         reduce using rule 149 (axiomatization_header -> thmdecl ID AND axiomatization_header .)
    TEXT            reduce using rule 149 (axiomatization_header -> thmdecl ID AND axiomatization_header .)
    TYPE_SYNONYM    reduce using rule 149 (axiomatization_header -> thmdecl ID AND axiomatization_header .)
    TYPEDECL        reduce using rule 149 (axiomatization_header -> thmdecl ID AND axiomatization_header .)
    END             reduce using rule 149 (axiomatization_header -> thmdecl ID AND axiomatization_header .)


state 265

    (150) axiomatization_header -> thmdecl QUOTED_STRING AND axiomatization_header .

    IF              reduce using rule 150 (axiomatization_header -> thmdecl QUOTED_STRING AND axiomatization_header .)
    FOR             reduce using rule 150 (axiomatization_header -> thmdecl QUOTED_STRING AND axiomatization_header .)
    AXIOMATIZATION  reduce using rule 150 (axiomatization_header -> thmdecl QUOTED_STRING AND axiomatization_header .)
    FUN             reduce using rule 150 (axiomatization_header -> thmdecl QUOTED_STRING AND axiomatization_header .)
    FUNCTION        reduce using rule 150 (axiomatization_header -> thmdecl QUOTED_STRING AND axiomatization_header .)
    LEMMA           reduce using rule 150 (axiomatization_header -> thmdecl QUOTED_STRING AND axiomatization_header .)
    LOCALE          reduce using rule 150 (axiomatization_header -> thmdecl QUOTED_STRING AND axiomatization_header .)
    METHOD          reduce using rule 150 (axiomatization_header -> thmdecl QUOTED_STRING AND axiomatization_header .)
    SECTION         reduce using rule 150 (axiomatization_header -> thmdecl QUOTED_STRING AND axiomatization_header .)
    TEXT            reduce using rule 150 (axiomatization_header -> thmdecl QUOTED_STRING AND axiomatization_header .)
    TYPE_SYNONYM    reduce using rule 150 (axiomatization_header -> thmdecl QUOTED_STRING AND axiomatization_header .)
    TYPEDECL        reduce using rule 150 (axiomatization_header -> thmdecl QUOTED_STRING AND axiomatization_header .)
    END             reduce using rule 150 (axiomatization_header -> thmdecl QUOTED_STRING AND axiomatization_header .)


state 266

    (119) attributes_list -> attribute COMMA attributes_list .

    RIGHT_BRACKET   reduce using rule 119 (attributes_list -> attribute COMMA attributes_list .)


state 267

    (123) args -> arg args .

    COMMA           reduce using rule 123 (args -> arg args .)
    RIGHT_BRACKET   reduce using rule 123 (args -> arg args .)
    RIGHT_PAREN     reduce using rule 123 (args -> arg args .)


state 268

    (125) arg -> LEFT_PAREN args . RIGHT_PAREN

    RIGHT_PAREN     shift and go to state 341


state 269

    (126) arg -> LEFT_BRACKET args . RIGHT_BRACKET

    RIGHT_BRACKET   shift and go to state 342


state 270

    (93) var -> ID COLON COLON ID mixfix .

    AND             reduce using rule 93 (var -> ID COLON COLON ID mixfix .)
    WHERE           reduce using rule 93 (var -> ID COLON COLON ID mixfix .)
    AXIOMATIZATION  reduce using rule 93 (var -> ID COLON COLON ID mixfix .)
    FUN             reduce using rule 93 (var -> ID COLON COLON ID mixfix .)
    FUNCTION        reduce using rule 93 (var -> ID COLON COLON ID mixfix .)
    LEMMA           reduce using rule 93 (var -> ID COLON COLON ID mixfix .)
    LOCALE          reduce using rule 93 (var -> ID COLON COLON ID mixfix .)
    METHOD          reduce using rule 93 (var -> ID COLON COLON ID mixfix .)
    SECTION         reduce using rule 93 (var -> ID COLON COLON ID mixfix .)
    TEXT            reduce using rule 93 (var -> ID COLON COLON ID mixfix .)
    TYPE_SYNONYM    reduce using rule 93 (var -> ID COLON COLON ID mixfix .)
    TYPEDECL        reduce using rule 93 (var -> ID COLON COLON ID mixfix .)
    END             reduce using rule 93 (var -> ID COLON COLON ID mixfix .)
    FIXES           reduce using rule 93 (var -> ID COLON COLON ID mixfix .)
    CONSTRAINS      reduce using rule 93 (var -> ID COLON COLON ID mixfix .)
    ASSUMES         reduce using rule 93 (var -> ID COLON COLON ID mixfix .)
    DEFINES         reduce using rule 93 (var -> ID COLON COLON ID mixfix .)
    NOTES           reduce using rule 93 (var -> ID COLON COLON ID mixfix .)
    BEGIN           reduce using rule 93 (var -> ID COLON COLON ID mixfix .)
    OPENING         reduce using rule 93 (var -> ID COLON COLON ID mixfix .)
    ID              reduce using rule 93 (var -> ID COLON COLON ID mixfix .)
    QUOTED_STRING   reduce using rule 93 (var -> ID COLON COLON ID mixfix .)
    LEFT_BRACKET    reduce using rule 93 (var -> ID COLON COLON ID mixfix .)


state 271

    (95) var -> ID COLON COLON QUOTED_STRING mixfix .

    AND             reduce using rule 95 (var -> ID COLON COLON QUOTED_STRING mixfix .)
    WHERE           reduce using rule 95 (var -> ID COLON COLON QUOTED_STRING mixfix .)
    AXIOMATIZATION  reduce using rule 95 (var -> ID COLON COLON QUOTED_STRING mixfix .)
    FUN             reduce using rule 95 (var -> ID COLON COLON QUOTED_STRING mixfix .)
    FUNCTION        reduce using rule 95 (var -> ID COLON COLON QUOTED_STRING mixfix .)
    LEMMA           reduce using rule 95 (var -> ID COLON COLON QUOTED_STRING mixfix .)
    LOCALE          reduce using rule 95 (var -> ID COLON COLON QUOTED_STRING mixfix .)
    METHOD          reduce using rule 95 (var -> ID COLON COLON QUOTED_STRING mixfix .)
    SECTION         reduce using rule 95 (var -> ID COLON COLON QUOTED_STRING mixfix .)
    TEXT            reduce using rule 95 (var -> ID COLON COLON QUOTED_STRING mixfix .)
    TYPE_SYNONYM    reduce using rule 95 (var -> ID COLON COLON QUOTED_STRING mixfix .)
    TYPEDECL        reduce using rule 95 (var -> ID COLON COLON QUOTED_STRING mixfix .)
    END             reduce using rule 95 (var -> ID COLON COLON QUOTED_STRING mixfix .)
    FIXES           reduce using rule 95 (var -> ID COLON COLON QUOTED_STRING mixfix .)
    CONSTRAINS      reduce using rule 95 (var -> ID COLON COLON QUOTED_STRING mixfix .)
    ASSUMES         reduce using rule 95 (var -> ID COLON COLON QUOTED_STRING mixfix .)
    DEFINES         reduce using rule 95 (var -> ID COLON COLON QUOTED_STRING mixfix .)
    NOTES           reduce using rule 95 (var -> ID COLON COLON QUOTED_STRING mixfix .)
    BEGIN           reduce using rule 95 (var -> ID COLON COLON QUOTED_STRING mixfix .)
    OPENING         reduce using rule 95 (var -> ID COLON COLON QUOTED_STRING mixfix .)
    ID              reduce using rule 95 (var -> ID COLON COLON QUOTED_STRING mixfix .)
    QUOTED_STRING   reduce using rule 95 (var -> ID COLON COLON QUOTED_STRING mixfix .)
    LEFT_BRACKET    reduce using rule 95 (var -> ID COLON COLON QUOTED_STRING mixfix .)


state 272

    (214) mixfix -> LEFT_PAREN template prios RIGHT_PAREN .

    AND             reduce using rule 214 (mixfix -> LEFT_PAREN template prios RIGHT_PAREN .)
    WHERE           reduce using rule 214 (mixfix -> LEFT_PAREN template prios RIGHT_PAREN .)
    AXIOMATIZATION  reduce using rule 214 (mixfix -> LEFT_PAREN template prios RIGHT_PAREN .)
    FUN             reduce using rule 214 (mixfix -> LEFT_PAREN template prios RIGHT_PAREN .)
    FUNCTION        reduce using rule 214 (mixfix -> LEFT_PAREN template prios RIGHT_PAREN .)
    LEMMA           reduce using rule 214 (mixfix -> LEFT_PAREN template prios RIGHT_PAREN .)
    LOCALE          reduce using rule 214 (mixfix -> LEFT_PAREN template prios RIGHT_PAREN .)
    METHOD          reduce using rule 214 (mixfix -> LEFT_PAREN template prios RIGHT_PAREN .)
    SECTION         reduce using rule 214 (mixfix -> LEFT_PAREN template prios RIGHT_PAREN .)
    TEXT            reduce using rule 214 (mixfix -> LEFT_PAREN template prios RIGHT_PAREN .)
    TYPE_SYNONYM    reduce using rule 214 (mixfix -> LEFT_PAREN template prios RIGHT_PAREN .)
    TYPEDECL        reduce using rule 214 (mixfix -> LEFT_PAREN template prios RIGHT_PAREN .)
    END             reduce using rule 214 (mixfix -> LEFT_PAREN template prios RIGHT_PAREN .)
    FIXES           reduce using rule 214 (mixfix -> LEFT_PAREN template prios RIGHT_PAREN .)
    CONSTRAINS      reduce using rule 214 (mixfix -> LEFT_PAREN template prios RIGHT_PAREN .)
    ASSUMES         reduce using rule 214 (mixfix -> LEFT_PAREN template prios RIGHT_PAREN .)
    DEFINES         reduce using rule 214 (mixfix -> LEFT_PAREN template prios RIGHT_PAREN .)
    NOTES           reduce using rule 214 (mixfix -> LEFT_PAREN template prios RIGHT_PAREN .)
    BEGIN           reduce using rule 214 (mixfix -> LEFT_PAREN template prios RIGHT_PAREN .)
    OPENING         reduce using rule 214 (mixfix -> LEFT_PAREN template prios RIGHT_PAREN .)
    ID              reduce using rule 214 (mixfix -> LEFT_PAREN template prios RIGHT_PAREN .)
    QUOTED_STRING   reduce using rule 214 (mixfix -> LEFT_PAREN template prios RIGHT_PAREN .)
    LEFT_BRACKET    reduce using rule 214 (mixfix -> LEFT_PAREN template prios RIGHT_PAREN .)


state 273

    (216) mixfix -> LEFT_PAREN template prios NAT . RIGHT_PAREN

    RIGHT_PAREN     shift and go to state 343


state 274

    (215) mixfix -> LEFT_PAREN template NAT RIGHT_PAREN .

    AND             reduce using rule 215 (mixfix -> LEFT_PAREN template NAT RIGHT_PAREN .)
    WHERE           reduce using rule 215 (mixfix -> LEFT_PAREN template NAT RIGHT_PAREN .)
    AXIOMATIZATION  reduce using rule 215 (mixfix -> LEFT_PAREN template NAT RIGHT_PAREN .)
    FUN             reduce using rule 215 (mixfix -> LEFT_PAREN template NAT RIGHT_PAREN .)
    FUNCTION        reduce using rule 215 (mixfix -> LEFT_PAREN template NAT RIGHT_PAREN .)
    LEMMA           reduce using rule 215 (mixfix -> LEFT_PAREN template NAT RIGHT_PAREN .)
    LOCALE          reduce using rule 215 (mixfix -> LEFT_PAREN template NAT RIGHT_PAREN .)
    METHOD          reduce using rule 215 (mixfix -> LEFT_PAREN template NAT RIGHT_PAREN .)
    SECTION         reduce using rule 215 (mixfix -> LEFT_PAREN template NAT RIGHT_PAREN .)
    TEXT            reduce using rule 215 (mixfix -> LEFT_PAREN template NAT RIGHT_PAREN .)
    TYPE_SYNONYM    reduce using rule 215 (mixfix -> LEFT_PAREN template NAT RIGHT_PAREN .)
    TYPEDECL        reduce using rule 215 (mixfix -> LEFT_PAREN template NAT RIGHT_PAREN .)
    END             reduce using rule 215 (mixfix -> LEFT_PAREN template NAT RIGHT_PAREN .)
    FIXES           reduce using rule 215 (mixfix -> LEFT_PAREN template NAT RIGHT_PAREN .)
    CONSTRAINS      reduce using rule 215 (mixfix -> LEFT_PAREN template NAT RIGHT_PAREN .)
    ASSUMES         reduce using rule 215 (mixfix -> LEFT_PAREN template NAT RIGHT_PAREN .)
    DEFINES         reduce using rule 215 (mixfix -> LEFT_PAREN template NAT RIGHT_PAREN .)
    NOTES           reduce using rule 215 (mixfix -> LEFT_PAREN template NAT RIGHT_PAREN .)
    BEGIN           reduce using rule 215 (mixfix -> LEFT_PAREN template NAT RIGHT_PAREN .)
    OPENING         reduce using rule 215 (mixfix -> LEFT_PAREN template NAT RIGHT_PAREN .)
    ID              reduce using rule 215 (mixfix -> LEFT_PAREN template NAT RIGHT_PAREN .)
    QUOTED_STRING   reduce using rule 215 (mixfix -> LEFT_PAREN template NAT RIGHT_PAREN .)
    LEFT_BRACKET    reduce using rule 215 (mixfix -> LEFT_PAREN template NAT RIGHT_PAREN .)


state 275

    (225) prios -> LEFT_BRACKET nat_list . RIGHT_BRACKET

    RIGHT_BRACKET   shift and go to state 344


state 276

    (227) nat_list -> NAT .
    (228) nat_list -> NAT . COMMA nat_list

    RIGHT_BRACKET   reduce using rule 227 (nat_list -> NAT .)
    COMMA           shift and go to state 345


state 277

    (217) mixfix -> LEFT_PAREN INFIX template NAT . RIGHT_PAREN

    RIGHT_PAREN     shift and go to state 346


state 278

    (218) mixfix -> LEFT_PAREN INFIXL template NAT . RIGHT_PAREN

    RIGHT_PAREN     shift and go to state 347


state 279

    (219) mixfix -> LEFT_PAREN INFIXR template NAT . RIGHT_PAREN

    RIGHT_PAREN     shift and go to state 348


state 280

    (220) mixfix -> BINDER template NAT RIGHT_PAREN .

    AND             reduce using rule 220 (mixfix -> BINDER template NAT RIGHT_PAREN .)
    WHERE           reduce using rule 220 (mixfix -> BINDER template NAT RIGHT_PAREN .)
    AXIOMATIZATION  reduce using rule 220 (mixfix -> BINDER template NAT RIGHT_PAREN .)
    FUN             reduce using rule 220 (mixfix -> BINDER template NAT RIGHT_PAREN .)
    FUNCTION        reduce using rule 220 (mixfix -> BINDER template NAT RIGHT_PAREN .)
    LEMMA           reduce using rule 220 (mixfix -> BINDER template NAT RIGHT_PAREN .)
    LOCALE          reduce using rule 220 (mixfix -> BINDER template NAT RIGHT_PAREN .)
    METHOD          reduce using rule 220 (mixfix -> BINDER template NAT RIGHT_PAREN .)
    SECTION         reduce using rule 220 (mixfix -> BINDER template NAT RIGHT_PAREN .)
    TEXT            reduce using rule 220 (mixfix -> BINDER template NAT RIGHT_PAREN .)
    TYPE_SYNONYM    reduce using rule 220 (mixfix -> BINDER template NAT RIGHT_PAREN .)
    TYPEDECL        reduce using rule 220 (mixfix -> BINDER template NAT RIGHT_PAREN .)
    END             reduce using rule 220 (mixfix -> BINDER template NAT RIGHT_PAREN .)
    FIXES           reduce using rule 220 (mixfix -> BINDER template NAT RIGHT_PAREN .)
    CONSTRAINS      reduce using rule 220 (mixfix -> BINDER template NAT RIGHT_PAREN .)
    ASSUMES         reduce using rule 220 (mixfix -> BINDER template NAT RIGHT_PAREN .)
    DEFINES         reduce using rule 220 (mixfix -> BINDER template NAT RIGHT_PAREN .)
    NOTES           reduce using rule 220 (mixfix -> BINDER template NAT RIGHT_PAREN .)
    BEGIN           reduce using rule 220 (mixfix -> BINDER template NAT RIGHT_PAREN .)
    OPENING         reduce using rule 220 (mixfix -> BINDER template NAT RIGHT_PAREN .)
    ID              reduce using rule 220 (mixfix -> BINDER template NAT RIGHT_PAREN .)
    QUOTED_STRING   reduce using rule 220 (mixfix -> BINDER template NAT RIGHT_PAREN .)
    LEFT_BRACKET    reduce using rule 220 (mixfix -> BINDER template NAT RIGHT_PAREN .)


state 281

    (221) mixfix -> BINDER template prio NAT . RIGHT_PAREN

    RIGHT_PAREN     shift and go to state 349


state 282

    (226) prio -> LEFT_BRACKET NAT . RIGHT_BRACKET

    RIGHT_BRACKET   shift and go to state 350


state 283

    (94) var -> GREEK COLON COLON ID mixfix .

    AND             reduce using rule 94 (var -> GREEK COLON COLON ID mixfix .)
    WHERE           reduce using rule 94 (var -> GREEK COLON COLON ID mixfix .)
    AXIOMATIZATION  reduce using rule 94 (var -> GREEK COLON COLON ID mixfix .)
    FUN             reduce using rule 94 (var -> GREEK COLON COLON ID mixfix .)
    FUNCTION        reduce using rule 94 (var -> GREEK COLON COLON ID mixfix .)
    LEMMA           reduce using rule 94 (var -> GREEK COLON COLON ID mixfix .)
    LOCALE          reduce using rule 94 (var -> GREEK COLON COLON ID mixfix .)
    METHOD          reduce using rule 94 (var -> GREEK COLON COLON ID mixfix .)
    SECTION         reduce using rule 94 (var -> GREEK COLON COLON ID mixfix .)
    TEXT            reduce using rule 94 (var -> GREEK COLON COLON ID mixfix .)
    TYPE_SYNONYM    reduce using rule 94 (var -> GREEK COLON COLON ID mixfix .)
    TYPEDECL        reduce using rule 94 (var -> GREEK COLON COLON ID mixfix .)
    END             reduce using rule 94 (var -> GREEK COLON COLON ID mixfix .)
    FIXES           reduce using rule 94 (var -> GREEK COLON COLON ID mixfix .)
    CONSTRAINS      reduce using rule 94 (var -> GREEK COLON COLON ID mixfix .)
    ASSUMES         reduce using rule 94 (var -> GREEK COLON COLON ID mixfix .)
    DEFINES         reduce using rule 94 (var -> GREEK COLON COLON ID mixfix .)
    NOTES           reduce using rule 94 (var -> GREEK COLON COLON ID mixfix .)
    BEGIN           reduce using rule 94 (var -> GREEK COLON COLON ID mixfix .)
    OPENING         reduce using rule 94 (var -> GREEK COLON COLON ID mixfix .)
    ID              reduce using rule 94 (var -> GREEK COLON COLON ID mixfix .)
    QUOTED_STRING   reduce using rule 94 (var -> GREEK COLON COLON ID mixfix .)
    LEFT_BRACKET    reduce using rule 94 (var -> GREEK COLON COLON ID mixfix .)


state 284

    (96) var -> GREEK COLON COLON QUOTED_STRING mixfix .

    AND             reduce using rule 96 (var -> GREEK COLON COLON QUOTED_STRING mixfix .)
    WHERE           reduce using rule 96 (var -> GREEK COLON COLON QUOTED_STRING mixfix .)
    AXIOMATIZATION  reduce using rule 96 (var -> GREEK COLON COLON QUOTED_STRING mixfix .)
    FUN             reduce using rule 96 (var -> GREEK COLON COLON QUOTED_STRING mixfix .)
    FUNCTION        reduce using rule 96 (var -> GREEK COLON COLON QUOTED_STRING mixfix .)
    LEMMA           reduce using rule 96 (var -> GREEK COLON COLON QUOTED_STRING mixfix .)
    LOCALE          reduce using rule 96 (var -> GREEK COLON COLON QUOTED_STRING mixfix .)
    METHOD          reduce using rule 96 (var -> GREEK COLON COLON QUOTED_STRING mixfix .)
    SECTION         reduce using rule 96 (var -> GREEK COLON COLON QUOTED_STRING mixfix .)
    TEXT            reduce using rule 96 (var -> GREEK COLON COLON QUOTED_STRING mixfix .)
    TYPE_SYNONYM    reduce using rule 96 (var -> GREEK COLON COLON QUOTED_STRING mixfix .)
    TYPEDECL        reduce using rule 96 (var -> GREEK COLON COLON QUOTED_STRING mixfix .)
    END             reduce using rule 96 (var -> GREEK COLON COLON QUOTED_STRING mixfix .)
    FIXES           reduce using rule 96 (var -> GREEK COLON COLON QUOTED_STRING mixfix .)
    CONSTRAINS      reduce using rule 96 (var -> GREEK COLON COLON QUOTED_STRING mixfix .)
    ASSUMES         reduce using rule 96 (var -> GREEK COLON COLON QUOTED_STRING mixfix .)
    DEFINES         reduce using rule 96 (var -> GREEK COLON COLON QUOTED_STRING mixfix .)
    NOTES           reduce using rule 96 (var -> GREEK COLON COLON QUOTED_STRING mixfix .)
    BEGIN           reduce using rule 96 (var -> GREEK COLON COLON QUOTED_STRING mixfix .)
    OPENING         reduce using rule 96 (var -> GREEK COLON COLON QUOTED_STRING mixfix .)
    ID              reduce using rule 96 (var -> GREEK COLON COLON QUOTED_STRING mixfix .)
    QUOTED_STRING   reduce using rule 96 (var -> GREEK COLON COLON QUOTED_STRING mixfix .)
    LEFT_BRACKET    reduce using rule 96 (var -> GREEK COLON COLON QUOTED_STRING mixfix .)


state 285

    (131) structured_spec -> ID spec_prems for_fixes .

    ID              reduce using rule 131 (structured_spec -> ID spec_prems for_fixes .)
    QUOTED_STRING   reduce using rule 131 (structured_spec -> ID spec_prems for_fixes .)
    LEFT_BRACKET    reduce using rule 131 (structured_spec -> ID spec_prems for_fixes .)
    AXIOMATIZATION  reduce using rule 131 (structured_spec -> ID spec_prems for_fixes .)
    FUN             reduce using rule 131 (structured_spec -> ID spec_prems for_fixes .)
    FUNCTION        reduce using rule 131 (structured_spec -> ID spec_prems for_fixes .)
    LEMMA           reduce using rule 131 (structured_spec -> ID spec_prems for_fixes .)
    LOCALE          reduce using rule 131 (structured_spec -> ID spec_prems for_fixes .)
    METHOD          reduce using rule 131 (structured_spec -> ID spec_prems for_fixes .)
    SECTION         reduce using rule 131 (structured_spec -> ID spec_prems for_fixes .)
    TEXT            reduce using rule 131 (structured_spec -> ID spec_prems for_fixes .)
    TYPE_SYNONYM    reduce using rule 131 (structured_spec -> ID spec_prems for_fixes .)
    TYPEDECL        reduce using rule 131 (structured_spec -> ID spec_prems for_fixes .)
    END             reduce using rule 131 (structured_spec -> ID spec_prems for_fixes .)


state 286

    (132) structured_spec -> QUOTED_STRING spec_prems for_fixes .

    ID              reduce using rule 132 (structured_spec -> QUOTED_STRING spec_prems for_fixes .)
    QUOTED_STRING   reduce using rule 132 (structured_spec -> QUOTED_STRING spec_prems for_fixes .)
    LEFT_BRACKET    reduce using rule 132 (structured_spec -> QUOTED_STRING spec_prems for_fixes .)
    AXIOMATIZATION  reduce using rule 132 (structured_spec -> QUOTED_STRING spec_prems for_fixes .)
    FUN             reduce using rule 132 (structured_spec -> QUOTED_STRING spec_prems for_fixes .)
    FUNCTION        reduce using rule 132 (structured_spec -> QUOTED_STRING spec_prems for_fixes .)
    LEMMA           reduce using rule 132 (structured_spec -> QUOTED_STRING spec_prems for_fixes .)
    LOCALE          reduce using rule 132 (structured_spec -> QUOTED_STRING spec_prems for_fixes .)
    METHOD          reduce using rule 132 (structured_spec -> QUOTED_STRING spec_prems for_fixes .)
    SECTION         reduce using rule 132 (structured_spec -> QUOTED_STRING spec_prems for_fixes .)
    TEXT            reduce using rule 132 (structured_spec -> QUOTED_STRING spec_prems for_fixes .)
    TYPE_SYNONYM    reduce using rule 132 (structured_spec -> QUOTED_STRING spec_prems for_fixes .)
    TYPEDECL        reduce using rule 132 (structured_spec -> QUOTED_STRING spec_prems for_fixes .)
    END             reduce using rule 132 (structured_spec -> QUOTED_STRING spec_prems for_fixes .)


state 287

    (133) structured_spec -> thmdecl ID spec_prems . for_fixes
    (127) for_fixes -> . empty
    (128) for_fixes -> . FOR vars
    (253) empty -> .

    FOR             shift and go to state 168
    ID              reduce using rule 253 (empty -> .)
    QUOTED_STRING   reduce using rule 253 (empty -> .)
    LEFT_BRACKET    reduce using rule 253 (empty -> .)
    AXIOMATIZATION  reduce using rule 253 (empty -> .)
    FUN             reduce using rule 253 (empty -> .)
    FUNCTION        reduce using rule 253 (empty -> .)
    LEMMA           reduce using rule 253 (empty -> .)
    LOCALE          reduce using rule 253 (empty -> .)
    METHOD          reduce using rule 253 (empty -> .)
    SECTION         reduce using rule 253 (empty -> .)
    TEXT            reduce using rule 253 (empty -> .)
    TYPE_SYNONYM    reduce using rule 253 (empty -> .)
    TYPEDECL        reduce using rule 253 (empty -> .)
    END             reduce using rule 253 (empty -> .)

    for_fixes                      shift and go to state 351
    empty                          shift and go to state 167

state 288

    (134) structured_spec -> thmdecl QUOTED_STRING spec_prems . for_fixes
    (127) for_fixes -> . empty
    (128) for_fixes -> . FOR vars
    (253) empty -> .

    FOR             shift and go to state 168
    ID              reduce using rule 253 (empty -> .)
    QUOTED_STRING   reduce using rule 253 (empty -> .)
    LEFT_BRACKET    reduce using rule 253 (empty -> .)
    AXIOMATIZATION  reduce using rule 253 (empty -> .)
    FUN             reduce using rule 253 (empty -> .)
    FUNCTION        reduce using rule 253 (empty -> .)
    LEMMA           reduce using rule 253 (empty -> .)
    LOCALE          reduce using rule 253 (empty -> .)
    METHOD          reduce using rule 253 (empty -> .)
    SECTION         reduce using rule 253 (empty -> .)
    TEXT            reduce using rule 253 (empty -> .)
    TYPE_SYNONYM    reduce using rule 253 (empty -> .)
    TYPEDECL        reduce using rule 253 (empty -> .)
    END             reduce using rule 253 (empty -> .)

    for_fixes                      shift and go to state 352
    empty                          shift and go to state 167

state 289

    (44) lemma_block -> LEMMA ID COLON assumes_block shows_clause lemma_proof_block .

    AXIOMATIZATION  reduce using rule 44 (lemma_block -> LEMMA ID COLON assumes_block shows_clause lemma_proof_block .)
    FUN             reduce using rule 44 (lemma_block -> LEMMA ID COLON assumes_block shows_clause lemma_proof_block .)
    FUNCTION        reduce using rule 44 (lemma_block -> LEMMA ID COLON assumes_block shows_clause lemma_proof_block .)
    LEMMA           reduce using rule 44 (lemma_block -> LEMMA ID COLON assumes_block shows_clause lemma_proof_block .)
    LOCALE          reduce using rule 44 (lemma_block -> LEMMA ID COLON assumes_block shows_clause lemma_proof_block .)
    METHOD          reduce using rule 44 (lemma_block -> LEMMA ID COLON assumes_block shows_clause lemma_proof_block .)
    SECTION         reduce using rule 44 (lemma_block -> LEMMA ID COLON assumes_block shows_clause lemma_proof_block .)
    TEXT            reduce using rule 44 (lemma_block -> LEMMA ID COLON assumes_block shows_clause lemma_proof_block .)
    TYPE_SYNONYM    reduce using rule 44 (lemma_block -> LEMMA ID COLON assumes_block shows_clause lemma_proof_block .)
    TYPEDECL        reduce using rule 44 (lemma_block -> LEMMA ID COLON assumes_block shows_clause lemma_proof_block .)
    END             reduce using rule 44 (lemma_block -> LEMMA ID COLON assumes_block shows_clause lemma_proof_block .)


state 290

    (45) lemma_proof_block -> PROOF . apply_block
    (54) apply_block -> . single_apply apply_block
    (55) apply_block -> . subgoal apply_block
    (56) apply_block -> . empty
    (57) single_apply -> . APPLY instruction
    (58) single_apply -> . APPLY LEFT_PAREN instruction RIGHT_PAREN
    (59) single_apply -> . USING using_block APPLY DASH
    (60) single_apply -> . USING using_block APPLY instruction
    (61) single_apply -> . USING using_block APPLY LEFT_PAREN instruction RIGHT_PAREN
    (62) single_apply -> . BY instruction
    (63) single_apply -> . BY LEFT_PAREN instruction RIGHT_PAREN
    (64) single_apply -> . USING using_block BY instruction
    (65) single_apply -> . USING using_block BY LEFT_PAREN instruction RIGHT_PAREN
    (66) single_apply -> . DONE
    (67) single_apply -> . SORRY
    (75) subgoal -> . SUBGOAL QUOTED_STRING apply_block
    (253) empty -> .

    APPLY           shift and go to state 295
    USING           shift and go to state 296
    BY              shift and go to state 297
    DONE            shift and go to state 298
    SORRY           shift and go to state 299
    SUBGOAL         shift and go to state 300
    AXIOMATIZATION  reduce using rule 253 (empty -> .)
    FUN             reduce using rule 253 (empty -> .)
    FUNCTION        reduce using rule 253 (empty -> .)
    LEMMA           reduce using rule 253 (empty -> .)
    LOCALE          reduce using rule 253 (empty -> .)
    METHOD          reduce using rule 253 (empty -> .)
    SECTION         reduce using rule 253 (empty -> .)
    TEXT            reduce using rule 253 (empty -> .)
    TYPE_SYNONYM    reduce using rule 253 (empty -> .)
    TYPEDECL        reduce using rule 253 (empty -> .)
    END             reduce using rule 253 (empty -> .)

    apply_block                    shift and go to state 353
    single_apply                   shift and go to state 293
    subgoal                        shift and go to state 294
    empty                          shift and go to state 354

state 291

    (46) lemma_proof_block -> apply_block .

    AXIOMATIZATION  reduce using rule 46 (lemma_proof_block -> apply_block .)
    FUN             reduce using rule 46 (lemma_proof_block -> apply_block .)
    FUNCTION        reduce using rule 46 (lemma_proof_block -> apply_block .)
    LEMMA           reduce using rule 46 (lemma_proof_block -> apply_block .)
    LOCALE          reduce using rule 46 (lemma_proof_block -> apply_block .)
    METHOD          reduce using rule 46 (lemma_proof_block -> apply_block .)
    SECTION         reduce using rule 46 (lemma_proof_block -> apply_block .)
    TEXT            reduce using rule 46 (lemma_proof_block -> apply_block .)
    TYPE_SYNONYM    reduce using rule 46 (lemma_proof_block -> apply_block .)
    TYPEDECL        reduce using rule 46 (lemma_proof_block -> apply_block .)
    END             reduce using rule 46 (lemma_proof_block -> apply_block .)


state 292

    (47) lemma_proof_block -> empty .
    (56) apply_block -> empty .

  ! reduce/reduce conflict for AXIOMATIZATION resolved using rule 47 (lemma_proof_block -> empty .)
  ! reduce/reduce conflict for FUN resolved using rule 47 (lemma_proof_block -> empty .)
  ! reduce/reduce conflict for FUNCTION resolved using rule 47 (lemma_proof_block -> empty .)
  ! reduce/reduce conflict for LEMMA resolved using rule 47 (lemma_proof_block -> empty .)
  ! reduce/reduce conflict for LOCALE resolved using rule 47 (lemma_proof_block -> empty .)
  ! reduce/reduce conflict for METHOD resolved using rule 47 (lemma_proof_block -> empty .)
  ! reduce/reduce conflict for SECTION resolved using rule 47 (lemma_proof_block -> empty .)
  ! reduce/reduce conflict for TEXT resolved using rule 47 (lemma_proof_block -> empty .)
  ! reduce/reduce conflict for TYPE_SYNONYM resolved using rule 47 (lemma_proof_block -> empty .)
  ! reduce/reduce conflict for TYPEDECL resolved using rule 47 (lemma_proof_block -> empty .)
  ! reduce/reduce conflict for END resolved using rule 47 (lemma_proof_block -> empty .)
    AXIOMATIZATION  reduce using rule 47 (lemma_proof_block -> empty .)
    FUN             reduce using rule 47 (lemma_proof_block -> empty .)
    FUNCTION        reduce using rule 47 (lemma_proof_block -> empty .)
    LEMMA           reduce using rule 47 (lemma_proof_block -> empty .)
    LOCALE          reduce using rule 47 (lemma_proof_block -> empty .)
    METHOD          reduce using rule 47 (lemma_proof_block -> empty .)
    SECTION         reduce using rule 47 (lemma_proof_block -> empty .)
    TEXT            reduce using rule 47 (lemma_proof_block -> empty .)
    TYPE_SYNONYM    reduce using rule 47 (lemma_proof_block -> empty .)
    TYPEDECL        reduce using rule 47 (lemma_proof_block -> empty .)
    END             reduce using rule 47 (lemma_proof_block -> empty .)

  ! AXIOMATIZATION  [ reduce using rule 56 (apply_block -> empty .) ]
  ! FUN             [ reduce using rule 56 (apply_block -> empty .) ]
  ! FUNCTION        [ reduce using rule 56 (apply_block -> empty .) ]
  ! LEMMA           [ reduce using rule 56 (apply_block -> empty .) ]
  ! LOCALE          [ reduce using rule 56 (apply_block -> empty .) ]
  ! METHOD          [ reduce using rule 56 (apply_block -> empty .) ]
  ! SECTION         [ reduce using rule 56 (apply_block -> empty .) ]
  ! TEXT            [ reduce using rule 56 (apply_block -> empty .) ]
  ! TYPE_SYNONYM    [ reduce using rule 56 (apply_block -> empty .) ]
  ! TYPEDECL        [ reduce using rule 56 (apply_block -> empty .) ]
  ! END             [ reduce using rule 56 (apply_block -> empty .) ]


state 293

    (54) apply_block -> single_apply . apply_block
    (54) apply_block -> . single_apply apply_block
    (55) apply_block -> . subgoal apply_block
    (56) apply_block -> . empty
    (57) single_apply -> . APPLY instruction
    (58) single_apply -> . APPLY LEFT_PAREN instruction RIGHT_PAREN
    (59) single_apply -> . USING using_block APPLY DASH
    (60) single_apply -> . USING using_block APPLY instruction
    (61) single_apply -> . USING using_block APPLY LEFT_PAREN instruction RIGHT_PAREN
    (62) single_apply -> . BY instruction
    (63) single_apply -> . BY LEFT_PAREN instruction RIGHT_PAREN
    (64) single_apply -> . USING using_block BY instruction
    (65) single_apply -> . USING using_block BY LEFT_PAREN instruction RIGHT_PAREN
    (66) single_apply -> . DONE
    (67) single_apply -> . SORRY
    (75) subgoal -> . SUBGOAL QUOTED_STRING apply_block
    (253) empty -> .

  ! shift/reduce conflict for APPLY resolved as shift
  ! shift/reduce conflict for USING resolved as shift
  ! shift/reduce conflict for BY resolved as shift
  ! shift/reduce conflict for DONE resolved as shift
  ! shift/reduce conflict for SORRY resolved as shift
  ! shift/reduce conflict for SUBGOAL resolved as shift
    APPLY           shift and go to state 295
    USING           shift and go to state 296
    BY              shift and go to state 297
    DONE            shift and go to state 298
    SORRY           shift and go to state 299
    SUBGOAL         shift and go to state 300
    AXIOMATIZATION  reduce using rule 253 (empty -> .)
    FUN             reduce using rule 253 (empty -> .)
    FUNCTION        reduce using rule 253 (empty -> .)
    LEMMA           reduce using rule 253 (empty -> .)
    LOCALE          reduce using rule 253 (empty -> .)
    METHOD          reduce using rule 253 (empty -> .)
    SECTION         reduce using rule 253 (empty -> .)
    TEXT            reduce using rule 253 (empty -> .)
    TYPE_SYNONYM    reduce using rule 253 (empty -> .)
    TYPEDECL        reduce using rule 253 (empty -> .)
    END             reduce using rule 253 (empty -> .)

  ! APPLY           [ reduce using rule 253 (empty -> .) ]
  ! USING           [ reduce using rule 253 (empty -> .) ]
  ! BY              [ reduce using rule 253 (empty -> .) ]
  ! DONE            [ reduce using rule 253 (empty -> .) ]
  ! SORRY           [ reduce using rule 253 (empty -> .) ]
  ! SUBGOAL         [ reduce using rule 253 (empty -> .) ]

    single_apply                   shift and go to state 293
    apply_block                    shift and go to state 355
    subgoal                        shift and go to state 294
    empty                          shift and go to state 354

state 294

    (55) apply_block -> subgoal . apply_block
    (54) apply_block -> . single_apply apply_block
    (55) apply_block -> . subgoal apply_block
    (56) apply_block -> . empty
    (57) single_apply -> . APPLY instruction
    (58) single_apply -> . APPLY LEFT_PAREN instruction RIGHT_PAREN
    (59) single_apply -> . USING using_block APPLY DASH
    (60) single_apply -> . USING using_block APPLY instruction
    (61) single_apply -> . USING using_block APPLY LEFT_PAREN instruction RIGHT_PAREN
    (62) single_apply -> . BY instruction
    (63) single_apply -> . BY LEFT_PAREN instruction RIGHT_PAREN
    (64) single_apply -> . USING using_block BY instruction
    (65) single_apply -> . USING using_block BY LEFT_PAREN instruction RIGHT_PAREN
    (66) single_apply -> . DONE
    (67) single_apply -> . SORRY
    (75) subgoal -> . SUBGOAL QUOTED_STRING apply_block
    (253) empty -> .

  ! shift/reduce conflict for APPLY resolved as shift
  ! shift/reduce conflict for USING resolved as shift
  ! shift/reduce conflict for BY resolved as shift
  ! shift/reduce conflict for DONE resolved as shift
  ! shift/reduce conflict for SORRY resolved as shift
  ! shift/reduce conflict for SUBGOAL resolved as shift
    APPLY           shift and go to state 295
    USING           shift and go to state 296
    BY              shift and go to state 297
    DONE            shift and go to state 298
    SORRY           shift and go to state 299
    SUBGOAL         shift and go to state 300
    AXIOMATIZATION  reduce using rule 253 (empty -> .)
    FUN             reduce using rule 253 (empty -> .)
    FUNCTION        reduce using rule 253 (empty -> .)
    LEMMA           reduce using rule 253 (empty -> .)
    LOCALE          reduce using rule 253 (empty -> .)
    METHOD          reduce using rule 253 (empty -> .)
    SECTION         reduce using rule 253 (empty -> .)
    TEXT            reduce using rule 253 (empty -> .)
    TYPE_SYNONYM    reduce using rule 253 (empty -> .)
    TYPEDECL        reduce using rule 253 (empty -> .)
    END             reduce using rule 253 (empty -> .)

  ! APPLY           [ reduce using rule 253 (empty -> .) ]
  ! USING           [ reduce using rule 253 (empty -> .) ]
  ! BY              [ reduce using rule 253 (empty -> .) ]
  ! DONE            [ reduce using rule 253 (empty -> .) ]
  ! SORRY           [ reduce using rule 253 (empty -> .) ]
  ! SUBGOAL         [ reduce using rule 253 (empty -> .) ]

    subgoal                        shift and go to state 294
    apply_block                    shift and go to state 356
    single_apply                   shift and go to state 293
    empty                          shift and go to state 354

state 295

    (57) single_apply -> APPLY . instruction
    (58) single_apply -> APPLY . LEFT_PAREN instruction RIGHT_PAREN
    (23) instruction -> . single_instruction
    (24) instruction -> . single_instruction instruction_modifier
    (25) instruction -> . single_instruction instruction_modifier COMMA instruction
    (26) instruction -> . single_instruction SEMICOLON instruction
    (27) instruction -> . single_instruction COMMA instruction
    (28) instruction -> . LEFT_PAREN instruction RIGHT_PAREN
    (29) instruction -> . LEFT_PAREN instruction RIGHT_PAREN instruction_modifier
    (32) single_instruction -> . ID
    (33) single_instruction -> . ID method_args
    (34) single_instruction -> . LEFT_PAREN ID method_args RIGHT_PAREN
    (35) single_instruction -> . LEFT_PAREN ID method_args RIGHT_PAREN instruction_modifier

    LEFT_PAREN      shift and go to state 358
    ID              shift and go to state 161

    instruction                    shift and go to state 357
    single_instruction             shift and go to state 159

state 296

    (59) single_apply -> USING . using_block APPLY DASH
    (60) single_apply -> USING . using_block APPLY instruction
    (61) single_apply -> USING . using_block APPLY LEFT_PAREN instruction RIGHT_PAREN
    (64) single_apply -> USING . using_block BY instruction
    (65) single_apply -> USING . using_block BY LEFT_PAREN instruction RIGHT_PAREN
    (68) using_block -> . ASSMS using_block
    (69) using_block -> . ASSMS LEFT_PAREN NAT RIGHT_PAREN using_block
    (70) using_block -> . ASSMS LEFT_PAREN NAT COMMA NAT RIGHT_PAREN using_block
    (71) using_block -> . ASSMS LEFT_PAREN NAT DASH NAT RIGHT_PAREN using_block
    (72) using_block -> . empty
    (253) empty -> .

    ASSMS           shift and go to state 360
    APPLY           reduce using rule 253 (empty -> .)
    BY              reduce using rule 253 (empty -> .)

    using_block                    shift and go to state 359
    empty                          shift and go to state 361

state 297

    (62) single_apply -> BY . instruction
    (63) single_apply -> BY . LEFT_PAREN instruction RIGHT_PAREN
    (23) instruction -> . single_instruction
    (24) instruction -> . single_instruction instruction_modifier
    (25) instruction -> . single_instruction instruction_modifier COMMA instruction
    (26) instruction -> . single_instruction SEMICOLON instruction
    (27) instruction -> . single_instruction COMMA instruction
    (28) instruction -> . LEFT_PAREN instruction RIGHT_PAREN
    (29) instruction -> . LEFT_PAREN instruction RIGHT_PAREN instruction_modifier
    (32) single_instruction -> . ID
    (33) single_instruction -> . ID method_args
    (34) single_instruction -> . LEFT_PAREN ID method_args RIGHT_PAREN
    (35) single_instruction -> . LEFT_PAREN ID method_args RIGHT_PAREN instruction_modifier

    LEFT_PAREN      shift and go to state 363
    ID              shift and go to state 161

    instruction                    shift and go to state 362
    single_instruction             shift and go to state 159

state 298

    (66) single_apply -> DONE .

    APPLY           reduce using rule 66 (single_apply -> DONE .)
    USING           reduce using rule 66 (single_apply -> DONE .)
    BY              reduce using rule 66 (single_apply -> DONE .)
    DONE            reduce using rule 66 (single_apply -> DONE .)
    SORRY           reduce using rule 66 (single_apply -> DONE .)
    SUBGOAL         reduce using rule 66 (single_apply -> DONE .)
    AXIOMATIZATION  reduce using rule 66 (single_apply -> DONE .)
    FUN             reduce using rule 66 (single_apply -> DONE .)
    FUNCTION        reduce using rule 66 (single_apply -> DONE .)
    LEMMA           reduce using rule 66 (single_apply -> DONE .)
    LOCALE          reduce using rule 66 (single_apply -> DONE .)
    METHOD          reduce using rule 66 (single_apply -> DONE .)
    SECTION         reduce using rule 66 (single_apply -> DONE .)
    TEXT            reduce using rule 66 (single_apply -> DONE .)
    TYPE_SYNONYM    reduce using rule 66 (single_apply -> DONE .)
    TYPEDECL        reduce using rule 66 (single_apply -> DONE .)
    END             reduce using rule 66 (single_apply -> DONE .)


state 299

    (67) single_apply -> SORRY .

    APPLY           reduce using rule 67 (single_apply -> SORRY .)
    USING           reduce using rule 67 (single_apply -> SORRY .)
    BY              reduce using rule 67 (single_apply -> SORRY .)
    DONE            reduce using rule 67 (single_apply -> SORRY .)
    SORRY           reduce using rule 67 (single_apply -> SORRY .)
    SUBGOAL         reduce using rule 67 (single_apply -> SORRY .)
    AXIOMATIZATION  reduce using rule 67 (single_apply -> SORRY .)
    FUN             reduce using rule 67 (single_apply -> SORRY .)
    FUNCTION        reduce using rule 67 (single_apply -> SORRY .)
    LEMMA           reduce using rule 67 (single_apply -> SORRY .)
    LOCALE          reduce using rule 67 (single_apply -> SORRY .)
    METHOD          reduce using rule 67 (single_apply -> SORRY .)
    SECTION         reduce using rule 67 (single_apply -> SORRY .)
    TEXT            reduce using rule 67 (single_apply -> SORRY .)
    TYPE_SYNONYM    reduce using rule 67 (single_apply -> SORRY .)
    TYPEDECL        reduce using rule 67 (single_apply -> SORRY .)
    END             reduce using rule 67 (single_apply -> SORRY .)


state 300

    (75) subgoal -> SUBGOAL . QUOTED_STRING apply_block

    QUOTED_STRING   shift and go to state 364


state 301

    (53) shows_clause -> SHOWS QUOTED_STRING .

    PROOF           reduce using rule 53 (shows_clause -> SHOWS QUOTED_STRING .)
    APPLY           reduce using rule 53 (shows_clause -> SHOWS QUOTED_STRING .)
    USING           reduce using rule 53 (shows_clause -> SHOWS QUOTED_STRING .)
    BY              reduce using rule 53 (shows_clause -> SHOWS QUOTED_STRING .)
    DONE            reduce using rule 53 (shows_clause -> SHOWS QUOTED_STRING .)
    SORRY           reduce using rule 53 (shows_clause -> SHOWS QUOTED_STRING .)
    SUBGOAL         reduce using rule 53 (shows_clause -> SHOWS QUOTED_STRING .)
    AXIOMATIZATION  reduce using rule 53 (shows_clause -> SHOWS QUOTED_STRING .)
    FUN             reduce using rule 53 (shows_clause -> SHOWS QUOTED_STRING .)
    FUNCTION        reduce using rule 53 (shows_clause -> SHOWS QUOTED_STRING .)
    LEMMA           reduce using rule 53 (shows_clause -> SHOWS QUOTED_STRING .)
    LOCALE          reduce using rule 53 (shows_clause -> SHOWS QUOTED_STRING .)
    METHOD          reduce using rule 53 (shows_clause -> SHOWS QUOTED_STRING .)
    SECTION         reduce using rule 53 (shows_clause -> SHOWS QUOTED_STRING .)
    TEXT            reduce using rule 53 (shows_clause -> SHOWS QUOTED_STRING .)
    TYPE_SYNONYM    reduce using rule 53 (shows_clause -> SHOWS QUOTED_STRING .)
    TYPEDECL        reduce using rule 53 (shows_clause -> SHOWS QUOTED_STRING .)
    END             reduce using rule 53 (shows_clause -> SHOWS QUOTED_STRING .)


state 302

    (49) assumptions_list -> assumption AND . assumptions_list
    (49) assumptions_list -> . assumption AND assumptions_list
    (50) assumptions_list -> . assumption
    (51) assumption -> . QUOTED_STRING
    (52) assumption -> . NAT COLON QUOTED_STRING

    QUOTED_STRING   shift and go to state 208
    NAT             shift and go to state 209

    assumption                     shift and go to state 207
    assumptions_list               shift and go to state 365

state 303

    (52) assumption -> NAT COLON . QUOTED_STRING

    QUOTED_STRING   shift and go to state 366


state 304

    (176) locale_block -> LOCALE ID comment_block BEGIN content END .

    AXIOMATIZATION  reduce using rule 176 (locale_block -> LOCALE ID comment_block BEGIN content END .)
    FUN             reduce using rule 176 (locale_block -> LOCALE ID comment_block BEGIN content END .)
    FUNCTION        reduce using rule 176 (locale_block -> LOCALE ID comment_block BEGIN content END .)
    LEMMA           reduce using rule 176 (locale_block -> LOCALE ID comment_block BEGIN content END .)
    LOCALE          reduce using rule 176 (locale_block -> LOCALE ID comment_block BEGIN content END .)
    METHOD          reduce using rule 176 (locale_block -> LOCALE ID comment_block BEGIN content END .)
    SECTION         reduce using rule 176 (locale_block -> LOCALE ID comment_block BEGIN content END .)
    TEXT            reduce using rule 176 (locale_block -> LOCALE ID comment_block BEGIN content END .)
    TYPE_SYNONYM    reduce using rule 176 (locale_block -> LOCALE ID comment_block BEGIN content END .)
    TYPEDECL        reduce using rule 176 (locale_block -> LOCALE ID comment_block BEGIN content END .)
    END             reduce using rule 176 (locale_block -> LOCALE ID comment_block BEGIN content END .)


state 305

    (167) pos_insts -> ID pos_insts .

    PLUS            reduce using rule 167 (pos_insts -> ID pos_insts .)
    FOR             reduce using rule 167 (pos_insts -> ID pos_insts .)
    OPENING         reduce using rule 167 (pos_insts -> ID pos_insts .)
    BEGIN           reduce using rule 167 (pos_insts -> ID pos_insts .)
    AXIOMATIZATION  reduce using rule 167 (pos_insts -> ID pos_insts .)
    FUN             reduce using rule 167 (pos_insts -> ID pos_insts .)
    FUNCTION        reduce using rule 167 (pos_insts -> ID pos_insts .)
    LEMMA           reduce using rule 167 (pos_insts -> ID pos_insts .)
    LOCALE          reduce using rule 167 (pos_insts -> ID pos_insts .)
    METHOD          reduce using rule 167 (pos_insts -> ID pos_insts .)
    SECTION         reduce using rule 167 (pos_insts -> ID pos_insts .)
    TEXT            reduce using rule 167 (pos_insts -> ID pos_insts .)
    TYPE_SYNONYM    reduce using rule 167 (pos_insts -> ID pos_insts .)
    TYPEDECL        reduce using rule 167 (pos_insts -> ID pos_insts .)
    END             reduce using rule 167 (pos_insts -> ID pos_insts .)


state 306

    (166) pos_insts -> UNDERSCORE pos_insts .

    PLUS            reduce using rule 166 (pos_insts -> UNDERSCORE pos_insts .)
    FOR             reduce using rule 166 (pos_insts -> UNDERSCORE pos_insts .)
    OPENING         reduce using rule 166 (pos_insts -> UNDERSCORE pos_insts .)
    BEGIN           reduce using rule 166 (pos_insts -> UNDERSCORE pos_insts .)
    AXIOMATIZATION  reduce using rule 166 (pos_insts -> UNDERSCORE pos_insts .)
    FUN             reduce using rule 166 (pos_insts -> UNDERSCORE pos_insts .)
    FUNCTION        reduce using rule 166 (pos_insts -> UNDERSCORE pos_insts .)
    LEMMA           reduce using rule 166 (pos_insts -> UNDERSCORE pos_insts .)
    LOCALE          reduce using rule 166 (pos_insts -> UNDERSCORE pos_insts .)
    METHOD          reduce using rule 166 (pos_insts -> UNDERSCORE pos_insts .)
    SECTION         reduce using rule 166 (pos_insts -> UNDERSCORE pos_insts .)
    TEXT            reduce using rule 166 (pos_insts -> UNDERSCORE pos_insts .)
    TYPE_SYNONYM    reduce using rule 166 (pos_insts -> UNDERSCORE pos_insts .)
    TYPEDECL        reduce using rule 166 (pos_insts -> UNDERSCORE pos_insts .)
    END             reduce using rule 166 (pos_insts -> UNDERSCORE pos_insts .)


state 307

    (168) pos_insts -> QUOTED_STRING pos_insts .

    PLUS            reduce using rule 168 (pos_insts -> QUOTED_STRING pos_insts .)
    FOR             reduce using rule 168 (pos_insts -> QUOTED_STRING pos_insts .)
    OPENING         reduce using rule 168 (pos_insts -> QUOTED_STRING pos_insts .)
    BEGIN           reduce using rule 168 (pos_insts -> QUOTED_STRING pos_insts .)
    AXIOMATIZATION  reduce using rule 168 (pos_insts -> QUOTED_STRING pos_insts .)
    FUN             reduce using rule 168 (pos_insts -> QUOTED_STRING pos_insts .)
    FUNCTION        reduce using rule 168 (pos_insts -> QUOTED_STRING pos_insts .)
    LEMMA           reduce using rule 168 (pos_insts -> QUOTED_STRING pos_insts .)
    LOCALE          reduce using rule 168 (pos_insts -> QUOTED_STRING pos_insts .)
    METHOD          reduce using rule 168 (pos_insts -> QUOTED_STRING pos_insts .)
    SECTION         reduce using rule 168 (pos_insts -> QUOTED_STRING pos_insts .)
    TEXT            reduce using rule 168 (pos_insts -> QUOTED_STRING pos_insts .)
    TYPE_SYNONYM    reduce using rule 168 (pos_insts -> QUOTED_STRING pos_insts .)
    TYPEDECL        reduce using rule 168 (pos_insts -> QUOTED_STRING pos_insts .)
    END             reduce using rule 168 (pos_insts -> QUOTED_STRING pos_insts .)


state 308

    (169) name_insts -> WHERE name_insts_list .

    PLUS            reduce using rule 169 (name_insts -> WHERE name_insts_list .)
    FOR             reduce using rule 169 (name_insts -> WHERE name_insts_list .)
    OPENING         reduce using rule 169 (name_insts -> WHERE name_insts_list .)
    BEGIN           reduce using rule 169 (name_insts -> WHERE name_insts_list .)
    AXIOMATIZATION  reduce using rule 169 (name_insts -> WHERE name_insts_list .)
    FUN             reduce using rule 169 (name_insts -> WHERE name_insts_list .)
    FUNCTION        reduce using rule 169 (name_insts -> WHERE name_insts_list .)
    LEMMA           reduce using rule 169 (name_insts -> WHERE name_insts_list .)
    LOCALE          reduce using rule 169 (name_insts -> WHERE name_insts_list .)
    METHOD          reduce using rule 169 (name_insts -> WHERE name_insts_list .)
    SECTION         reduce using rule 169 (name_insts -> WHERE name_insts_list .)
    TEXT            reduce using rule 169 (name_insts -> WHERE name_insts_list .)
    TYPE_SYNONYM    reduce using rule 169 (name_insts -> WHERE name_insts_list .)
    TYPEDECL        reduce using rule 169 (name_insts -> WHERE name_insts_list .)
    END             reduce using rule 169 (name_insts -> WHERE name_insts_list .)


state 309

    (170) name_insts_list -> ID . EQUALS ID
    (171) name_insts_list -> ID . EQUALS QUOTED_STRING
    (172) name_insts_list -> ID . EQUALS ID name_insts_list
    (173) name_insts_list -> ID . EQUALS QUOTED_STRING name_insts_list

    EQUALS          shift and go to state 367


state 310

    (178) locale_block -> LOCALE ID EQ locale BEGIN content . END

    END             shift and go to state 368


state 311

    (184) locale -> locale opening PLUS . context_elem_list
    (186) context_elem_list -> . context_elem
    (187) context_elem_list -> . context_elem context_elem_list
    (188) context_elem -> . FIXES vars
    (189) context_elem -> . CONSTRAINS name_type_list
    (190) context_elem -> . ASSUMES prop_list
    (191) context_elem -> . DEFINES defines_list
    (192) context_elem -> . NOTES notes_list

    FIXES           shift and go to state 149
    CONSTRAINS      shift and go to state 150
    ASSUMES         shift and go to state 151
    DEFINES         shift and go to state 152
    NOTES           shift and go to state 153

    context_elem_list              shift and go to state 369
    context_elem                   shift and go to state 146

state 312

    (181) locale -> opening PLUS context_elem_list .

    BEGIN           reduce using rule 181 (locale -> opening PLUS context_elem_list .)
    OPENING         reduce using rule 181 (locale -> opening PLUS context_elem_list .)
    AXIOMATIZATION  reduce using rule 181 (locale -> opening PLUS context_elem_list .)
    FUN             reduce using rule 181 (locale -> opening PLUS context_elem_list .)
    FUNCTION        reduce using rule 181 (locale -> opening PLUS context_elem_list .)
    LEMMA           reduce using rule 181 (locale -> opening PLUS context_elem_list .)
    LOCALE          reduce using rule 181 (locale -> opening PLUS context_elem_list .)
    METHOD          reduce using rule 181 (locale -> opening PLUS context_elem_list .)
    SECTION         reduce using rule 181 (locale -> opening PLUS context_elem_list .)
    TEXT            reduce using rule 181 (locale -> opening PLUS context_elem_list .)
    TYPE_SYNONYM    reduce using rule 181 (locale -> opening PLUS context_elem_list .)
    TYPEDECL        reduce using rule 181 (locale -> opening PLUS context_elem_list .)
    END             reduce using rule 181 (locale -> opening PLUS context_elem_list .)


state 313

    (185) locale -> locale_expr opening PLUS . context_elem_list
    (186) context_elem_list -> . context_elem
    (187) context_elem_list -> . context_elem context_elem_list
    (188) context_elem -> . FIXES vars
    (189) context_elem -> . CONSTRAINS name_type_list
    (190) context_elem -> . ASSUMES prop_list
    (191) context_elem -> . DEFINES defines_list
    (192) context_elem -> . NOTES notes_list

    FIXES           shift and go to state 149
    CONSTRAINS      shift and go to state 150
    ASSUMES         shift and go to state 151
    DEFINES         shift and go to state 152
    NOTES           shift and go to state 153

    context_elem_list              shift and go to state 370
    context_elem                   shift and go to state 146

state 314

    (100) names_list -> ID names .

    PLUS            reduce using rule 100 (names_list -> ID names .)
    BEGIN           reduce using rule 100 (names_list -> ID names .)
    OPENING         reduce using rule 100 (names_list -> ID names .)
    AXIOMATIZATION  reduce using rule 100 (names_list -> ID names .)
    FUN             reduce using rule 100 (names_list -> ID names .)
    FUNCTION        reduce using rule 100 (names_list -> ID names .)
    LEMMA           reduce using rule 100 (names_list -> ID names .)
    LOCALE          reduce using rule 100 (names_list -> ID names .)
    METHOD          reduce using rule 100 (names_list -> ID names .)
    SECTION         reduce using rule 100 (names_list -> ID names .)
    TEXT            reduce using rule 100 (names_list -> ID names .)
    TYPE_SYNONYM    reduce using rule 100 (names_list -> ID names .)
    TYPEDECL        reduce using rule 100 (names_list -> ID names .)
    END             reduce using rule 100 (names_list -> ID names .)


state 315

    (193) name_type_list -> ID COLON . COLON ID
    (194) name_type_list -> ID COLON . COLON ID AND name_type_list

    COLON           shift and go to state 371


state 316

    (196) defines_list -> defines_list_element AND . defines_list
    (195) defines_list -> . defines_list_element
    (196) defines_list -> . defines_list_element AND defines_list
    (197) defines_list_element -> . ID
    (198) defines_list_element -> . QUOTED_STRING
    (199) defines_list_element -> . thmdecl ID
    (200) defines_list_element -> . thmdecl QUOTED_STRING
    (201) defines_list_element -> . ID prop_pat
    (202) defines_list_element -> . QUOTED_STRING prop_pat
    (203) defines_list_element -> . thmdecl ID prop_pat
    (204) defines_list_element -> . thmdecl QUOTED_STRING prop_pat
    (106) thmdecl -> . thmbind COLON
    (113) thmbind -> . ID
    (114) thmbind -> . ID attributes
    (115) thmbind -> . attributes
    (116) attributes -> . LEFT_BRACKET attributes_list RIGHT_BRACKET

    ID              shift and go to state 233
    QUOTED_STRING   shift and go to state 234
    LEFT_BRACKET    shift and go to state 73

    defines_list_element           shift and go to state 232
    defines_list                   shift and go to state 372
    thmdecl                        shift and go to state 235
    thmbind                        shift and go to state 71
    attributes                     shift and go to state 72

state 317

    (201) defines_list_element -> ID prop_pat .

    AND             reduce using rule 201 (defines_list_element -> ID prop_pat .)
    FIXES           reduce using rule 201 (defines_list_element -> ID prop_pat .)
    CONSTRAINS      reduce using rule 201 (defines_list_element -> ID prop_pat .)
    ASSUMES         reduce using rule 201 (defines_list_element -> ID prop_pat .)
    DEFINES         reduce using rule 201 (defines_list_element -> ID prop_pat .)
    NOTES           reduce using rule 201 (defines_list_element -> ID prop_pat .)
    BEGIN           reduce using rule 201 (defines_list_element -> ID prop_pat .)
    OPENING         reduce using rule 201 (defines_list_element -> ID prop_pat .)
    AXIOMATIZATION  reduce using rule 201 (defines_list_element -> ID prop_pat .)
    FUN             reduce using rule 201 (defines_list_element -> ID prop_pat .)
    FUNCTION        reduce using rule 201 (defines_list_element -> ID prop_pat .)
    LEMMA           reduce using rule 201 (defines_list_element -> ID prop_pat .)
    LOCALE          reduce using rule 201 (defines_list_element -> ID prop_pat .)
    METHOD          reduce using rule 201 (defines_list_element -> ID prop_pat .)
    SECTION         reduce using rule 201 (defines_list_element -> ID prop_pat .)
    TEXT            reduce using rule 201 (defines_list_element -> ID prop_pat .)
    TYPE_SYNONYM    reduce using rule 201 (defines_list_element -> ID prop_pat .)
    TYPEDECL        reduce using rule 201 (defines_list_element -> ID prop_pat .)
    END             reduce using rule 201 (defines_list_element -> ID prop_pat .)


state 318

    (101) prop_pat -> LEFT_PAREN . prop_pat_terms RIGHT_PAREN
    (102) prop_pat_terms -> . prop_pat_term
    (103) prop_pat_terms -> . prop_pat_term prop_pat_terms
    (104) prop_pat_term -> . IS ID
    (105) prop_pat_term -> . IS QUOTED_STRING

    IS              shift and go to state 375

    prop_pat_terms                 shift and go to state 373
    prop_pat_term                  shift and go to state 374

state 319

    (202) defines_list_element -> QUOTED_STRING prop_pat .

    AND             reduce using rule 202 (defines_list_element -> QUOTED_STRING prop_pat .)
    FIXES           reduce using rule 202 (defines_list_element -> QUOTED_STRING prop_pat .)
    CONSTRAINS      reduce using rule 202 (defines_list_element -> QUOTED_STRING prop_pat .)
    ASSUMES         reduce using rule 202 (defines_list_element -> QUOTED_STRING prop_pat .)
    DEFINES         reduce using rule 202 (defines_list_element -> QUOTED_STRING prop_pat .)
    NOTES           reduce using rule 202 (defines_list_element -> QUOTED_STRING prop_pat .)
    BEGIN           reduce using rule 202 (defines_list_element -> QUOTED_STRING prop_pat .)
    OPENING         reduce using rule 202 (defines_list_element -> QUOTED_STRING prop_pat .)
    AXIOMATIZATION  reduce using rule 202 (defines_list_element -> QUOTED_STRING prop_pat .)
    FUN             reduce using rule 202 (defines_list_element -> QUOTED_STRING prop_pat .)
    FUNCTION        reduce using rule 202 (defines_list_element -> QUOTED_STRING prop_pat .)
    LEMMA           reduce using rule 202 (defines_list_element -> QUOTED_STRING prop_pat .)
    LOCALE          reduce using rule 202 (defines_list_element -> QUOTED_STRING prop_pat .)
    METHOD          reduce using rule 202 (defines_list_element -> QUOTED_STRING prop_pat .)
    SECTION         reduce using rule 202 (defines_list_element -> QUOTED_STRING prop_pat .)
    TEXT            reduce using rule 202 (defines_list_element -> QUOTED_STRING prop_pat .)
    TYPE_SYNONYM    reduce using rule 202 (defines_list_element -> QUOTED_STRING prop_pat .)
    TYPEDECL        reduce using rule 202 (defines_list_element -> QUOTED_STRING prop_pat .)
    END             reduce using rule 202 (defines_list_element -> QUOTED_STRING prop_pat .)


state 320

    (199) defines_list_element -> thmdecl ID .
    (203) defines_list_element -> thmdecl ID . prop_pat
    (101) prop_pat -> . LEFT_PAREN prop_pat_terms RIGHT_PAREN

    AND             reduce using rule 199 (defines_list_element -> thmdecl ID .)
    FIXES           reduce using rule 199 (defines_list_element -> thmdecl ID .)
    CONSTRAINS      reduce using rule 199 (defines_list_element -> thmdecl ID .)
    ASSUMES         reduce using rule 199 (defines_list_element -> thmdecl ID .)
    DEFINES         reduce using rule 199 (defines_list_element -> thmdecl ID .)
    NOTES           reduce using rule 199 (defines_list_element -> thmdecl ID .)
    BEGIN           reduce using rule 199 (defines_list_element -> thmdecl ID .)
    OPENING         reduce using rule 199 (defines_list_element -> thmdecl ID .)
    AXIOMATIZATION  reduce using rule 199 (defines_list_element -> thmdecl ID .)
    FUN             reduce using rule 199 (defines_list_element -> thmdecl ID .)
    FUNCTION        reduce using rule 199 (defines_list_element -> thmdecl ID .)
    LEMMA           reduce using rule 199 (defines_list_element -> thmdecl ID .)
    LOCALE          reduce using rule 199 (defines_list_element -> thmdecl ID .)
    METHOD          reduce using rule 199 (defines_list_element -> thmdecl ID .)
    SECTION         reduce using rule 199 (defines_list_element -> thmdecl ID .)
    TEXT            reduce using rule 199 (defines_list_element -> thmdecl ID .)
    TYPE_SYNONYM    reduce using rule 199 (defines_list_element -> thmdecl ID .)
    TYPEDECL        reduce using rule 199 (defines_list_element -> thmdecl ID .)
    END             reduce using rule 199 (defines_list_element -> thmdecl ID .)
    LEFT_PAREN      shift and go to state 318

    prop_pat                       shift and go to state 376

state 321

    (200) defines_list_element -> thmdecl QUOTED_STRING .
    (204) defines_list_element -> thmdecl QUOTED_STRING . prop_pat
    (101) prop_pat -> . LEFT_PAREN prop_pat_terms RIGHT_PAREN

    AND             reduce using rule 200 (defines_list_element -> thmdecl QUOTED_STRING .)
    FIXES           reduce using rule 200 (defines_list_element -> thmdecl QUOTED_STRING .)
    CONSTRAINS      reduce using rule 200 (defines_list_element -> thmdecl QUOTED_STRING .)
    ASSUMES         reduce using rule 200 (defines_list_element -> thmdecl QUOTED_STRING .)
    DEFINES         reduce using rule 200 (defines_list_element -> thmdecl QUOTED_STRING .)
    NOTES           reduce using rule 200 (defines_list_element -> thmdecl QUOTED_STRING .)
    BEGIN           reduce using rule 200 (defines_list_element -> thmdecl QUOTED_STRING .)
    OPENING         reduce using rule 200 (defines_list_element -> thmdecl QUOTED_STRING .)
    AXIOMATIZATION  reduce using rule 200 (defines_list_element -> thmdecl QUOTED_STRING .)
    FUN             reduce using rule 200 (defines_list_element -> thmdecl QUOTED_STRING .)
    FUNCTION        reduce using rule 200 (defines_list_element -> thmdecl QUOTED_STRING .)
    LEMMA           reduce using rule 200 (defines_list_element -> thmdecl QUOTED_STRING .)
    LOCALE          reduce using rule 200 (defines_list_element -> thmdecl QUOTED_STRING .)
    METHOD          reduce using rule 200 (defines_list_element -> thmdecl QUOTED_STRING .)
    SECTION         reduce using rule 200 (defines_list_element -> thmdecl QUOTED_STRING .)
    TEXT            reduce using rule 200 (defines_list_element -> thmdecl QUOTED_STRING .)
    TYPE_SYNONYM    reduce using rule 200 (defines_list_element -> thmdecl QUOTED_STRING .)
    TYPEDECL        reduce using rule 200 (defines_list_element -> thmdecl QUOTED_STRING .)
    END             reduce using rule 200 (defines_list_element -> thmdecl QUOTED_STRING .)
    LEFT_PAREN      shift and go to state 318

    prop_pat                       shift and go to state 377

state 322

    (206) notes_list -> notes_list_element AND . notes_list
    (205) notes_list -> . notes_list_element
    (206) notes_list -> . notes_list_element AND notes_list
    (207) notes_list_element -> . thmdef thms
    (208) notes_list_element -> . thms
    (107) thmdef -> . thmbind EQ
    (111) thms -> . thm
    (112) thms -> . thm thms
    (113) thmbind -> . ID
    (114) thmbind -> . ID attributes
    (115) thmbind -> . attributes
    (108) thm -> . ID attributes
    (109) thm -> . ID
    (110) thm -> . attributes
    (116) attributes -> . LEFT_BRACKET attributes_list RIGHT_BRACKET

    ID              shift and go to state 242
    LEFT_BRACKET    shift and go to state 73

    notes_list_element             shift and go to state 237
    notes_list                     shift and go to state 378
    thmdef                         shift and go to state 238
    thms                           shift and go to state 239
    thmbind                        shift and go to state 240
    thm                            shift and go to state 241
    attributes                     shift and go to state 243

state 323

    (207) notes_list_element -> thmdef thms .

    AND             reduce using rule 207 (notes_list_element -> thmdef thms .)
    FIXES           reduce using rule 207 (notes_list_element -> thmdef thms .)
    CONSTRAINS      reduce using rule 207 (notes_list_element -> thmdef thms .)
    ASSUMES         reduce using rule 207 (notes_list_element -> thmdef thms .)
    DEFINES         reduce using rule 207 (notes_list_element -> thmdef thms .)
    NOTES           reduce using rule 207 (notes_list_element -> thmdef thms .)
    BEGIN           reduce using rule 207 (notes_list_element -> thmdef thms .)
    OPENING         reduce using rule 207 (notes_list_element -> thmdef thms .)
    AXIOMATIZATION  reduce using rule 207 (notes_list_element -> thmdef thms .)
    FUN             reduce using rule 207 (notes_list_element -> thmdef thms .)
    FUNCTION        reduce using rule 207 (notes_list_element -> thmdef thms .)
    LEMMA           reduce using rule 207 (notes_list_element -> thmdef thms .)
    LOCALE          reduce using rule 207 (notes_list_element -> thmdef thms .)
    METHOD          reduce using rule 207 (notes_list_element -> thmdef thms .)
    SECTION         reduce using rule 207 (notes_list_element -> thmdef thms .)
    TEXT            reduce using rule 207 (notes_list_element -> thmdef thms .)
    TYPE_SYNONYM    reduce using rule 207 (notes_list_element -> thmdef thms .)
    TYPEDECL        reduce using rule 207 (notes_list_element -> thmdef thms .)
    END             reduce using rule 207 (notes_list_element -> thmdef thms .)


state 324

    (108) thm -> ID . attributes
    (109) thm -> ID .
    (116) attributes -> . LEFT_BRACKET attributes_list RIGHT_BRACKET

  ! shift/reduce conflict for LEFT_BRACKET resolved as shift
    ID              reduce using rule 109 (thm -> ID .)
    AND             reduce using rule 109 (thm -> ID .)
    FIXES           reduce using rule 109 (thm -> ID .)
    CONSTRAINS      reduce using rule 109 (thm -> ID .)
    ASSUMES         reduce using rule 109 (thm -> ID .)
    DEFINES         reduce using rule 109 (thm -> ID .)
    NOTES           reduce using rule 109 (thm -> ID .)
    BEGIN           reduce using rule 109 (thm -> ID .)
    OPENING         reduce using rule 109 (thm -> ID .)
    AXIOMATIZATION  reduce using rule 109 (thm -> ID .)
    FUN             reduce using rule 109 (thm -> ID .)
    FUNCTION        reduce using rule 109 (thm -> ID .)
    LEMMA           reduce using rule 109 (thm -> ID .)
    LOCALE          reduce using rule 109 (thm -> ID .)
    METHOD          reduce using rule 109 (thm -> ID .)
    SECTION         reduce using rule 109 (thm -> ID .)
    TEXT            reduce using rule 109 (thm -> ID .)
    TYPE_SYNONYM    reduce using rule 109 (thm -> ID .)
    TYPEDECL        reduce using rule 109 (thm -> ID .)
    END             reduce using rule 109 (thm -> ID .)
    LEFT_BRACKET    shift and go to state 73

  ! LEFT_BRACKET    [ reduce using rule 109 (thm -> ID .) ]

    attributes                     shift and go to state 379

state 325

    (110) thm -> attributes .

    ID              reduce using rule 110 (thm -> attributes .)
    LEFT_BRACKET    reduce using rule 110 (thm -> attributes .)
    AND             reduce using rule 110 (thm -> attributes .)
    FIXES           reduce using rule 110 (thm -> attributes .)
    CONSTRAINS      reduce using rule 110 (thm -> attributes .)
    ASSUMES         reduce using rule 110 (thm -> attributes .)
    DEFINES         reduce using rule 110 (thm -> attributes .)
    NOTES           reduce using rule 110 (thm -> attributes .)
    BEGIN           reduce using rule 110 (thm -> attributes .)
    OPENING         reduce using rule 110 (thm -> attributes .)
    AXIOMATIZATION  reduce using rule 110 (thm -> attributes .)
    FUN             reduce using rule 110 (thm -> attributes .)
    FUNCTION        reduce using rule 110 (thm -> attributes .)
    LEMMA           reduce using rule 110 (thm -> attributes .)
    LOCALE          reduce using rule 110 (thm -> attributes .)
    METHOD          reduce using rule 110 (thm -> attributes .)
    SECTION         reduce using rule 110 (thm -> attributes .)
    TEXT            reduce using rule 110 (thm -> attributes .)
    TYPE_SYNONYM    reduce using rule 110 (thm -> attributes .)
    TYPEDECL        reduce using rule 110 (thm -> attributes .)
    END             reduce using rule 110 (thm -> attributes .)


state 326

    (107) thmdef -> thmbind EQ .

    ID              reduce using rule 107 (thmdef -> thmbind EQ .)
    LEFT_BRACKET    reduce using rule 107 (thmdef -> thmbind EQ .)


state 327

    (112) thms -> thm thms .

    AND             reduce using rule 112 (thms -> thm thms .)
    FIXES           reduce using rule 112 (thms -> thm thms .)
    CONSTRAINS      reduce using rule 112 (thms -> thm thms .)
    ASSUMES         reduce using rule 112 (thms -> thm thms .)
    DEFINES         reduce using rule 112 (thms -> thm thms .)
    NOTES           reduce using rule 112 (thms -> thm thms .)
    BEGIN           reduce using rule 112 (thms -> thm thms .)
    OPENING         reduce using rule 112 (thms -> thm thms .)
    AXIOMATIZATION  reduce using rule 112 (thms -> thm thms .)
    FUN             reduce using rule 112 (thms -> thm thms .)
    FUNCTION        reduce using rule 112 (thms -> thm thms .)
    LEMMA           reduce using rule 112 (thms -> thm thms .)
    LOCALE          reduce using rule 112 (thms -> thm thms .)
    METHOD          reduce using rule 112 (thms -> thm thms .)
    SECTION         reduce using rule 112 (thms -> thm thms .)
    TEXT            reduce using rule 112 (thms -> thm thms .)
    TYPE_SYNONYM    reduce using rule 112 (thms -> thm thms .)
    TYPEDECL        reduce using rule 112 (thms -> thm thms .)
    END             reduce using rule 112 (thms -> thm thms .)


state 328

    (114) thmbind -> ID attributes .
    (108) thm -> ID attributes .

    EQ              reduce using rule 114 (thmbind -> ID attributes .)
    ID              reduce using rule 108 (thm -> ID attributes .)
    LEFT_BRACKET    reduce using rule 108 (thm -> ID attributes .)
    AND             reduce using rule 108 (thm -> ID attributes .)
    FIXES           reduce using rule 108 (thm -> ID attributes .)
    CONSTRAINS      reduce using rule 108 (thm -> ID attributes .)
    ASSUMES         reduce using rule 108 (thm -> ID attributes .)
    DEFINES         reduce using rule 108 (thm -> ID attributes .)
    NOTES           reduce using rule 108 (thm -> ID attributes .)
    BEGIN           reduce using rule 108 (thm -> ID attributes .)
    OPENING         reduce using rule 108 (thm -> ID attributes .)
    AXIOMATIZATION  reduce using rule 108 (thm -> ID attributes .)
    FUN             reduce using rule 108 (thm -> ID attributes .)
    FUNCTION        reduce using rule 108 (thm -> ID attributes .)
    LEMMA           reduce using rule 108 (thm -> ID attributes .)
    LOCALE          reduce using rule 108 (thm -> ID attributes .)
    METHOD          reduce using rule 108 (thm -> ID attributes .)
    SECTION         reduce using rule 108 (thm -> ID attributes .)
    TEXT            reduce using rule 108 (thm -> ID attributes .)
    TYPE_SYNONYM    reduce using rule 108 (thm -> ID attributes .)
    TYPEDECL        reduce using rule 108 (thm -> ID attributes .)
    END             reduce using rule 108 (thm -> ID attributes .)


state 329

    (153) instance_list -> instance PLUS instance_list .

    FOR             reduce using rule 153 (instance_list -> instance PLUS instance_list .)
    OPENING         reduce using rule 153 (instance_list -> instance PLUS instance_list .)
    BEGIN           reduce using rule 153 (instance_list -> instance PLUS instance_list .)
    AXIOMATIZATION  reduce using rule 153 (instance_list -> instance PLUS instance_list .)
    FUN             reduce using rule 153 (instance_list -> instance PLUS instance_list .)
    FUNCTION        reduce using rule 153 (instance_list -> instance PLUS instance_list .)
    LEMMA           reduce using rule 153 (instance_list -> instance PLUS instance_list .)
    LOCALE          reduce using rule 153 (instance_list -> instance PLUS instance_list .)
    METHOD          reduce using rule 153 (instance_list -> instance PLUS instance_list .)
    SECTION         reduce using rule 153 (instance_list -> instance PLUS instance_list .)
    TEXT            reduce using rule 153 (instance_list -> instance PLUS instance_list .)
    TYPE_SYNONYM    reduce using rule 153 (instance_list -> instance PLUS instance_list .)
    TYPEDECL        reduce using rule 153 (instance_list -> instance PLUS instance_list .)
    END             reduce using rule 153 (instance_list -> instance PLUS instance_list .)


state 330

    (157) instance -> qualifier COLON ID . pos_insts
    (158) instance -> qualifier COLON ID . name_insts
    (163) pos_insts -> . UNDERSCORE
    (164) pos_insts -> . ID
    (165) pos_insts -> . QUOTED_STRING
    (166) pos_insts -> . UNDERSCORE pos_insts
    (167) pos_insts -> . ID pos_insts
    (168) pos_insts -> . QUOTED_STRING pos_insts
    (169) name_insts -> . WHERE name_insts_list

    UNDERSCORE      shift and go to state 216
    ID              shift and go to state 212
    QUOTED_STRING   shift and go to state 217
    WHERE           shift and go to state 218

    pos_insts                      shift and go to state 380
    name_insts                     shift and go to state 381

state 331

    (25) instruction -> single_instruction instruction_modifier COMMA . instruction
    (23) instruction -> . single_instruction
    (24) instruction -> . single_instruction instruction_modifier
    (25) instruction -> . single_instruction instruction_modifier COMMA instruction
    (26) instruction -> . single_instruction SEMICOLON instruction
    (27) instruction -> . single_instruction COMMA instruction
    (28) instruction -> . LEFT_PAREN instruction RIGHT_PAREN
    (29) instruction -> . LEFT_PAREN instruction RIGHT_PAREN instruction_modifier
    (32) single_instruction -> . ID
    (33) single_instruction -> . ID method_args
    (34) single_instruction -> . LEFT_PAREN ID method_args RIGHT_PAREN
    (35) single_instruction -> . LEFT_PAREN ID method_args RIGHT_PAREN instruction_modifier

    LEFT_PAREN      shift and go to state 160
    ID              shift and go to state 161

    single_instruction             shift and go to state 159
    instruction                    shift and go to state 382

state 332

    (27) instruction -> single_instruction COMMA instruction .

    AXIOMATIZATION  reduce using rule 27 (instruction -> single_instruction COMMA instruction .)
    FUN             reduce using rule 27 (instruction -> single_instruction COMMA instruction .)
    FUNCTION        reduce using rule 27 (instruction -> single_instruction COMMA instruction .)
    LEMMA           reduce using rule 27 (instruction -> single_instruction COMMA instruction .)
    LOCALE          reduce using rule 27 (instruction -> single_instruction COMMA instruction .)
    METHOD          reduce using rule 27 (instruction -> single_instruction COMMA instruction .)
    SECTION         reduce using rule 27 (instruction -> single_instruction COMMA instruction .)
    TEXT            reduce using rule 27 (instruction -> single_instruction COMMA instruction .)
    TYPE_SYNONYM    reduce using rule 27 (instruction -> single_instruction COMMA instruction .)
    TYPEDECL        reduce using rule 27 (instruction -> single_instruction COMMA instruction .)
    END             reduce using rule 27 (instruction -> single_instruction COMMA instruction .)
    RIGHT_PAREN     reduce using rule 27 (instruction -> single_instruction COMMA instruction .)
    APPLY           reduce using rule 27 (instruction -> single_instruction COMMA instruction .)
    USING           reduce using rule 27 (instruction -> single_instruction COMMA instruction .)
    BY              reduce using rule 27 (instruction -> single_instruction COMMA instruction .)
    DONE            reduce using rule 27 (instruction -> single_instruction COMMA instruction .)
    SORRY           reduce using rule 27 (instruction -> single_instruction COMMA instruction .)
    SUBGOAL         reduce using rule 27 (instruction -> single_instruction COMMA instruction .)


state 333

    (26) instruction -> single_instruction SEMICOLON instruction .

    AXIOMATIZATION  reduce using rule 26 (instruction -> single_instruction SEMICOLON instruction .)
    FUN             reduce using rule 26 (instruction -> single_instruction SEMICOLON instruction .)
    FUNCTION        reduce using rule 26 (instruction -> single_instruction SEMICOLON instruction .)
    LEMMA           reduce using rule 26 (instruction -> single_instruction SEMICOLON instruction .)
    LOCALE          reduce using rule 26 (instruction -> single_instruction SEMICOLON instruction .)
    METHOD          reduce using rule 26 (instruction -> single_instruction SEMICOLON instruction .)
    SECTION         reduce using rule 26 (instruction -> single_instruction SEMICOLON instruction .)
    TEXT            reduce using rule 26 (instruction -> single_instruction SEMICOLON instruction .)
    TYPE_SYNONYM    reduce using rule 26 (instruction -> single_instruction SEMICOLON instruction .)
    TYPEDECL        reduce using rule 26 (instruction -> single_instruction SEMICOLON instruction .)
    END             reduce using rule 26 (instruction -> single_instruction SEMICOLON instruction .)
    RIGHT_PAREN     reduce using rule 26 (instruction -> single_instruction SEMICOLON instruction .)
    APPLY           reduce using rule 26 (instruction -> single_instruction SEMICOLON instruction .)
    USING           reduce using rule 26 (instruction -> single_instruction SEMICOLON instruction .)
    BY              reduce using rule 26 (instruction -> single_instruction SEMICOLON instruction .)
    DONE            reduce using rule 26 (instruction -> single_instruction SEMICOLON instruction .)
    SORRY           reduce using rule 26 (instruction -> single_instruction SEMICOLON instruction .)
    SUBGOAL         reduce using rule 26 (instruction -> single_instruction SEMICOLON instruction .)


state 334

    (28) instruction -> LEFT_PAREN instruction RIGHT_PAREN .
    (29) instruction -> LEFT_PAREN instruction RIGHT_PAREN . instruction_modifier
    (30) instruction_modifier -> . PLUS
    (31) instruction_modifier -> . QUESTION_MARK

    AXIOMATIZATION  reduce using rule 28 (instruction -> LEFT_PAREN instruction RIGHT_PAREN .)
    FUN             reduce using rule 28 (instruction -> LEFT_PAREN instruction RIGHT_PAREN .)
    FUNCTION        reduce using rule 28 (instruction -> LEFT_PAREN instruction RIGHT_PAREN .)
    LEMMA           reduce using rule 28 (instruction -> LEFT_PAREN instruction RIGHT_PAREN .)
    LOCALE          reduce using rule 28 (instruction -> LEFT_PAREN instruction RIGHT_PAREN .)
    METHOD          reduce using rule 28 (instruction -> LEFT_PAREN instruction RIGHT_PAREN .)
    SECTION         reduce using rule 28 (instruction -> LEFT_PAREN instruction RIGHT_PAREN .)
    TEXT            reduce using rule 28 (instruction -> LEFT_PAREN instruction RIGHT_PAREN .)
    TYPE_SYNONYM    reduce using rule 28 (instruction -> LEFT_PAREN instruction RIGHT_PAREN .)
    TYPEDECL        reduce using rule 28 (instruction -> LEFT_PAREN instruction RIGHT_PAREN .)
    END             reduce using rule 28 (instruction -> LEFT_PAREN instruction RIGHT_PAREN .)
    RIGHT_PAREN     reduce using rule 28 (instruction -> LEFT_PAREN instruction RIGHT_PAREN .)
    APPLY           reduce using rule 28 (instruction -> LEFT_PAREN instruction RIGHT_PAREN .)
    USING           reduce using rule 28 (instruction -> LEFT_PAREN instruction RIGHT_PAREN .)
    BY              reduce using rule 28 (instruction -> LEFT_PAREN instruction RIGHT_PAREN .)
    DONE            reduce using rule 28 (instruction -> LEFT_PAREN instruction RIGHT_PAREN .)
    SORRY           reduce using rule 28 (instruction -> LEFT_PAREN instruction RIGHT_PAREN .)
    SUBGOAL         reduce using rule 28 (instruction -> LEFT_PAREN instruction RIGHT_PAREN .)
    PLUS            shift and go to state 250
    QUESTION_MARK   shift and go to state 251

    instruction_modifier           shift and go to state 383

state 335

    (34) single_instruction -> LEFT_PAREN ID method_args . RIGHT_PAREN
    (35) single_instruction -> LEFT_PAREN ID method_args . RIGHT_PAREN instruction_modifier
    (33) single_instruction -> ID method_args .

  ! shift/reduce conflict for RIGHT_PAREN resolved as shift
    RIGHT_PAREN     shift and go to state 384
    SEMICOLON       reduce using rule 33 (single_instruction -> ID method_args .)
    COMMA           reduce using rule 33 (single_instruction -> ID method_args .)
    PLUS            reduce using rule 33 (single_instruction -> ID method_args .)
    QUESTION_MARK   reduce using rule 33 (single_instruction -> ID method_args .)

  ! RIGHT_PAREN     [ reduce using rule 33 (single_instruction -> ID method_args .) ]


state 336

    (36) method_args -> ID COLON . method_arg method_args
    (39) method_arg -> . ID
    (40) method_arg -> . ID LEFT_PAREN NAT RIGHT_PAREN
    (41) method_arg -> . ID DOT ID
    (42) method_arg -> . ID DOT ID LEFT_PAREN NAT RIGHT_PAREN
    (43) method_arg -> . QUOTED_STRING

    ID              shift and go to state 385
    QUOTED_STRING   shift and go to state 258

    method_arg                     shift and go to state 386

state 337

    (40) method_arg -> ID LEFT_PAREN . NAT RIGHT_PAREN

    NAT             shift and go to state 387


state 338

    (41) method_arg -> ID DOT . ID
    (42) method_arg -> ID DOT . ID LEFT_PAREN NAT RIGHT_PAREN

    ID              shift and go to state 388


state 339

    (37) method_args -> method_arg method_args .

    SEMICOLON       reduce using rule 37 (method_args -> method_arg method_args .)
    COMMA           reduce using rule 37 (method_args -> method_arg method_args .)
    PLUS            reduce using rule 37 (method_args -> method_arg method_args .)
    QUESTION_MARK   reduce using rule 37 (method_args -> method_arg method_args .)
    AXIOMATIZATION  reduce using rule 37 (method_args -> method_arg method_args .)
    FUN             reduce using rule 37 (method_args -> method_arg method_args .)
    FUNCTION        reduce using rule 37 (method_args -> method_arg method_args .)
    LEMMA           reduce using rule 37 (method_args -> method_arg method_args .)
    LOCALE          reduce using rule 37 (method_args -> method_arg method_args .)
    METHOD          reduce using rule 37 (method_args -> method_arg method_args .)
    SECTION         reduce using rule 37 (method_args -> method_arg method_args .)
    TEXT            reduce using rule 37 (method_args -> method_arg method_args .)
    TYPE_SYNONYM    reduce using rule 37 (method_args -> method_arg method_args .)
    TYPEDECL        reduce using rule 37 (method_args -> method_arg method_args .)
    END             reduce using rule 37 (method_args -> method_arg method_args .)
    RIGHT_PAREN     reduce using rule 37 (method_args -> method_arg method_args .)
    APPLY           reduce using rule 37 (method_args -> method_arg method_args .)
    USING           reduce using rule 37 (method_args -> method_arg method_args .)
    BY              reduce using rule 37 (method_args -> method_arg method_args .)
    DONE            reduce using rule 37 (method_args -> method_arg method_args .)
    SORRY           reduce using rule 37 (method_args -> method_arg method_args .)
    SUBGOAL         reduce using rule 37 (method_args -> method_arg method_args .)


state 340

    (139) prop_list -> ID AND prop_list .

    FOR             reduce using rule 139 (prop_list -> ID AND prop_list .)
    AXIOMATIZATION  reduce using rule 139 (prop_list -> ID AND prop_list .)
    FUN             reduce using rule 139 (prop_list -> ID AND prop_list .)
    FUNCTION        reduce using rule 139 (prop_list -> ID AND prop_list .)
    LEMMA           reduce using rule 139 (prop_list -> ID AND prop_list .)
    LOCALE          reduce using rule 139 (prop_list -> ID AND prop_list .)
    METHOD          reduce using rule 139 (prop_list -> ID AND prop_list .)
    SECTION         reduce using rule 139 (prop_list -> ID AND prop_list .)
    TEXT            reduce using rule 139 (prop_list -> ID AND prop_list .)
    TYPE_SYNONYM    reduce using rule 139 (prop_list -> ID AND prop_list .)
    TYPEDECL        reduce using rule 139 (prop_list -> ID AND prop_list .)
    END             reduce using rule 139 (prop_list -> ID AND prop_list .)
    ID              reduce using rule 139 (prop_list -> ID AND prop_list .)
    QUOTED_STRING   reduce using rule 139 (prop_list -> ID AND prop_list .)
    LEFT_BRACKET    reduce using rule 139 (prop_list -> ID AND prop_list .)
    FIXES           reduce using rule 139 (prop_list -> ID AND prop_list .)
    CONSTRAINS      reduce using rule 139 (prop_list -> ID AND prop_list .)
    ASSUMES         reduce using rule 139 (prop_list -> ID AND prop_list .)
    DEFINES         reduce using rule 139 (prop_list -> ID AND prop_list .)
    NOTES           reduce using rule 139 (prop_list -> ID AND prop_list .)
    BEGIN           reduce using rule 139 (prop_list -> ID AND prop_list .)
    OPENING         reduce using rule 139 (prop_list -> ID AND prop_list .)


state 341

    (125) arg -> LEFT_PAREN args RIGHT_PAREN .

    ID              reduce using rule 125 (arg -> LEFT_PAREN args RIGHT_PAREN .)
    LEFT_PAREN      reduce using rule 125 (arg -> LEFT_PAREN args RIGHT_PAREN .)
    LEFT_BRACKET    reduce using rule 125 (arg -> LEFT_PAREN args RIGHT_PAREN .)
    COMMA           reduce using rule 125 (arg -> LEFT_PAREN args RIGHT_PAREN .)
    RIGHT_BRACKET   reduce using rule 125 (arg -> LEFT_PAREN args RIGHT_PAREN .)
    RIGHT_PAREN     reduce using rule 125 (arg -> LEFT_PAREN args RIGHT_PAREN .)


state 342

    (126) arg -> LEFT_BRACKET args RIGHT_BRACKET .

    ID              reduce using rule 126 (arg -> LEFT_BRACKET args RIGHT_BRACKET .)
    LEFT_PAREN      reduce using rule 126 (arg -> LEFT_BRACKET args RIGHT_BRACKET .)
    LEFT_BRACKET    reduce using rule 126 (arg -> LEFT_BRACKET args RIGHT_BRACKET .)
    COMMA           reduce using rule 126 (arg -> LEFT_BRACKET args RIGHT_BRACKET .)
    RIGHT_BRACKET   reduce using rule 126 (arg -> LEFT_BRACKET args RIGHT_BRACKET .)
    RIGHT_PAREN     reduce using rule 126 (arg -> LEFT_BRACKET args RIGHT_BRACKET .)


state 343

    (216) mixfix -> LEFT_PAREN template prios NAT RIGHT_PAREN .

    AND             reduce using rule 216 (mixfix -> LEFT_PAREN template prios NAT RIGHT_PAREN .)
    WHERE           reduce using rule 216 (mixfix -> LEFT_PAREN template prios NAT RIGHT_PAREN .)
    AXIOMATIZATION  reduce using rule 216 (mixfix -> LEFT_PAREN template prios NAT RIGHT_PAREN .)
    FUN             reduce using rule 216 (mixfix -> LEFT_PAREN template prios NAT RIGHT_PAREN .)
    FUNCTION        reduce using rule 216 (mixfix -> LEFT_PAREN template prios NAT RIGHT_PAREN .)
    LEMMA           reduce using rule 216 (mixfix -> LEFT_PAREN template prios NAT RIGHT_PAREN .)
    LOCALE          reduce using rule 216 (mixfix -> LEFT_PAREN template prios NAT RIGHT_PAREN .)
    METHOD          reduce using rule 216 (mixfix -> LEFT_PAREN template prios NAT RIGHT_PAREN .)
    SECTION         reduce using rule 216 (mixfix -> LEFT_PAREN template prios NAT RIGHT_PAREN .)
    TEXT            reduce using rule 216 (mixfix -> LEFT_PAREN template prios NAT RIGHT_PAREN .)
    TYPE_SYNONYM    reduce using rule 216 (mixfix -> LEFT_PAREN template prios NAT RIGHT_PAREN .)
    TYPEDECL        reduce using rule 216 (mixfix -> LEFT_PAREN template prios NAT RIGHT_PAREN .)
    END             reduce using rule 216 (mixfix -> LEFT_PAREN template prios NAT RIGHT_PAREN .)
    FIXES           reduce using rule 216 (mixfix -> LEFT_PAREN template prios NAT RIGHT_PAREN .)
    CONSTRAINS      reduce using rule 216 (mixfix -> LEFT_PAREN template prios NAT RIGHT_PAREN .)
    ASSUMES         reduce using rule 216 (mixfix -> LEFT_PAREN template prios NAT RIGHT_PAREN .)
    DEFINES         reduce using rule 216 (mixfix -> LEFT_PAREN template prios NAT RIGHT_PAREN .)
    NOTES           reduce using rule 216 (mixfix -> LEFT_PAREN template prios NAT RIGHT_PAREN .)
    BEGIN           reduce using rule 216 (mixfix -> LEFT_PAREN template prios NAT RIGHT_PAREN .)
    OPENING         reduce using rule 216 (mixfix -> LEFT_PAREN template prios NAT RIGHT_PAREN .)
    ID              reduce using rule 216 (mixfix -> LEFT_PAREN template prios NAT RIGHT_PAREN .)
    QUOTED_STRING   reduce using rule 216 (mixfix -> LEFT_PAREN template prios NAT RIGHT_PAREN .)
    LEFT_BRACKET    reduce using rule 216 (mixfix -> LEFT_PAREN template prios NAT RIGHT_PAREN .)


state 344

    (225) prios -> LEFT_BRACKET nat_list RIGHT_BRACKET .

    RIGHT_PAREN     reduce using rule 225 (prios -> LEFT_BRACKET nat_list RIGHT_BRACKET .)
    NAT             reduce using rule 225 (prios -> LEFT_BRACKET nat_list RIGHT_BRACKET .)


state 345

    (228) nat_list -> NAT COMMA . nat_list
    (227) nat_list -> . NAT
    (228) nat_list -> . NAT COMMA nat_list

    NAT             shift and go to state 276

    nat_list                       shift and go to state 389

state 346

    (217) mixfix -> LEFT_PAREN INFIX template NAT RIGHT_PAREN .

    AND             reduce using rule 217 (mixfix -> LEFT_PAREN INFIX template NAT RIGHT_PAREN .)
    WHERE           reduce using rule 217 (mixfix -> LEFT_PAREN INFIX template NAT RIGHT_PAREN .)
    AXIOMATIZATION  reduce using rule 217 (mixfix -> LEFT_PAREN INFIX template NAT RIGHT_PAREN .)
    FUN             reduce using rule 217 (mixfix -> LEFT_PAREN INFIX template NAT RIGHT_PAREN .)
    FUNCTION        reduce using rule 217 (mixfix -> LEFT_PAREN INFIX template NAT RIGHT_PAREN .)
    LEMMA           reduce using rule 217 (mixfix -> LEFT_PAREN INFIX template NAT RIGHT_PAREN .)
    LOCALE          reduce using rule 217 (mixfix -> LEFT_PAREN INFIX template NAT RIGHT_PAREN .)
    METHOD          reduce using rule 217 (mixfix -> LEFT_PAREN INFIX template NAT RIGHT_PAREN .)
    SECTION         reduce using rule 217 (mixfix -> LEFT_PAREN INFIX template NAT RIGHT_PAREN .)
    TEXT            reduce using rule 217 (mixfix -> LEFT_PAREN INFIX template NAT RIGHT_PAREN .)
    TYPE_SYNONYM    reduce using rule 217 (mixfix -> LEFT_PAREN INFIX template NAT RIGHT_PAREN .)
    TYPEDECL        reduce using rule 217 (mixfix -> LEFT_PAREN INFIX template NAT RIGHT_PAREN .)
    END             reduce using rule 217 (mixfix -> LEFT_PAREN INFIX template NAT RIGHT_PAREN .)
    FIXES           reduce using rule 217 (mixfix -> LEFT_PAREN INFIX template NAT RIGHT_PAREN .)
    CONSTRAINS      reduce using rule 217 (mixfix -> LEFT_PAREN INFIX template NAT RIGHT_PAREN .)
    ASSUMES         reduce using rule 217 (mixfix -> LEFT_PAREN INFIX template NAT RIGHT_PAREN .)
    DEFINES         reduce using rule 217 (mixfix -> LEFT_PAREN INFIX template NAT RIGHT_PAREN .)
    NOTES           reduce using rule 217 (mixfix -> LEFT_PAREN INFIX template NAT RIGHT_PAREN .)
    BEGIN           reduce using rule 217 (mixfix -> LEFT_PAREN INFIX template NAT RIGHT_PAREN .)
    OPENING         reduce using rule 217 (mixfix -> LEFT_PAREN INFIX template NAT RIGHT_PAREN .)
    ID              reduce using rule 217 (mixfix -> LEFT_PAREN INFIX template NAT RIGHT_PAREN .)
    QUOTED_STRING   reduce using rule 217 (mixfix -> LEFT_PAREN INFIX template NAT RIGHT_PAREN .)
    LEFT_BRACKET    reduce using rule 217 (mixfix -> LEFT_PAREN INFIX template NAT RIGHT_PAREN .)


state 347

    (218) mixfix -> LEFT_PAREN INFIXL template NAT RIGHT_PAREN .

    AND             reduce using rule 218 (mixfix -> LEFT_PAREN INFIXL template NAT RIGHT_PAREN .)
    WHERE           reduce using rule 218 (mixfix -> LEFT_PAREN INFIXL template NAT RIGHT_PAREN .)
    AXIOMATIZATION  reduce using rule 218 (mixfix -> LEFT_PAREN INFIXL template NAT RIGHT_PAREN .)
    FUN             reduce using rule 218 (mixfix -> LEFT_PAREN INFIXL template NAT RIGHT_PAREN .)
    FUNCTION        reduce using rule 218 (mixfix -> LEFT_PAREN INFIXL template NAT RIGHT_PAREN .)
    LEMMA           reduce using rule 218 (mixfix -> LEFT_PAREN INFIXL template NAT RIGHT_PAREN .)
    LOCALE          reduce using rule 218 (mixfix -> LEFT_PAREN INFIXL template NAT RIGHT_PAREN .)
    METHOD          reduce using rule 218 (mixfix -> LEFT_PAREN INFIXL template NAT RIGHT_PAREN .)
    SECTION         reduce using rule 218 (mixfix -> LEFT_PAREN INFIXL template NAT RIGHT_PAREN .)
    TEXT            reduce using rule 218 (mixfix -> LEFT_PAREN INFIXL template NAT RIGHT_PAREN .)
    TYPE_SYNONYM    reduce using rule 218 (mixfix -> LEFT_PAREN INFIXL template NAT RIGHT_PAREN .)
    TYPEDECL        reduce using rule 218 (mixfix -> LEFT_PAREN INFIXL template NAT RIGHT_PAREN .)
    END             reduce using rule 218 (mixfix -> LEFT_PAREN INFIXL template NAT RIGHT_PAREN .)
    FIXES           reduce using rule 218 (mixfix -> LEFT_PAREN INFIXL template NAT RIGHT_PAREN .)
    CONSTRAINS      reduce using rule 218 (mixfix -> LEFT_PAREN INFIXL template NAT RIGHT_PAREN .)
    ASSUMES         reduce using rule 218 (mixfix -> LEFT_PAREN INFIXL template NAT RIGHT_PAREN .)
    DEFINES         reduce using rule 218 (mixfix -> LEFT_PAREN INFIXL template NAT RIGHT_PAREN .)
    NOTES           reduce using rule 218 (mixfix -> LEFT_PAREN INFIXL template NAT RIGHT_PAREN .)
    BEGIN           reduce using rule 218 (mixfix -> LEFT_PAREN INFIXL template NAT RIGHT_PAREN .)
    OPENING         reduce using rule 218 (mixfix -> LEFT_PAREN INFIXL template NAT RIGHT_PAREN .)
    ID              reduce using rule 218 (mixfix -> LEFT_PAREN INFIXL template NAT RIGHT_PAREN .)
    QUOTED_STRING   reduce using rule 218 (mixfix -> LEFT_PAREN INFIXL template NAT RIGHT_PAREN .)
    LEFT_BRACKET    reduce using rule 218 (mixfix -> LEFT_PAREN INFIXL template NAT RIGHT_PAREN .)


state 348

    (219) mixfix -> LEFT_PAREN INFIXR template NAT RIGHT_PAREN .

    AND             reduce using rule 219 (mixfix -> LEFT_PAREN INFIXR template NAT RIGHT_PAREN .)
    WHERE           reduce using rule 219 (mixfix -> LEFT_PAREN INFIXR template NAT RIGHT_PAREN .)
    AXIOMATIZATION  reduce using rule 219 (mixfix -> LEFT_PAREN INFIXR template NAT RIGHT_PAREN .)
    FUN             reduce using rule 219 (mixfix -> LEFT_PAREN INFIXR template NAT RIGHT_PAREN .)
    FUNCTION        reduce using rule 219 (mixfix -> LEFT_PAREN INFIXR template NAT RIGHT_PAREN .)
    LEMMA           reduce using rule 219 (mixfix -> LEFT_PAREN INFIXR template NAT RIGHT_PAREN .)
    LOCALE          reduce using rule 219 (mixfix -> LEFT_PAREN INFIXR template NAT RIGHT_PAREN .)
    METHOD          reduce using rule 219 (mixfix -> LEFT_PAREN INFIXR template NAT RIGHT_PAREN .)
    SECTION         reduce using rule 219 (mixfix -> LEFT_PAREN INFIXR template NAT RIGHT_PAREN .)
    TEXT            reduce using rule 219 (mixfix -> LEFT_PAREN INFIXR template NAT RIGHT_PAREN .)
    TYPE_SYNONYM    reduce using rule 219 (mixfix -> LEFT_PAREN INFIXR template NAT RIGHT_PAREN .)
    TYPEDECL        reduce using rule 219 (mixfix -> LEFT_PAREN INFIXR template NAT RIGHT_PAREN .)
    END             reduce using rule 219 (mixfix -> LEFT_PAREN INFIXR template NAT RIGHT_PAREN .)
    FIXES           reduce using rule 219 (mixfix -> LEFT_PAREN INFIXR template NAT RIGHT_PAREN .)
    CONSTRAINS      reduce using rule 219 (mixfix -> LEFT_PAREN INFIXR template NAT RIGHT_PAREN .)
    ASSUMES         reduce using rule 219 (mixfix -> LEFT_PAREN INFIXR template NAT RIGHT_PAREN .)
    DEFINES         reduce using rule 219 (mixfix -> LEFT_PAREN INFIXR template NAT RIGHT_PAREN .)
    NOTES           reduce using rule 219 (mixfix -> LEFT_PAREN INFIXR template NAT RIGHT_PAREN .)
    BEGIN           reduce using rule 219 (mixfix -> LEFT_PAREN INFIXR template NAT RIGHT_PAREN .)
    OPENING         reduce using rule 219 (mixfix -> LEFT_PAREN INFIXR template NAT RIGHT_PAREN .)
    ID              reduce using rule 219 (mixfix -> LEFT_PAREN INFIXR template NAT RIGHT_PAREN .)
    QUOTED_STRING   reduce using rule 219 (mixfix -> LEFT_PAREN INFIXR template NAT RIGHT_PAREN .)
    LEFT_BRACKET    reduce using rule 219 (mixfix -> LEFT_PAREN INFIXR template NAT RIGHT_PAREN .)


state 349

    (221) mixfix -> BINDER template prio NAT RIGHT_PAREN .

    AND             reduce using rule 221 (mixfix -> BINDER template prio NAT RIGHT_PAREN .)
    WHERE           reduce using rule 221 (mixfix -> BINDER template prio NAT RIGHT_PAREN .)
    AXIOMATIZATION  reduce using rule 221 (mixfix -> BINDER template prio NAT RIGHT_PAREN .)
    FUN             reduce using rule 221 (mixfix -> BINDER template prio NAT RIGHT_PAREN .)
    FUNCTION        reduce using rule 221 (mixfix -> BINDER template prio NAT RIGHT_PAREN .)
    LEMMA           reduce using rule 221 (mixfix -> BINDER template prio NAT RIGHT_PAREN .)
    LOCALE          reduce using rule 221 (mixfix -> BINDER template prio NAT RIGHT_PAREN .)
    METHOD          reduce using rule 221 (mixfix -> BINDER template prio NAT RIGHT_PAREN .)
    SECTION         reduce using rule 221 (mixfix -> BINDER template prio NAT RIGHT_PAREN .)
    TEXT            reduce using rule 221 (mixfix -> BINDER template prio NAT RIGHT_PAREN .)
    TYPE_SYNONYM    reduce using rule 221 (mixfix -> BINDER template prio NAT RIGHT_PAREN .)
    TYPEDECL        reduce using rule 221 (mixfix -> BINDER template prio NAT RIGHT_PAREN .)
    END             reduce using rule 221 (mixfix -> BINDER template prio NAT RIGHT_PAREN .)
    FIXES           reduce using rule 221 (mixfix -> BINDER template prio NAT RIGHT_PAREN .)
    CONSTRAINS      reduce using rule 221 (mixfix -> BINDER template prio NAT RIGHT_PAREN .)
    ASSUMES         reduce using rule 221 (mixfix -> BINDER template prio NAT RIGHT_PAREN .)
    DEFINES         reduce using rule 221 (mixfix -> BINDER template prio NAT RIGHT_PAREN .)
    NOTES           reduce using rule 221 (mixfix -> BINDER template prio NAT RIGHT_PAREN .)
    BEGIN           reduce using rule 221 (mixfix -> BINDER template prio NAT RIGHT_PAREN .)
    OPENING         reduce using rule 221 (mixfix -> BINDER template prio NAT RIGHT_PAREN .)
    ID              reduce using rule 221 (mixfix -> BINDER template prio NAT RIGHT_PAREN .)
    QUOTED_STRING   reduce using rule 221 (mixfix -> BINDER template prio NAT RIGHT_PAREN .)
    LEFT_BRACKET    reduce using rule 221 (mixfix -> BINDER template prio NAT RIGHT_PAREN .)


state 350

    (226) prio -> LEFT_BRACKET NAT RIGHT_BRACKET .

    NAT             reduce using rule 226 (prio -> LEFT_BRACKET NAT RIGHT_BRACKET .)


state 351

    (133) structured_spec -> thmdecl ID spec_prems for_fixes .

    ID              reduce using rule 133 (structured_spec -> thmdecl ID spec_prems for_fixes .)
    QUOTED_STRING   reduce using rule 133 (structured_spec -> thmdecl ID spec_prems for_fixes .)
    LEFT_BRACKET    reduce using rule 133 (structured_spec -> thmdecl ID spec_prems for_fixes .)
    AXIOMATIZATION  reduce using rule 133 (structured_spec -> thmdecl ID spec_prems for_fixes .)
    FUN             reduce using rule 133 (structured_spec -> thmdecl ID spec_prems for_fixes .)
    FUNCTION        reduce using rule 133 (structured_spec -> thmdecl ID spec_prems for_fixes .)
    LEMMA           reduce using rule 133 (structured_spec -> thmdecl ID spec_prems for_fixes .)
    LOCALE          reduce using rule 133 (structured_spec -> thmdecl ID spec_prems for_fixes .)
    METHOD          reduce using rule 133 (structured_spec -> thmdecl ID spec_prems for_fixes .)
    SECTION         reduce using rule 133 (structured_spec -> thmdecl ID spec_prems for_fixes .)
    TEXT            reduce using rule 133 (structured_spec -> thmdecl ID spec_prems for_fixes .)
    TYPE_SYNONYM    reduce using rule 133 (structured_spec -> thmdecl ID spec_prems for_fixes .)
    TYPEDECL        reduce using rule 133 (structured_spec -> thmdecl ID spec_prems for_fixes .)
    END             reduce using rule 133 (structured_spec -> thmdecl ID spec_prems for_fixes .)


state 352

    (134) structured_spec -> thmdecl QUOTED_STRING spec_prems for_fixes .

    ID              reduce using rule 134 (structured_spec -> thmdecl QUOTED_STRING spec_prems for_fixes .)
    QUOTED_STRING   reduce using rule 134 (structured_spec -> thmdecl QUOTED_STRING spec_prems for_fixes .)
    LEFT_BRACKET    reduce using rule 134 (structured_spec -> thmdecl QUOTED_STRING spec_prems for_fixes .)
    AXIOMATIZATION  reduce using rule 134 (structured_spec -> thmdecl QUOTED_STRING spec_prems for_fixes .)
    FUN             reduce using rule 134 (structured_spec -> thmdecl QUOTED_STRING spec_prems for_fixes .)
    FUNCTION        reduce using rule 134 (structured_spec -> thmdecl QUOTED_STRING spec_prems for_fixes .)
    LEMMA           reduce using rule 134 (structured_spec -> thmdecl QUOTED_STRING spec_prems for_fixes .)
    LOCALE          reduce using rule 134 (structured_spec -> thmdecl QUOTED_STRING spec_prems for_fixes .)
    METHOD          reduce using rule 134 (structured_spec -> thmdecl QUOTED_STRING spec_prems for_fixes .)
    SECTION         reduce using rule 134 (structured_spec -> thmdecl QUOTED_STRING spec_prems for_fixes .)
    TEXT            reduce using rule 134 (structured_spec -> thmdecl QUOTED_STRING spec_prems for_fixes .)
    TYPE_SYNONYM    reduce using rule 134 (structured_spec -> thmdecl QUOTED_STRING spec_prems for_fixes .)
    TYPEDECL        reduce using rule 134 (structured_spec -> thmdecl QUOTED_STRING spec_prems for_fixes .)
    END             reduce using rule 134 (structured_spec -> thmdecl QUOTED_STRING spec_prems for_fixes .)


state 353

    (45) lemma_proof_block -> PROOF apply_block .

    AXIOMATIZATION  reduce using rule 45 (lemma_proof_block -> PROOF apply_block .)
    FUN             reduce using rule 45 (lemma_proof_block -> PROOF apply_block .)
    FUNCTION        reduce using rule 45 (lemma_proof_block -> PROOF apply_block .)
    LEMMA           reduce using rule 45 (lemma_proof_block -> PROOF apply_block .)
    LOCALE          reduce using rule 45 (lemma_proof_block -> PROOF apply_block .)
    METHOD          reduce using rule 45 (lemma_proof_block -> PROOF apply_block .)
    SECTION         reduce using rule 45 (lemma_proof_block -> PROOF apply_block .)
    TEXT            reduce using rule 45 (lemma_proof_block -> PROOF apply_block .)
    TYPE_SYNONYM    reduce using rule 45 (lemma_proof_block -> PROOF apply_block .)
    TYPEDECL        reduce using rule 45 (lemma_proof_block -> PROOF apply_block .)
    END             reduce using rule 45 (lemma_proof_block -> PROOF apply_block .)


state 354

    (56) apply_block -> empty .

    AXIOMATIZATION  reduce using rule 56 (apply_block -> empty .)
    FUN             reduce using rule 56 (apply_block -> empty .)
    FUNCTION        reduce using rule 56 (apply_block -> empty .)
    LEMMA           reduce using rule 56 (apply_block -> empty .)
    LOCALE          reduce using rule 56 (apply_block -> empty .)
    METHOD          reduce using rule 56 (apply_block -> empty .)
    SECTION         reduce using rule 56 (apply_block -> empty .)
    TEXT            reduce using rule 56 (apply_block -> empty .)
    TYPE_SYNONYM    reduce using rule 56 (apply_block -> empty .)
    TYPEDECL        reduce using rule 56 (apply_block -> empty .)
    END             reduce using rule 56 (apply_block -> empty .)
    APPLY           reduce using rule 56 (apply_block -> empty .)
    USING           reduce using rule 56 (apply_block -> empty .)
    BY              reduce using rule 56 (apply_block -> empty .)
    DONE            reduce using rule 56 (apply_block -> empty .)
    SORRY           reduce using rule 56 (apply_block -> empty .)
    SUBGOAL         reduce using rule 56 (apply_block -> empty .)


state 355

    (54) apply_block -> single_apply apply_block .

    AXIOMATIZATION  reduce using rule 54 (apply_block -> single_apply apply_block .)
    FUN             reduce using rule 54 (apply_block -> single_apply apply_block .)
    FUNCTION        reduce using rule 54 (apply_block -> single_apply apply_block .)
    LEMMA           reduce using rule 54 (apply_block -> single_apply apply_block .)
    LOCALE          reduce using rule 54 (apply_block -> single_apply apply_block .)
    METHOD          reduce using rule 54 (apply_block -> single_apply apply_block .)
    SECTION         reduce using rule 54 (apply_block -> single_apply apply_block .)
    TEXT            reduce using rule 54 (apply_block -> single_apply apply_block .)
    TYPE_SYNONYM    reduce using rule 54 (apply_block -> single_apply apply_block .)
    TYPEDECL        reduce using rule 54 (apply_block -> single_apply apply_block .)
    END             reduce using rule 54 (apply_block -> single_apply apply_block .)
    APPLY           reduce using rule 54 (apply_block -> single_apply apply_block .)
    USING           reduce using rule 54 (apply_block -> single_apply apply_block .)
    BY              reduce using rule 54 (apply_block -> single_apply apply_block .)
    DONE            reduce using rule 54 (apply_block -> single_apply apply_block .)
    SORRY           reduce using rule 54 (apply_block -> single_apply apply_block .)
    SUBGOAL         reduce using rule 54 (apply_block -> single_apply apply_block .)


state 356

    (55) apply_block -> subgoal apply_block .

    AXIOMATIZATION  reduce using rule 55 (apply_block -> subgoal apply_block .)
    FUN             reduce using rule 55 (apply_block -> subgoal apply_block .)
    FUNCTION        reduce using rule 55 (apply_block -> subgoal apply_block .)
    LEMMA           reduce using rule 55 (apply_block -> subgoal apply_block .)
    LOCALE          reduce using rule 55 (apply_block -> subgoal apply_block .)
    METHOD          reduce using rule 55 (apply_block -> subgoal apply_block .)
    SECTION         reduce using rule 55 (apply_block -> subgoal apply_block .)
    TEXT            reduce using rule 55 (apply_block -> subgoal apply_block .)
    TYPE_SYNONYM    reduce using rule 55 (apply_block -> subgoal apply_block .)
    TYPEDECL        reduce using rule 55 (apply_block -> subgoal apply_block .)
    END             reduce using rule 55 (apply_block -> subgoal apply_block .)
    APPLY           reduce using rule 55 (apply_block -> subgoal apply_block .)
    USING           reduce using rule 55 (apply_block -> subgoal apply_block .)
    BY              reduce using rule 55 (apply_block -> subgoal apply_block .)
    DONE            reduce using rule 55 (apply_block -> subgoal apply_block .)
    SORRY           reduce using rule 55 (apply_block -> subgoal apply_block .)
    SUBGOAL         reduce using rule 55 (apply_block -> subgoal apply_block .)


state 357

    (57) single_apply -> APPLY instruction .

    APPLY           reduce using rule 57 (single_apply -> APPLY instruction .)
    USING           reduce using rule 57 (single_apply -> APPLY instruction .)
    BY              reduce using rule 57 (single_apply -> APPLY instruction .)
    DONE            reduce using rule 57 (single_apply -> APPLY instruction .)
    SORRY           reduce using rule 57 (single_apply -> APPLY instruction .)
    SUBGOAL         reduce using rule 57 (single_apply -> APPLY instruction .)
    AXIOMATIZATION  reduce using rule 57 (single_apply -> APPLY instruction .)
    FUN             reduce using rule 57 (single_apply -> APPLY instruction .)
    FUNCTION        reduce using rule 57 (single_apply -> APPLY instruction .)
    LEMMA           reduce using rule 57 (single_apply -> APPLY instruction .)
    LOCALE          reduce using rule 57 (single_apply -> APPLY instruction .)
    METHOD          reduce using rule 57 (single_apply -> APPLY instruction .)
    SECTION         reduce using rule 57 (single_apply -> APPLY instruction .)
    TEXT            reduce using rule 57 (single_apply -> APPLY instruction .)
    TYPE_SYNONYM    reduce using rule 57 (single_apply -> APPLY instruction .)
    TYPEDECL        reduce using rule 57 (single_apply -> APPLY instruction .)
    END             reduce using rule 57 (single_apply -> APPLY instruction .)


state 358

    (58) single_apply -> APPLY LEFT_PAREN . instruction RIGHT_PAREN
    (28) instruction -> LEFT_PAREN . instruction RIGHT_PAREN
    (29) instruction -> LEFT_PAREN . instruction RIGHT_PAREN instruction_modifier
    (34) single_instruction -> LEFT_PAREN . ID method_args RIGHT_PAREN
    (35) single_instruction -> LEFT_PAREN . ID method_args RIGHT_PAREN instruction_modifier
    (23) instruction -> . single_instruction
    (24) instruction -> . single_instruction instruction_modifier
    (25) instruction -> . single_instruction instruction_modifier COMMA instruction
    (26) instruction -> . single_instruction SEMICOLON instruction
    (27) instruction -> . single_instruction COMMA instruction
    (28) instruction -> . LEFT_PAREN instruction RIGHT_PAREN
    (29) instruction -> . LEFT_PAREN instruction RIGHT_PAREN instruction_modifier
    (32) single_instruction -> . ID
    (33) single_instruction -> . ID method_args
    (34) single_instruction -> . LEFT_PAREN ID method_args RIGHT_PAREN
    (35) single_instruction -> . LEFT_PAREN ID method_args RIGHT_PAREN instruction_modifier

    ID              shift and go to state 253
    LEFT_PAREN      shift and go to state 160

    instruction                    shift and go to state 390
    single_instruction             shift and go to state 159

state 359

    (59) single_apply -> USING using_block . APPLY DASH
    (60) single_apply -> USING using_block . APPLY instruction
    (61) single_apply -> USING using_block . APPLY LEFT_PAREN instruction RIGHT_PAREN
    (64) single_apply -> USING using_block . BY instruction
    (65) single_apply -> USING using_block . BY LEFT_PAREN instruction RIGHT_PAREN

    APPLY           shift and go to state 391
    BY              shift and go to state 392


state 360

    (68) using_block -> ASSMS . using_block
    (69) using_block -> ASSMS . LEFT_PAREN NAT RIGHT_PAREN using_block
    (70) using_block -> ASSMS . LEFT_PAREN NAT COMMA NAT RIGHT_PAREN using_block
    (71) using_block -> ASSMS . LEFT_PAREN NAT DASH NAT RIGHT_PAREN using_block
    (68) using_block -> . ASSMS using_block
    (69) using_block -> . ASSMS LEFT_PAREN NAT RIGHT_PAREN using_block
    (70) using_block -> . ASSMS LEFT_PAREN NAT COMMA NAT RIGHT_PAREN using_block
    (71) using_block -> . ASSMS LEFT_PAREN NAT DASH NAT RIGHT_PAREN using_block
    (72) using_block -> . empty
    (253) empty -> .

    LEFT_PAREN      shift and go to state 394
    ASSMS           shift and go to state 360
    APPLY           reduce using rule 253 (empty -> .)
    BY              reduce using rule 253 (empty -> .)

    using_block                    shift and go to state 393
    empty                          shift and go to state 361

state 361

    (72) using_block -> empty .

    APPLY           reduce using rule 72 (using_block -> empty .)
    BY              reduce using rule 72 (using_block -> empty .)


state 362

    (62) single_apply -> BY instruction .

    APPLY           reduce using rule 62 (single_apply -> BY instruction .)
    USING           reduce using rule 62 (single_apply -> BY instruction .)
    BY              reduce using rule 62 (single_apply -> BY instruction .)
    DONE            reduce using rule 62 (single_apply -> BY instruction .)
    SORRY           reduce using rule 62 (single_apply -> BY instruction .)
    SUBGOAL         reduce using rule 62 (single_apply -> BY instruction .)
    AXIOMATIZATION  reduce using rule 62 (single_apply -> BY instruction .)
    FUN             reduce using rule 62 (single_apply -> BY instruction .)
    FUNCTION        reduce using rule 62 (single_apply -> BY instruction .)
    LEMMA           reduce using rule 62 (single_apply -> BY instruction .)
    LOCALE          reduce using rule 62 (single_apply -> BY instruction .)
    METHOD          reduce using rule 62 (single_apply -> BY instruction .)
    SECTION         reduce using rule 62 (single_apply -> BY instruction .)
    TEXT            reduce using rule 62 (single_apply -> BY instruction .)
    TYPE_SYNONYM    reduce using rule 62 (single_apply -> BY instruction .)
    TYPEDECL        reduce using rule 62 (single_apply -> BY instruction .)
    END             reduce using rule 62 (single_apply -> BY instruction .)


state 363

    (63) single_apply -> BY LEFT_PAREN . instruction RIGHT_PAREN
    (28) instruction -> LEFT_PAREN . instruction RIGHT_PAREN
    (29) instruction -> LEFT_PAREN . instruction RIGHT_PAREN instruction_modifier
    (34) single_instruction -> LEFT_PAREN . ID method_args RIGHT_PAREN
    (35) single_instruction -> LEFT_PAREN . ID method_args RIGHT_PAREN instruction_modifier
    (23) instruction -> . single_instruction
    (24) instruction -> . single_instruction instruction_modifier
    (25) instruction -> . single_instruction instruction_modifier COMMA instruction
    (26) instruction -> . single_instruction SEMICOLON instruction
    (27) instruction -> . single_instruction COMMA instruction
    (28) instruction -> . LEFT_PAREN instruction RIGHT_PAREN
    (29) instruction -> . LEFT_PAREN instruction RIGHT_PAREN instruction_modifier
    (32) single_instruction -> . ID
    (33) single_instruction -> . ID method_args
    (34) single_instruction -> . LEFT_PAREN ID method_args RIGHT_PAREN
    (35) single_instruction -> . LEFT_PAREN ID method_args RIGHT_PAREN instruction_modifier

    ID              shift and go to state 253
    LEFT_PAREN      shift and go to state 160

    instruction                    shift and go to state 395
    single_instruction             shift and go to state 159

state 364

    (75) subgoal -> SUBGOAL QUOTED_STRING . apply_block
    (54) apply_block -> . single_apply apply_block
    (55) apply_block -> . subgoal apply_block
    (56) apply_block -> . empty
    (57) single_apply -> . APPLY instruction
    (58) single_apply -> . APPLY LEFT_PAREN instruction RIGHT_PAREN
    (59) single_apply -> . USING using_block APPLY DASH
    (60) single_apply -> . USING using_block APPLY instruction
    (61) single_apply -> . USING using_block APPLY LEFT_PAREN instruction RIGHT_PAREN
    (62) single_apply -> . BY instruction
    (63) single_apply -> . BY LEFT_PAREN instruction RIGHT_PAREN
    (64) single_apply -> . USING using_block BY instruction
    (65) single_apply -> . USING using_block BY LEFT_PAREN instruction RIGHT_PAREN
    (66) single_apply -> . DONE
    (67) single_apply -> . SORRY
    (75) subgoal -> . SUBGOAL QUOTED_STRING apply_block
    (253) empty -> .

  ! shift/reduce conflict for APPLY resolved as shift
  ! shift/reduce conflict for USING resolved as shift
  ! shift/reduce conflict for BY resolved as shift
  ! shift/reduce conflict for DONE resolved as shift
  ! shift/reduce conflict for SORRY resolved as shift
  ! shift/reduce conflict for SUBGOAL resolved as shift
    APPLY           shift and go to state 295
    USING           shift and go to state 296
    BY              shift and go to state 297
    DONE            shift and go to state 298
    SORRY           shift and go to state 299
    SUBGOAL         shift and go to state 300
    AXIOMATIZATION  reduce using rule 253 (empty -> .)
    FUN             reduce using rule 253 (empty -> .)
    FUNCTION        reduce using rule 253 (empty -> .)
    LEMMA           reduce using rule 253 (empty -> .)
    LOCALE          reduce using rule 253 (empty -> .)
    METHOD          reduce using rule 253 (empty -> .)
    SECTION         reduce using rule 253 (empty -> .)
    TEXT            reduce using rule 253 (empty -> .)
    TYPE_SYNONYM    reduce using rule 253 (empty -> .)
    TYPEDECL        reduce using rule 253 (empty -> .)
    END             reduce using rule 253 (empty -> .)

  ! APPLY           [ reduce using rule 253 (empty -> .) ]
  ! USING           [ reduce using rule 253 (empty -> .) ]
  ! BY              [ reduce using rule 253 (empty -> .) ]
  ! DONE            [ reduce using rule 253 (empty -> .) ]
  ! SORRY           [ reduce using rule 253 (empty -> .) ]
  ! SUBGOAL         [ reduce using rule 253 (empty -> .) ]

    apply_block                    shift and go to state 396
    single_apply                   shift and go to state 293
    subgoal                        shift and go to state 294
    empty                          shift and go to state 354

state 365

    (49) assumptions_list -> assumption AND assumptions_list .

    SHOWS           reduce using rule 49 (assumptions_list -> assumption AND assumptions_list .)


state 366

    (52) assumption -> NAT COLON QUOTED_STRING .

    AND             reduce using rule 52 (assumption -> NAT COLON QUOTED_STRING .)
    SHOWS           reduce using rule 52 (assumption -> NAT COLON QUOTED_STRING .)


state 367

    (170) name_insts_list -> ID EQUALS . ID
    (171) name_insts_list -> ID EQUALS . QUOTED_STRING
    (172) name_insts_list -> ID EQUALS . ID name_insts_list
    (173) name_insts_list -> ID EQUALS . QUOTED_STRING name_insts_list

    ID              shift and go to state 397
    QUOTED_STRING   shift and go to state 398


state 368

    (178) locale_block -> LOCALE ID EQ locale BEGIN content END .

    AXIOMATIZATION  reduce using rule 178 (locale_block -> LOCALE ID EQ locale BEGIN content END .)
    FUN             reduce using rule 178 (locale_block -> LOCALE ID EQ locale BEGIN content END .)
    FUNCTION        reduce using rule 178 (locale_block -> LOCALE ID EQ locale BEGIN content END .)
    LEMMA           reduce using rule 178 (locale_block -> LOCALE ID EQ locale BEGIN content END .)
    LOCALE          reduce using rule 178 (locale_block -> LOCALE ID EQ locale BEGIN content END .)
    METHOD          reduce using rule 178 (locale_block -> LOCALE ID EQ locale BEGIN content END .)
    SECTION         reduce using rule 178 (locale_block -> LOCALE ID EQ locale BEGIN content END .)
    TEXT            reduce using rule 178 (locale_block -> LOCALE ID EQ locale BEGIN content END .)
    TYPE_SYNONYM    reduce using rule 178 (locale_block -> LOCALE ID EQ locale BEGIN content END .)
    TYPEDECL        reduce using rule 178 (locale_block -> LOCALE ID EQ locale BEGIN content END .)
    END             reduce using rule 178 (locale_block -> LOCALE ID EQ locale BEGIN content END .)


state 369

    (184) locale -> locale opening PLUS context_elem_list .

    BEGIN           reduce using rule 184 (locale -> locale opening PLUS context_elem_list .)
    OPENING         reduce using rule 184 (locale -> locale opening PLUS context_elem_list .)
    AXIOMATIZATION  reduce using rule 184 (locale -> locale opening PLUS context_elem_list .)
    FUN             reduce using rule 184 (locale -> locale opening PLUS context_elem_list .)
    FUNCTION        reduce using rule 184 (locale -> locale opening PLUS context_elem_list .)
    LEMMA           reduce using rule 184 (locale -> locale opening PLUS context_elem_list .)
    LOCALE          reduce using rule 184 (locale -> locale opening PLUS context_elem_list .)
    METHOD          reduce using rule 184 (locale -> locale opening PLUS context_elem_list .)
    SECTION         reduce using rule 184 (locale -> locale opening PLUS context_elem_list .)
    TEXT            reduce using rule 184 (locale -> locale opening PLUS context_elem_list .)
    TYPE_SYNONYM    reduce using rule 184 (locale -> locale opening PLUS context_elem_list .)
    TYPEDECL        reduce using rule 184 (locale -> locale opening PLUS context_elem_list .)
    END             reduce using rule 184 (locale -> locale opening PLUS context_elem_list .)


state 370

    (185) locale -> locale_expr opening PLUS context_elem_list .

    BEGIN           reduce using rule 185 (locale -> locale_expr opening PLUS context_elem_list .)
    OPENING         reduce using rule 185 (locale -> locale_expr opening PLUS context_elem_list .)
    AXIOMATIZATION  reduce using rule 185 (locale -> locale_expr opening PLUS context_elem_list .)
    FUN             reduce using rule 185 (locale -> locale_expr opening PLUS context_elem_list .)
    FUNCTION        reduce using rule 185 (locale -> locale_expr opening PLUS context_elem_list .)
    LEMMA           reduce using rule 185 (locale -> locale_expr opening PLUS context_elem_list .)
    LOCALE          reduce using rule 185 (locale -> locale_expr opening PLUS context_elem_list .)
    METHOD          reduce using rule 185 (locale -> locale_expr opening PLUS context_elem_list .)
    SECTION         reduce using rule 185 (locale -> locale_expr opening PLUS context_elem_list .)
    TEXT            reduce using rule 185 (locale -> locale_expr opening PLUS context_elem_list .)
    TYPE_SYNONYM    reduce using rule 185 (locale -> locale_expr opening PLUS context_elem_list .)
    TYPEDECL        reduce using rule 185 (locale -> locale_expr opening PLUS context_elem_list .)
    END             reduce using rule 185 (locale -> locale_expr opening PLUS context_elem_list .)


state 371

    (193) name_type_list -> ID COLON COLON . ID
    (194) name_type_list -> ID COLON COLON . ID AND name_type_list

    ID              shift and go to state 399


state 372

    (196) defines_list -> defines_list_element AND defines_list .

    FIXES           reduce using rule 196 (defines_list -> defines_list_element AND defines_list .)
    CONSTRAINS      reduce using rule 196 (defines_list -> defines_list_element AND defines_list .)
    ASSUMES         reduce using rule 196 (defines_list -> defines_list_element AND defines_list .)
    DEFINES         reduce using rule 196 (defines_list -> defines_list_element AND defines_list .)
    NOTES           reduce using rule 196 (defines_list -> defines_list_element AND defines_list .)
    BEGIN           reduce using rule 196 (defines_list -> defines_list_element AND defines_list .)
    OPENING         reduce using rule 196 (defines_list -> defines_list_element AND defines_list .)
    AXIOMATIZATION  reduce using rule 196 (defines_list -> defines_list_element AND defines_list .)
    FUN             reduce using rule 196 (defines_list -> defines_list_element AND defines_list .)
    FUNCTION        reduce using rule 196 (defines_list -> defines_list_element AND defines_list .)
    LEMMA           reduce using rule 196 (defines_list -> defines_list_element AND defines_list .)
    LOCALE          reduce using rule 196 (defines_list -> defines_list_element AND defines_list .)
    METHOD          reduce using rule 196 (defines_list -> defines_list_element AND defines_list .)
    SECTION         reduce using rule 196 (defines_list -> defines_list_element AND defines_list .)
    TEXT            reduce using rule 196 (defines_list -> defines_list_element AND defines_list .)
    TYPE_SYNONYM    reduce using rule 196 (defines_list -> defines_list_element AND defines_list .)
    TYPEDECL        reduce using rule 196 (defines_list -> defines_list_element AND defines_list .)
    END             reduce using rule 196 (defines_list -> defines_list_element AND defines_list .)


state 373

    (101) prop_pat -> LEFT_PAREN prop_pat_terms . RIGHT_PAREN

    RIGHT_PAREN     shift and go to state 400


state 374

    (102) prop_pat_terms -> prop_pat_term .
    (103) prop_pat_terms -> prop_pat_term . prop_pat_terms
    (102) prop_pat_terms -> . prop_pat_term
    (103) prop_pat_terms -> . prop_pat_term prop_pat_terms
    (104) prop_pat_term -> . IS ID
    (105) prop_pat_term -> . IS QUOTED_STRING

    RIGHT_PAREN     reduce using rule 102 (prop_pat_terms -> prop_pat_term .)
    IS              shift and go to state 375

    prop_pat_term                  shift and go to state 374
    prop_pat_terms                 shift and go to state 401

state 375

    (104) prop_pat_term -> IS . ID
    (105) prop_pat_term -> IS . QUOTED_STRING

    ID              shift and go to state 402
    QUOTED_STRING   shift and go to state 403


state 376

    (203) defines_list_element -> thmdecl ID prop_pat .

    AND             reduce using rule 203 (defines_list_element -> thmdecl ID prop_pat .)
    FIXES           reduce using rule 203 (defines_list_element -> thmdecl ID prop_pat .)
    CONSTRAINS      reduce using rule 203 (defines_list_element -> thmdecl ID prop_pat .)
    ASSUMES         reduce using rule 203 (defines_list_element -> thmdecl ID prop_pat .)
    DEFINES         reduce using rule 203 (defines_list_element -> thmdecl ID prop_pat .)
    NOTES           reduce using rule 203 (defines_list_element -> thmdecl ID prop_pat .)
    BEGIN           reduce using rule 203 (defines_list_element -> thmdecl ID prop_pat .)
    OPENING         reduce using rule 203 (defines_list_element -> thmdecl ID prop_pat .)
    AXIOMATIZATION  reduce using rule 203 (defines_list_element -> thmdecl ID prop_pat .)
    FUN             reduce using rule 203 (defines_list_element -> thmdecl ID prop_pat .)
    FUNCTION        reduce using rule 203 (defines_list_element -> thmdecl ID prop_pat .)
    LEMMA           reduce using rule 203 (defines_list_element -> thmdecl ID prop_pat .)
    LOCALE          reduce using rule 203 (defines_list_element -> thmdecl ID prop_pat .)
    METHOD          reduce using rule 203 (defines_list_element -> thmdecl ID prop_pat .)
    SECTION         reduce using rule 203 (defines_list_element -> thmdecl ID prop_pat .)
    TEXT            reduce using rule 203 (defines_list_element -> thmdecl ID prop_pat .)
    TYPE_SYNONYM    reduce using rule 203 (defines_list_element -> thmdecl ID prop_pat .)
    TYPEDECL        reduce using rule 203 (defines_list_element -> thmdecl ID prop_pat .)
    END             reduce using rule 203 (defines_list_element -> thmdecl ID prop_pat .)


state 377

    (204) defines_list_element -> thmdecl QUOTED_STRING prop_pat .

    AND             reduce using rule 204 (defines_list_element -> thmdecl QUOTED_STRING prop_pat .)
    FIXES           reduce using rule 204 (defines_list_element -> thmdecl QUOTED_STRING prop_pat .)
    CONSTRAINS      reduce using rule 204 (defines_list_element -> thmdecl QUOTED_STRING prop_pat .)
    ASSUMES         reduce using rule 204 (defines_list_element -> thmdecl QUOTED_STRING prop_pat .)
    DEFINES         reduce using rule 204 (defines_list_element -> thmdecl QUOTED_STRING prop_pat .)
    NOTES           reduce using rule 204 (defines_list_element -> thmdecl QUOTED_STRING prop_pat .)
    BEGIN           reduce using rule 204 (defines_list_element -> thmdecl QUOTED_STRING prop_pat .)
    OPENING         reduce using rule 204 (defines_list_element -> thmdecl QUOTED_STRING prop_pat .)
    AXIOMATIZATION  reduce using rule 204 (defines_list_element -> thmdecl QUOTED_STRING prop_pat .)
    FUN             reduce using rule 204 (defines_list_element -> thmdecl QUOTED_STRING prop_pat .)
    FUNCTION        reduce using rule 204 (defines_list_element -> thmdecl QUOTED_STRING prop_pat .)
    LEMMA           reduce using rule 204 (defines_list_element -> thmdecl QUOTED_STRING prop_pat .)
    LOCALE          reduce using rule 204 (defines_list_element -> thmdecl QUOTED_STRING prop_pat .)
    METHOD          reduce using rule 204 (defines_list_element -> thmdecl QUOTED_STRING prop_pat .)
    SECTION         reduce using rule 204 (defines_list_element -> thmdecl QUOTED_STRING prop_pat .)
    TEXT            reduce using rule 204 (defines_list_element -> thmdecl QUOTED_STRING prop_pat .)
    TYPE_SYNONYM    reduce using rule 204 (defines_list_element -> thmdecl QUOTED_STRING prop_pat .)
    TYPEDECL        reduce using rule 204 (defines_list_element -> thmdecl QUOTED_STRING prop_pat .)
    END             reduce using rule 204 (defines_list_element -> thmdecl QUOTED_STRING prop_pat .)


state 378

    (206) notes_list -> notes_list_element AND notes_list .

    FIXES           reduce using rule 206 (notes_list -> notes_list_element AND notes_list .)
    CONSTRAINS      reduce using rule 206 (notes_list -> notes_list_element AND notes_list .)
    ASSUMES         reduce using rule 206 (notes_list -> notes_list_element AND notes_list .)
    DEFINES         reduce using rule 206 (notes_list -> notes_list_element AND notes_list .)
    NOTES           reduce using rule 206 (notes_list -> notes_list_element AND notes_list .)
    BEGIN           reduce using rule 206 (notes_list -> notes_list_element AND notes_list .)
    OPENING         reduce using rule 206 (notes_list -> notes_list_element AND notes_list .)
    AXIOMATIZATION  reduce using rule 206 (notes_list -> notes_list_element AND notes_list .)
    FUN             reduce using rule 206 (notes_list -> notes_list_element AND notes_list .)
    FUNCTION        reduce using rule 206 (notes_list -> notes_list_element AND notes_list .)
    LEMMA           reduce using rule 206 (notes_list -> notes_list_element AND notes_list .)
    LOCALE          reduce using rule 206 (notes_list -> notes_list_element AND notes_list .)
    METHOD          reduce using rule 206 (notes_list -> notes_list_element AND notes_list .)
    SECTION         reduce using rule 206 (notes_list -> notes_list_element AND notes_list .)
    TEXT            reduce using rule 206 (notes_list -> notes_list_element AND notes_list .)
    TYPE_SYNONYM    reduce using rule 206 (notes_list -> notes_list_element AND notes_list .)
    TYPEDECL        reduce using rule 206 (notes_list -> notes_list_element AND notes_list .)
    END             reduce using rule 206 (notes_list -> notes_list_element AND notes_list .)


state 379

    (108) thm -> ID attributes .

    ID              reduce using rule 108 (thm -> ID attributes .)
    LEFT_BRACKET    reduce using rule 108 (thm -> ID attributes .)
    AND             reduce using rule 108 (thm -> ID attributes .)
    FIXES           reduce using rule 108 (thm -> ID attributes .)
    CONSTRAINS      reduce using rule 108 (thm -> ID attributes .)
    ASSUMES         reduce using rule 108 (thm -> ID attributes .)
    DEFINES         reduce using rule 108 (thm -> ID attributes .)
    NOTES           reduce using rule 108 (thm -> ID attributes .)
    BEGIN           reduce using rule 108 (thm -> ID attributes .)
    OPENING         reduce using rule 108 (thm -> ID attributes .)
    AXIOMATIZATION  reduce using rule 108 (thm -> ID attributes .)
    FUN             reduce using rule 108 (thm -> ID attributes .)
    FUNCTION        reduce using rule 108 (thm -> ID attributes .)
    LEMMA           reduce using rule 108 (thm -> ID attributes .)
    LOCALE          reduce using rule 108 (thm -> ID attributes .)
    METHOD          reduce using rule 108 (thm -> ID attributes .)
    SECTION         reduce using rule 108 (thm -> ID attributes .)
    TEXT            reduce using rule 108 (thm -> ID attributes .)
    TYPE_SYNONYM    reduce using rule 108 (thm -> ID attributes .)
    TYPEDECL        reduce using rule 108 (thm -> ID attributes .)
    END             reduce using rule 108 (thm -> ID attributes .)


state 380

    (157) instance -> qualifier COLON ID pos_insts .

    PLUS            reduce using rule 157 (instance -> qualifier COLON ID pos_insts .)
    FOR             reduce using rule 157 (instance -> qualifier COLON ID pos_insts .)
    OPENING         reduce using rule 157 (instance -> qualifier COLON ID pos_insts .)
    BEGIN           reduce using rule 157 (instance -> qualifier COLON ID pos_insts .)
    AXIOMATIZATION  reduce using rule 157 (instance -> qualifier COLON ID pos_insts .)
    FUN             reduce using rule 157 (instance -> qualifier COLON ID pos_insts .)
    FUNCTION        reduce using rule 157 (instance -> qualifier COLON ID pos_insts .)
    LEMMA           reduce using rule 157 (instance -> qualifier COLON ID pos_insts .)
    LOCALE          reduce using rule 157 (instance -> qualifier COLON ID pos_insts .)
    METHOD          reduce using rule 157 (instance -> qualifier COLON ID pos_insts .)
    SECTION         reduce using rule 157 (instance -> qualifier COLON ID pos_insts .)
    TEXT            reduce using rule 157 (instance -> qualifier COLON ID pos_insts .)
    TYPE_SYNONYM    reduce using rule 157 (instance -> qualifier COLON ID pos_insts .)
    TYPEDECL        reduce using rule 157 (instance -> qualifier COLON ID pos_insts .)
    END             reduce using rule 157 (instance -> qualifier COLON ID pos_insts .)


state 381

    (158) instance -> qualifier COLON ID name_insts .

    PLUS            reduce using rule 158 (instance -> qualifier COLON ID name_insts .)
    FOR             reduce using rule 158 (instance -> qualifier COLON ID name_insts .)
    OPENING         reduce using rule 158 (instance -> qualifier COLON ID name_insts .)
    BEGIN           reduce using rule 158 (instance -> qualifier COLON ID name_insts .)
    AXIOMATIZATION  reduce using rule 158 (instance -> qualifier COLON ID name_insts .)
    FUN             reduce using rule 158 (instance -> qualifier COLON ID name_insts .)
    FUNCTION        reduce using rule 158 (instance -> qualifier COLON ID name_insts .)
    LEMMA           reduce using rule 158 (instance -> qualifier COLON ID name_insts .)
    LOCALE          reduce using rule 158 (instance -> qualifier COLON ID name_insts .)
    METHOD          reduce using rule 158 (instance -> qualifier COLON ID name_insts .)
    SECTION         reduce using rule 158 (instance -> qualifier COLON ID name_insts .)
    TEXT            reduce using rule 158 (instance -> qualifier COLON ID name_insts .)
    TYPE_SYNONYM    reduce using rule 158 (instance -> qualifier COLON ID name_insts .)
    TYPEDECL        reduce using rule 158 (instance -> qualifier COLON ID name_insts .)
    END             reduce using rule 158 (instance -> qualifier COLON ID name_insts .)


state 382

    (25) instruction -> single_instruction instruction_modifier COMMA instruction .

    AXIOMATIZATION  reduce using rule 25 (instruction -> single_instruction instruction_modifier COMMA instruction .)
    FUN             reduce using rule 25 (instruction -> single_instruction instruction_modifier COMMA instruction .)
    FUNCTION        reduce using rule 25 (instruction -> single_instruction instruction_modifier COMMA instruction .)
    LEMMA           reduce using rule 25 (instruction -> single_instruction instruction_modifier COMMA instruction .)
    LOCALE          reduce using rule 25 (instruction -> single_instruction instruction_modifier COMMA instruction .)
    METHOD          reduce using rule 25 (instruction -> single_instruction instruction_modifier COMMA instruction .)
    SECTION         reduce using rule 25 (instruction -> single_instruction instruction_modifier COMMA instruction .)
    TEXT            reduce using rule 25 (instruction -> single_instruction instruction_modifier COMMA instruction .)
    TYPE_SYNONYM    reduce using rule 25 (instruction -> single_instruction instruction_modifier COMMA instruction .)
    TYPEDECL        reduce using rule 25 (instruction -> single_instruction instruction_modifier COMMA instruction .)
    END             reduce using rule 25 (instruction -> single_instruction instruction_modifier COMMA instruction .)
    RIGHT_PAREN     reduce using rule 25 (instruction -> single_instruction instruction_modifier COMMA instruction .)
    APPLY           reduce using rule 25 (instruction -> single_instruction instruction_modifier COMMA instruction .)
    USING           reduce using rule 25 (instruction -> single_instruction instruction_modifier COMMA instruction .)
    BY              reduce using rule 25 (instruction -> single_instruction instruction_modifier COMMA instruction .)
    DONE            reduce using rule 25 (instruction -> single_instruction instruction_modifier COMMA instruction .)
    SORRY           reduce using rule 25 (instruction -> single_instruction instruction_modifier COMMA instruction .)
    SUBGOAL         reduce using rule 25 (instruction -> single_instruction instruction_modifier COMMA instruction .)


state 383

    (29) instruction -> LEFT_PAREN instruction RIGHT_PAREN instruction_modifier .

    AXIOMATIZATION  reduce using rule 29 (instruction -> LEFT_PAREN instruction RIGHT_PAREN instruction_modifier .)
    FUN             reduce using rule 29 (instruction -> LEFT_PAREN instruction RIGHT_PAREN instruction_modifier .)
    FUNCTION        reduce using rule 29 (instruction -> LEFT_PAREN instruction RIGHT_PAREN instruction_modifier .)
    LEMMA           reduce using rule 29 (instruction -> LEFT_PAREN instruction RIGHT_PAREN instruction_modifier .)
    LOCALE          reduce using rule 29 (instruction -> LEFT_PAREN instruction RIGHT_PAREN instruction_modifier .)
    METHOD          reduce using rule 29 (instruction -> LEFT_PAREN instruction RIGHT_PAREN instruction_modifier .)
    SECTION         reduce using rule 29 (instruction -> LEFT_PAREN instruction RIGHT_PAREN instruction_modifier .)
    TEXT            reduce using rule 29 (instruction -> LEFT_PAREN instruction RIGHT_PAREN instruction_modifier .)
    TYPE_SYNONYM    reduce using rule 29 (instruction -> LEFT_PAREN instruction RIGHT_PAREN instruction_modifier .)
    TYPEDECL        reduce using rule 29 (instruction -> LEFT_PAREN instruction RIGHT_PAREN instruction_modifier .)
    END             reduce using rule 29 (instruction -> LEFT_PAREN instruction RIGHT_PAREN instruction_modifier .)
    RIGHT_PAREN     reduce using rule 29 (instruction -> LEFT_PAREN instruction RIGHT_PAREN instruction_modifier .)
    APPLY           reduce using rule 29 (instruction -> LEFT_PAREN instruction RIGHT_PAREN instruction_modifier .)
    USING           reduce using rule 29 (instruction -> LEFT_PAREN instruction RIGHT_PAREN instruction_modifier .)
    BY              reduce using rule 29 (instruction -> LEFT_PAREN instruction RIGHT_PAREN instruction_modifier .)
    DONE            reduce using rule 29 (instruction -> LEFT_PAREN instruction RIGHT_PAREN instruction_modifier .)
    SORRY           reduce using rule 29 (instruction -> LEFT_PAREN instruction RIGHT_PAREN instruction_modifier .)
    SUBGOAL         reduce using rule 29 (instruction -> LEFT_PAREN instruction RIGHT_PAREN instruction_modifier .)


state 384

    (34) single_instruction -> LEFT_PAREN ID method_args RIGHT_PAREN .
    (35) single_instruction -> LEFT_PAREN ID method_args RIGHT_PAREN . instruction_modifier
    (30) instruction_modifier -> . PLUS
    (31) instruction_modifier -> . QUESTION_MARK

  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for QUESTION_MARK resolved as shift
    SEMICOLON       reduce using rule 34 (single_instruction -> LEFT_PAREN ID method_args RIGHT_PAREN .)
    COMMA           reduce using rule 34 (single_instruction -> LEFT_PAREN ID method_args RIGHT_PAREN .)
    AXIOMATIZATION  reduce using rule 34 (single_instruction -> LEFT_PAREN ID method_args RIGHT_PAREN .)
    FUN             reduce using rule 34 (single_instruction -> LEFT_PAREN ID method_args RIGHT_PAREN .)
    FUNCTION        reduce using rule 34 (single_instruction -> LEFT_PAREN ID method_args RIGHT_PAREN .)
    LEMMA           reduce using rule 34 (single_instruction -> LEFT_PAREN ID method_args RIGHT_PAREN .)
    LOCALE          reduce using rule 34 (single_instruction -> LEFT_PAREN ID method_args RIGHT_PAREN .)
    METHOD          reduce using rule 34 (single_instruction -> LEFT_PAREN ID method_args RIGHT_PAREN .)
    SECTION         reduce using rule 34 (single_instruction -> LEFT_PAREN ID method_args RIGHT_PAREN .)
    TEXT            reduce using rule 34 (single_instruction -> LEFT_PAREN ID method_args RIGHT_PAREN .)
    TYPE_SYNONYM    reduce using rule 34 (single_instruction -> LEFT_PAREN ID method_args RIGHT_PAREN .)
    TYPEDECL        reduce using rule 34 (single_instruction -> LEFT_PAREN ID method_args RIGHT_PAREN .)
    END             reduce using rule 34 (single_instruction -> LEFT_PAREN ID method_args RIGHT_PAREN .)
    RIGHT_PAREN     reduce using rule 34 (single_instruction -> LEFT_PAREN ID method_args RIGHT_PAREN .)
    APPLY           reduce using rule 34 (single_instruction -> LEFT_PAREN ID method_args RIGHT_PAREN .)
    USING           reduce using rule 34 (single_instruction -> LEFT_PAREN ID method_args RIGHT_PAREN .)
    BY              reduce using rule 34 (single_instruction -> LEFT_PAREN ID method_args RIGHT_PAREN .)
    DONE            reduce using rule 34 (single_instruction -> LEFT_PAREN ID method_args RIGHT_PAREN .)
    SORRY           reduce using rule 34 (single_instruction -> LEFT_PAREN ID method_args RIGHT_PAREN .)
    SUBGOAL         reduce using rule 34 (single_instruction -> LEFT_PAREN ID method_args RIGHT_PAREN .)
    PLUS            shift and go to state 250
    QUESTION_MARK   shift and go to state 251

  ! PLUS            [ reduce using rule 34 (single_instruction -> LEFT_PAREN ID method_args RIGHT_PAREN .) ]
  ! QUESTION_MARK   [ reduce using rule 34 (single_instruction -> LEFT_PAREN ID method_args RIGHT_PAREN .) ]

    instruction_modifier           shift and go to state 404

state 385

    (39) method_arg -> ID .
    (40) method_arg -> ID . LEFT_PAREN NAT RIGHT_PAREN
    (41) method_arg -> ID . DOT ID
    (42) method_arg -> ID . DOT ID LEFT_PAREN NAT RIGHT_PAREN

    ID              reduce using rule 39 (method_arg -> ID .)
    QUOTED_STRING   reduce using rule 39 (method_arg -> ID .)
    SEMICOLON       reduce using rule 39 (method_arg -> ID .)
    COMMA           reduce using rule 39 (method_arg -> ID .)
    PLUS            reduce using rule 39 (method_arg -> ID .)
    QUESTION_MARK   reduce using rule 39 (method_arg -> ID .)
    AXIOMATIZATION  reduce using rule 39 (method_arg -> ID .)
    FUN             reduce using rule 39 (method_arg -> ID .)
    FUNCTION        reduce using rule 39 (method_arg -> ID .)
    LEMMA           reduce using rule 39 (method_arg -> ID .)
    LOCALE          reduce using rule 39 (method_arg -> ID .)
    METHOD          reduce using rule 39 (method_arg -> ID .)
    SECTION         reduce using rule 39 (method_arg -> ID .)
    TEXT            reduce using rule 39 (method_arg -> ID .)
    TYPE_SYNONYM    reduce using rule 39 (method_arg -> ID .)
    TYPEDECL        reduce using rule 39 (method_arg -> ID .)
    END             reduce using rule 39 (method_arg -> ID .)
    RIGHT_PAREN     reduce using rule 39 (method_arg -> ID .)
    APPLY           reduce using rule 39 (method_arg -> ID .)
    USING           reduce using rule 39 (method_arg -> ID .)
    BY              reduce using rule 39 (method_arg -> ID .)
    DONE            reduce using rule 39 (method_arg -> ID .)
    SORRY           reduce using rule 39 (method_arg -> ID .)
    SUBGOAL         reduce using rule 39 (method_arg -> ID .)
    LEFT_PAREN      shift and go to state 337
    DOT             shift and go to state 338


state 386

    (36) method_args -> ID COLON method_arg . method_args
    (36) method_args -> . ID COLON method_arg method_args
    (37) method_args -> . method_arg method_args
    (38) method_args -> . empty
    (39) method_arg -> . ID
    (40) method_arg -> . ID LEFT_PAREN NAT RIGHT_PAREN
    (41) method_arg -> . ID DOT ID
    (42) method_arg -> . ID DOT ID LEFT_PAREN NAT RIGHT_PAREN
    (43) method_arg -> . QUOTED_STRING
    (253) empty -> .

    ID              shift and go to state 254
    QUOTED_STRING   shift and go to state 258
    SEMICOLON       reduce using rule 253 (empty -> .)
    COMMA           reduce using rule 253 (empty -> .)
    PLUS            reduce using rule 253 (empty -> .)
    QUESTION_MARK   reduce using rule 253 (empty -> .)
    AXIOMATIZATION  reduce using rule 253 (empty -> .)
    FUN             reduce using rule 253 (empty -> .)
    FUNCTION        reduce using rule 253 (empty -> .)
    LEMMA           reduce using rule 253 (empty -> .)
    LOCALE          reduce using rule 253 (empty -> .)
    METHOD          reduce using rule 253 (empty -> .)
    SECTION         reduce using rule 253 (empty -> .)
    TEXT            reduce using rule 253 (empty -> .)
    TYPE_SYNONYM    reduce using rule 253 (empty -> .)
    TYPEDECL        reduce using rule 253 (empty -> .)
    END             reduce using rule 253 (empty -> .)
    RIGHT_PAREN     reduce using rule 253 (empty -> .)
    APPLY           reduce using rule 253 (empty -> .)
    USING           reduce using rule 253 (empty -> .)
    BY              reduce using rule 253 (empty -> .)
    DONE            reduce using rule 253 (empty -> .)
    SORRY           reduce using rule 253 (empty -> .)
    SUBGOAL         reduce using rule 253 (empty -> .)

    method_arg                     shift and go to state 256
    method_args                    shift and go to state 405
    empty                          shift and go to state 257

state 387

    (40) method_arg -> ID LEFT_PAREN NAT . RIGHT_PAREN

    RIGHT_PAREN     shift and go to state 406


state 388

    (41) method_arg -> ID DOT ID .
    (42) method_arg -> ID DOT ID . LEFT_PAREN NAT RIGHT_PAREN

    ID              reduce using rule 41 (method_arg -> ID DOT ID .)
    QUOTED_STRING   reduce using rule 41 (method_arg -> ID DOT ID .)
    SEMICOLON       reduce using rule 41 (method_arg -> ID DOT ID .)
    COMMA           reduce using rule 41 (method_arg -> ID DOT ID .)
    PLUS            reduce using rule 41 (method_arg -> ID DOT ID .)
    QUESTION_MARK   reduce using rule 41 (method_arg -> ID DOT ID .)
    AXIOMATIZATION  reduce using rule 41 (method_arg -> ID DOT ID .)
    FUN             reduce using rule 41 (method_arg -> ID DOT ID .)
    FUNCTION        reduce using rule 41 (method_arg -> ID DOT ID .)
    LEMMA           reduce using rule 41 (method_arg -> ID DOT ID .)
    LOCALE          reduce using rule 41 (method_arg -> ID DOT ID .)
    METHOD          reduce using rule 41 (method_arg -> ID DOT ID .)
    SECTION         reduce using rule 41 (method_arg -> ID DOT ID .)
    TEXT            reduce using rule 41 (method_arg -> ID DOT ID .)
    TYPE_SYNONYM    reduce using rule 41 (method_arg -> ID DOT ID .)
    TYPEDECL        reduce using rule 41 (method_arg -> ID DOT ID .)
    END             reduce using rule 41 (method_arg -> ID DOT ID .)
    RIGHT_PAREN     reduce using rule 41 (method_arg -> ID DOT ID .)
    APPLY           reduce using rule 41 (method_arg -> ID DOT ID .)
    USING           reduce using rule 41 (method_arg -> ID DOT ID .)
    BY              reduce using rule 41 (method_arg -> ID DOT ID .)
    DONE            reduce using rule 41 (method_arg -> ID DOT ID .)
    SORRY           reduce using rule 41 (method_arg -> ID DOT ID .)
    SUBGOAL         reduce using rule 41 (method_arg -> ID DOT ID .)
    LEFT_PAREN      shift and go to state 407


state 389

    (228) nat_list -> NAT COMMA nat_list .

    RIGHT_BRACKET   reduce using rule 228 (nat_list -> NAT COMMA nat_list .)


state 390

    (58) single_apply -> APPLY LEFT_PAREN instruction . RIGHT_PAREN
    (28) instruction -> LEFT_PAREN instruction . RIGHT_PAREN
    (29) instruction -> LEFT_PAREN instruction . RIGHT_PAREN instruction_modifier

    RIGHT_PAREN     shift and go to state 408


state 391

    (59) single_apply -> USING using_block APPLY . DASH
    (60) single_apply -> USING using_block APPLY . instruction
    (61) single_apply -> USING using_block APPLY . LEFT_PAREN instruction RIGHT_PAREN
    (23) instruction -> . single_instruction
    (24) instruction -> . single_instruction instruction_modifier
    (25) instruction -> . single_instruction instruction_modifier COMMA instruction
    (26) instruction -> . single_instruction SEMICOLON instruction
    (27) instruction -> . single_instruction COMMA instruction
    (28) instruction -> . LEFT_PAREN instruction RIGHT_PAREN
    (29) instruction -> . LEFT_PAREN instruction RIGHT_PAREN instruction_modifier
    (32) single_instruction -> . ID
    (33) single_instruction -> . ID method_args
    (34) single_instruction -> . LEFT_PAREN ID method_args RIGHT_PAREN
    (35) single_instruction -> . LEFT_PAREN ID method_args RIGHT_PAREN instruction_modifier

    DASH            shift and go to state 409
    LEFT_PAREN      shift and go to state 411
    ID              shift and go to state 161

    instruction                    shift and go to state 410
    single_instruction             shift and go to state 159

state 392

    (64) single_apply -> USING using_block BY . instruction
    (65) single_apply -> USING using_block BY . LEFT_PAREN instruction RIGHT_PAREN
    (23) instruction -> . single_instruction
    (24) instruction -> . single_instruction instruction_modifier
    (25) instruction -> . single_instruction instruction_modifier COMMA instruction
    (26) instruction -> . single_instruction SEMICOLON instruction
    (27) instruction -> . single_instruction COMMA instruction
    (28) instruction -> . LEFT_PAREN instruction RIGHT_PAREN
    (29) instruction -> . LEFT_PAREN instruction RIGHT_PAREN instruction_modifier
    (32) single_instruction -> . ID
    (33) single_instruction -> . ID method_args
    (34) single_instruction -> . LEFT_PAREN ID method_args RIGHT_PAREN
    (35) single_instruction -> . LEFT_PAREN ID method_args RIGHT_PAREN instruction_modifier

    LEFT_PAREN      shift and go to state 413
    ID              shift and go to state 161

    instruction                    shift and go to state 412
    single_instruction             shift and go to state 159

state 393

    (68) using_block -> ASSMS using_block .

    APPLY           reduce using rule 68 (using_block -> ASSMS using_block .)
    BY              reduce using rule 68 (using_block -> ASSMS using_block .)


state 394

    (69) using_block -> ASSMS LEFT_PAREN . NAT RIGHT_PAREN using_block
    (70) using_block -> ASSMS LEFT_PAREN . NAT COMMA NAT RIGHT_PAREN using_block
    (71) using_block -> ASSMS LEFT_PAREN . NAT DASH NAT RIGHT_PAREN using_block

    NAT             shift and go to state 414


state 395

    (63) single_apply -> BY LEFT_PAREN instruction . RIGHT_PAREN
    (28) instruction -> LEFT_PAREN instruction . RIGHT_PAREN
    (29) instruction -> LEFT_PAREN instruction . RIGHT_PAREN instruction_modifier

    RIGHT_PAREN     shift and go to state 415


state 396

    (75) subgoal -> SUBGOAL QUOTED_STRING apply_block .

    APPLY           reduce using rule 75 (subgoal -> SUBGOAL QUOTED_STRING apply_block .)
    USING           reduce using rule 75 (subgoal -> SUBGOAL QUOTED_STRING apply_block .)
    BY              reduce using rule 75 (subgoal -> SUBGOAL QUOTED_STRING apply_block .)
    DONE            reduce using rule 75 (subgoal -> SUBGOAL QUOTED_STRING apply_block .)
    SORRY           reduce using rule 75 (subgoal -> SUBGOAL QUOTED_STRING apply_block .)
    SUBGOAL         reduce using rule 75 (subgoal -> SUBGOAL QUOTED_STRING apply_block .)
    AXIOMATIZATION  reduce using rule 75 (subgoal -> SUBGOAL QUOTED_STRING apply_block .)
    FUN             reduce using rule 75 (subgoal -> SUBGOAL QUOTED_STRING apply_block .)
    FUNCTION        reduce using rule 75 (subgoal -> SUBGOAL QUOTED_STRING apply_block .)
    LEMMA           reduce using rule 75 (subgoal -> SUBGOAL QUOTED_STRING apply_block .)
    LOCALE          reduce using rule 75 (subgoal -> SUBGOAL QUOTED_STRING apply_block .)
    METHOD          reduce using rule 75 (subgoal -> SUBGOAL QUOTED_STRING apply_block .)
    SECTION         reduce using rule 75 (subgoal -> SUBGOAL QUOTED_STRING apply_block .)
    TEXT            reduce using rule 75 (subgoal -> SUBGOAL QUOTED_STRING apply_block .)
    TYPE_SYNONYM    reduce using rule 75 (subgoal -> SUBGOAL QUOTED_STRING apply_block .)
    TYPEDECL        reduce using rule 75 (subgoal -> SUBGOAL QUOTED_STRING apply_block .)
    END             reduce using rule 75 (subgoal -> SUBGOAL QUOTED_STRING apply_block .)


state 397

    (170) name_insts_list -> ID EQUALS ID .
    (172) name_insts_list -> ID EQUALS ID . name_insts_list
    (170) name_insts_list -> . ID EQUALS ID
    (171) name_insts_list -> . ID EQUALS QUOTED_STRING
    (172) name_insts_list -> . ID EQUALS ID name_insts_list
    (173) name_insts_list -> . ID EQUALS QUOTED_STRING name_insts_list

    PLUS            reduce using rule 170 (name_insts_list -> ID EQUALS ID .)
    FOR             reduce using rule 170 (name_insts_list -> ID EQUALS ID .)
    OPENING         reduce using rule 170 (name_insts_list -> ID EQUALS ID .)
    BEGIN           reduce using rule 170 (name_insts_list -> ID EQUALS ID .)
    AXIOMATIZATION  reduce using rule 170 (name_insts_list -> ID EQUALS ID .)
    FUN             reduce using rule 170 (name_insts_list -> ID EQUALS ID .)
    FUNCTION        reduce using rule 170 (name_insts_list -> ID EQUALS ID .)
    LEMMA           reduce using rule 170 (name_insts_list -> ID EQUALS ID .)
    LOCALE          reduce using rule 170 (name_insts_list -> ID EQUALS ID .)
    METHOD          reduce using rule 170 (name_insts_list -> ID EQUALS ID .)
    SECTION         reduce using rule 170 (name_insts_list -> ID EQUALS ID .)
    TEXT            reduce using rule 170 (name_insts_list -> ID EQUALS ID .)
    TYPE_SYNONYM    reduce using rule 170 (name_insts_list -> ID EQUALS ID .)
    TYPEDECL        reduce using rule 170 (name_insts_list -> ID EQUALS ID .)
    END             reduce using rule 170 (name_insts_list -> ID EQUALS ID .)
    ID              shift and go to state 309

    name_insts_list                shift and go to state 416

state 398

    (171) name_insts_list -> ID EQUALS QUOTED_STRING .
    (173) name_insts_list -> ID EQUALS QUOTED_STRING . name_insts_list
    (170) name_insts_list -> . ID EQUALS ID
    (171) name_insts_list -> . ID EQUALS QUOTED_STRING
    (172) name_insts_list -> . ID EQUALS ID name_insts_list
    (173) name_insts_list -> . ID EQUALS QUOTED_STRING name_insts_list

    PLUS            reduce using rule 171 (name_insts_list -> ID EQUALS QUOTED_STRING .)
    FOR             reduce using rule 171 (name_insts_list -> ID EQUALS QUOTED_STRING .)
    OPENING         reduce using rule 171 (name_insts_list -> ID EQUALS QUOTED_STRING .)
    BEGIN           reduce using rule 171 (name_insts_list -> ID EQUALS QUOTED_STRING .)
    AXIOMATIZATION  reduce using rule 171 (name_insts_list -> ID EQUALS QUOTED_STRING .)
    FUN             reduce using rule 171 (name_insts_list -> ID EQUALS QUOTED_STRING .)
    FUNCTION        reduce using rule 171 (name_insts_list -> ID EQUALS QUOTED_STRING .)
    LEMMA           reduce using rule 171 (name_insts_list -> ID EQUALS QUOTED_STRING .)
    LOCALE          reduce using rule 171 (name_insts_list -> ID EQUALS QUOTED_STRING .)
    METHOD          reduce using rule 171 (name_insts_list -> ID EQUALS QUOTED_STRING .)
    SECTION         reduce using rule 171 (name_insts_list -> ID EQUALS QUOTED_STRING .)
    TEXT            reduce using rule 171 (name_insts_list -> ID EQUALS QUOTED_STRING .)
    TYPE_SYNONYM    reduce using rule 171 (name_insts_list -> ID EQUALS QUOTED_STRING .)
    TYPEDECL        reduce using rule 171 (name_insts_list -> ID EQUALS QUOTED_STRING .)
    END             reduce using rule 171 (name_insts_list -> ID EQUALS QUOTED_STRING .)
    ID              shift and go to state 309

    name_insts_list                shift and go to state 417

state 399

    (193) name_type_list -> ID COLON COLON ID .
    (194) name_type_list -> ID COLON COLON ID . AND name_type_list

    FIXES           reduce using rule 193 (name_type_list -> ID COLON COLON ID .)
    CONSTRAINS      reduce using rule 193 (name_type_list -> ID COLON COLON ID .)
    ASSUMES         reduce using rule 193 (name_type_list -> ID COLON COLON ID .)
    DEFINES         reduce using rule 193 (name_type_list -> ID COLON COLON ID .)
    NOTES           reduce using rule 193 (name_type_list -> ID COLON COLON ID .)
    BEGIN           reduce using rule 193 (name_type_list -> ID COLON COLON ID .)
    OPENING         reduce using rule 193 (name_type_list -> ID COLON COLON ID .)
    AXIOMATIZATION  reduce using rule 193 (name_type_list -> ID COLON COLON ID .)
    FUN             reduce using rule 193 (name_type_list -> ID COLON COLON ID .)
    FUNCTION        reduce using rule 193 (name_type_list -> ID COLON COLON ID .)
    LEMMA           reduce using rule 193 (name_type_list -> ID COLON COLON ID .)
    LOCALE          reduce using rule 193 (name_type_list -> ID COLON COLON ID .)
    METHOD          reduce using rule 193 (name_type_list -> ID COLON COLON ID .)
    SECTION         reduce using rule 193 (name_type_list -> ID COLON COLON ID .)
    TEXT            reduce using rule 193 (name_type_list -> ID COLON COLON ID .)
    TYPE_SYNONYM    reduce using rule 193 (name_type_list -> ID COLON COLON ID .)
    TYPEDECL        reduce using rule 193 (name_type_list -> ID COLON COLON ID .)
    END             reduce using rule 193 (name_type_list -> ID COLON COLON ID .)
    AND             shift and go to state 418


state 400

    (101) prop_pat -> LEFT_PAREN prop_pat_terms RIGHT_PAREN .

    AND             reduce using rule 101 (prop_pat -> LEFT_PAREN prop_pat_terms RIGHT_PAREN .)
    FIXES           reduce using rule 101 (prop_pat -> LEFT_PAREN prop_pat_terms RIGHT_PAREN .)
    CONSTRAINS      reduce using rule 101 (prop_pat -> LEFT_PAREN prop_pat_terms RIGHT_PAREN .)
    ASSUMES         reduce using rule 101 (prop_pat -> LEFT_PAREN prop_pat_terms RIGHT_PAREN .)
    DEFINES         reduce using rule 101 (prop_pat -> LEFT_PAREN prop_pat_terms RIGHT_PAREN .)
    NOTES           reduce using rule 101 (prop_pat -> LEFT_PAREN prop_pat_terms RIGHT_PAREN .)
    BEGIN           reduce using rule 101 (prop_pat -> LEFT_PAREN prop_pat_terms RIGHT_PAREN .)
    OPENING         reduce using rule 101 (prop_pat -> LEFT_PAREN prop_pat_terms RIGHT_PAREN .)
    AXIOMATIZATION  reduce using rule 101 (prop_pat -> LEFT_PAREN prop_pat_terms RIGHT_PAREN .)
    FUN             reduce using rule 101 (prop_pat -> LEFT_PAREN prop_pat_terms RIGHT_PAREN .)
    FUNCTION        reduce using rule 101 (prop_pat -> LEFT_PAREN prop_pat_terms RIGHT_PAREN .)
    LEMMA           reduce using rule 101 (prop_pat -> LEFT_PAREN prop_pat_terms RIGHT_PAREN .)
    LOCALE          reduce using rule 101 (prop_pat -> LEFT_PAREN prop_pat_terms RIGHT_PAREN .)
    METHOD          reduce using rule 101 (prop_pat -> LEFT_PAREN prop_pat_terms RIGHT_PAREN .)
    SECTION         reduce using rule 101 (prop_pat -> LEFT_PAREN prop_pat_terms RIGHT_PAREN .)
    TEXT            reduce using rule 101 (prop_pat -> LEFT_PAREN prop_pat_terms RIGHT_PAREN .)
    TYPE_SYNONYM    reduce using rule 101 (prop_pat -> LEFT_PAREN prop_pat_terms RIGHT_PAREN .)
    TYPEDECL        reduce using rule 101 (prop_pat -> LEFT_PAREN prop_pat_terms RIGHT_PAREN .)
    END             reduce using rule 101 (prop_pat -> LEFT_PAREN prop_pat_terms RIGHT_PAREN .)


state 401

    (103) prop_pat_terms -> prop_pat_term prop_pat_terms .

    RIGHT_PAREN     reduce using rule 103 (prop_pat_terms -> prop_pat_term prop_pat_terms .)


state 402

    (104) prop_pat_term -> IS ID .

    IS              reduce using rule 104 (prop_pat_term -> IS ID .)
    RIGHT_PAREN     reduce using rule 104 (prop_pat_term -> IS ID .)


state 403

    (105) prop_pat_term -> IS QUOTED_STRING .

    IS              reduce using rule 105 (prop_pat_term -> IS QUOTED_STRING .)
    RIGHT_PAREN     reduce using rule 105 (prop_pat_term -> IS QUOTED_STRING .)


state 404

    (35) single_instruction -> LEFT_PAREN ID method_args RIGHT_PAREN instruction_modifier .

    SEMICOLON       reduce using rule 35 (single_instruction -> LEFT_PAREN ID method_args RIGHT_PAREN instruction_modifier .)
    COMMA           reduce using rule 35 (single_instruction -> LEFT_PAREN ID method_args RIGHT_PAREN instruction_modifier .)
    PLUS            reduce using rule 35 (single_instruction -> LEFT_PAREN ID method_args RIGHT_PAREN instruction_modifier .)
    QUESTION_MARK   reduce using rule 35 (single_instruction -> LEFT_PAREN ID method_args RIGHT_PAREN instruction_modifier .)
    AXIOMATIZATION  reduce using rule 35 (single_instruction -> LEFT_PAREN ID method_args RIGHT_PAREN instruction_modifier .)
    FUN             reduce using rule 35 (single_instruction -> LEFT_PAREN ID method_args RIGHT_PAREN instruction_modifier .)
    FUNCTION        reduce using rule 35 (single_instruction -> LEFT_PAREN ID method_args RIGHT_PAREN instruction_modifier .)
    LEMMA           reduce using rule 35 (single_instruction -> LEFT_PAREN ID method_args RIGHT_PAREN instruction_modifier .)
    LOCALE          reduce using rule 35 (single_instruction -> LEFT_PAREN ID method_args RIGHT_PAREN instruction_modifier .)
    METHOD          reduce using rule 35 (single_instruction -> LEFT_PAREN ID method_args RIGHT_PAREN instruction_modifier .)
    SECTION         reduce using rule 35 (single_instruction -> LEFT_PAREN ID method_args RIGHT_PAREN instruction_modifier .)
    TEXT            reduce using rule 35 (single_instruction -> LEFT_PAREN ID method_args RIGHT_PAREN instruction_modifier .)
    TYPE_SYNONYM    reduce using rule 35 (single_instruction -> LEFT_PAREN ID method_args RIGHT_PAREN instruction_modifier .)
    TYPEDECL        reduce using rule 35 (single_instruction -> LEFT_PAREN ID method_args RIGHT_PAREN instruction_modifier .)
    END             reduce using rule 35 (single_instruction -> LEFT_PAREN ID method_args RIGHT_PAREN instruction_modifier .)
    RIGHT_PAREN     reduce using rule 35 (single_instruction -> LEFT_PAREN ID method_args RIGHT_PAREN instruction_modifier .)
    APPLY           reduce using rule 35 (single_instruction -> LEFT_PAREN ID method_args RIGHT_PAREN instruction_modifier .)
    USING           reduce using rule 35 (single_instruction -> LEFT_PAREN ID method_args RIGHT_PAREN instruction_modifier .)
    BY              reduce using rule 35 (single_instruction -> LEFT_PAREN ID method_args RIGHT_PAREN instruction_modifier .)
    DONE            reduce using rule 35 (single_instruction -> LEFT_PAREN ID method_args RIGHT_PAREN instruction_modifier .)
    SORRY           reduce using rule 35 (single_instruction -> LEFT_PAREN ID method_args RIGHT_PAREN instruction_modifier .)
    SUBGOAL         reduce using rule 35 (single_instruction -> LEFT_PAREN ID method_args RIGHT_PAREN instruction_modifier .)


state 405

    (36) method_args -> ID COLON method_arg method_args .

    SEMICOLON       reduce using rule 36 (method_args -> ID COLON method_arg method_args .)
    COMMA           reduce using rule 36 (method_args -> ID COLON method_arg method_args .)
    PLUS            reduce using rule 36 (method_args -> ID COLON method_arg method_args .)
    QUESTION_MARK   reduce using rule 36 (method_args -> ID COLON method_arg method_args .)
    AXIOMATIZATION  reduce using rule 36 (method_args -> ID COLON method_arg method_args .)
    FUN             reduce using rule 36 (method_args -> ID COLON method_arg method_args .)
    FUNCTION        reduce using rule 36 (method_args -> ID COLON method_arg method_args .)
    LEMMA           reduce using rule 36 (method_args -> ID COLON method_arg method_args .)
    LOCALE          reduce using rule 36 (method_args -> ID COLON method_arg method_args .)
    METHOD          reduce using rule 36 (method_args -> ID COLON method_arg method_args .)
    SECTION         reduce using rule 36 (method_args -> ID COLON method_arg method_args .)
    TEXT            reduce using rule 36 (method_args -> ID COLON method_arg method_args .)
    TYPE_SYNONYM    reduce using rule 36 (method_args -> ID COLON method_arg method_args .)
    TYPEDECL        reduce using rule 36 (method_args -> ID COLON method_arg method_args .)
    END             reduce using rule 36 (method_args -> ID COLON method_arg method_args .)
    RIGHT_PAREN     reduce using rule 36 (method_args -> ID COLON method_arg method_args .)
    APPLY           reduce using rule 36 (method_args -> ID COLON method_arg method_args .)
    USING           reduce using rule 36 (method_args -> ID COLON method_arg method_args .)
    BY              reduce using rule 36 (method_args -> ID COLON method_arg method_args .)
    DONE            reduce using rule 36 (method_args -> ID COLON method_arg method_args .)
    SORRY           reduce using rule 36 (method_args -> ID COLON method_arg method_args .)
    SUBGOAL         reduce using rule 36 (method_args -> ID COLON method_arg method_args .)


state 406

    (40) method_arg -> ID LEFT_PAREN NAT RIGHT_PAREN .

    ID              reduce using rule 40 (method_arg -> ID LEFT_PAREN NAT RIGHT_PAREN .)
    QUOTED_STRING   reduce using rule 40 (method_arg -> ID LEFT_PAREN NAT RIGHT_PAREN .)
    SEMICOLON       reduce using rule 40 (method_arg -> ID LEFT_PAREN NAT RIGHT_PAREN .)
    COMMA           reduce using rule 40 (method_arg -> ID LEFT_PAREN NAT RIGHT_PAREN .)
    PLUS            reduce using rule 40 (method_arg -> ID LEFT_PAREN NAT RIGHT_PAREN .)
    QUESTION_MARK   reduce using rule 40 (method_arg -> ID LEFT_PAREN NAT RIGHT_PAREN .)
    AXIOMATIZATION  reduce using rule 40 (method_arg -> ID LEFT_PAREN NAT RIGHT_PAREN .)
    FUN             reduce using rule 40 (method_arg -> ID LEFT_PAREN NAT RIGHT_PAREN .)
    FUNCTION        reduce using rule 40 (method_arg -> ID LEFT_PAREN NAT RIGHT_PAREN .)
    LEMMA           reduce using rule 40 (method_arg -> ID LEFT_PAREN NAT RIGHT_PAREN .)
    LOCALE          reduce using rule 40 (method_arg -> ID LEFT_PAREN NAT RIGHT_PAREN .)
    METHOD          reduce using rule 40 (method_arg -> ID LEFT_PAREN NAT RIGHT_PAREN .)
    SECTION         reduce using rule 40 (method_arg -> ID LEFT_PAREN NAT RIGHT_PAREN .)
    TEXT            reduce using rule 40 (method_arg -> ID LEFT_PAREN NAT RIGHT_PAREN .)
    TYPE_SYNONYM    reduce using rule 40 (method_arg -> ID LEFT_PAREN NAT RIGHT_PAREN .)
    TYPEDECL        reduce using rule 40 (method_arg -> ID LEFT_PAREN NAT RIGHT_PAREN .)
    END             reduce using rule 40 (method_arg -> ID LEFT_PAREN NAT RIGHT_PAREN .)
    RIGHT_PAREN     reduce using rule 40 (method_arg -> ID LEFT_PAREN NAT RIGHT_PAREN .)
    APPLY           reduce using rule 40 (method_arg -> ID LEFT_PAREN NAT RIGHT_PAREN .)
    USING           reduce using rule 40 (method_arg -> ID LEFT_PAREN NAT RIGHT_PAREN .)
    BY              reduce using rule 40 (method_arg -> ID LEFT_PAREN NAT RIGHT_PAREN .)
    DONE            reduce using rule 40 (method_arg -> ID LEFT_PAREN NAT RIGHT_PAREN .)
    SORRY           reduce using rule 40 (method_arg -> ID LEFT_PAREN NAT RIGHT_PAREN .)
    SUBGOAL         reduce using rule 40 (method_arg -> ID LEFT_PAREN NAT RIGHT_PAREN .)


state 407

    (42) method_arg -> ID DOT ID LEFT_PAREN . NAT RIGHT_PAREN

    NAT             shift and go to state 419


state 408

    (58) single_apply -> APPLY LEFT_PAREN instruction RIGHT_PAREN .
    (28) instruction -> LEFT_PAREN instruction RIGHT_PAREN .
    (29) instruction -> LEFT_PAREN instruction RIGHT_PAREN . instruction_modifier
    (30) instruction_modifier -> . PLUS
    (31) instruction_modifier -> . QUESTION_MARK

  ! reduce/reduce conflict for APPLY resolved using rule 28 (instruction -> LEFT_PAREN instruction RIGHT_PAREN .)
  ! reduce/reduce conflict for USING resolved using rule 28 (instruction -> LEFT_PAREN instruction RIGHT_PAREN .)
  ! reduce/reduce conflict for BY resolved using rule 28 (instruction -> LEFT_PAREN instruction RIGHT_PAREN .)
  ! reduce/reduce conflict for DONE resolved using rule 28 (instruction -> LEFT_PAREN instruction RIGHT_PAREN .)
  ! reduce/reduce conflict for SORRY resolved using rule 28 (instruction -> LEFT_PAREN instruction RIGHT_PAREN .)
  ! reduce/reduce conflict for SUBGOAL resolved using rule 28 (instruction -> LEFT_PAREN instruction RIGHT_PAREN .)
  ! reduce/reduce conflict for AXIOMATIZATION resolved using rule 28 (instruction -> LEFT_PAREN instruction RIGHT_PAREN .)
  ! reduce/reduce conflict for FUN resolved using rule 28 (instruction -> LEFT_PAREN instruction RIGHT_PAREN .)
  ! reduce/reduce conflict for FUNCTION resolved using rule 28 (instruction -> LEFT_PAREN instruction RIGHT_PAREN .)
  ! reduce/reduce conflict for LEMMA resolved using rule 28 (instruction -> LEFT_PAREN instruction RIGHT_PAREN .)
  ! reduce/reduce conflict for LOCALE resolved using rule 28 (instruction -> LEFT_PAREN instruction RIGHT_PAREN .)
  ! reduce/reduce conflict for METHOD resolved using rule 28 (instruction -> LEFT_PAREN instruction RIGHT_PAREN .)
  ! reduce/reduce conflict for SECTION resolved using rule 28 (instruction -> LEFT_PAREN instruction RIGHT_PAREN .)
  ! reduce/reduce conflict for TEXT resolved using rule 28 (instruction -> LEFT_PAREN instruction RIGHT_PAREN .)
  ! reduce/reduce conflict for TYPE_SYNONYM resolved using rule 28 (instruction -> LEFT_PAREN instruction RIGHT_PAREN .)
  ! reduce/reduce conflict for TYPEDECL resolved using rule 28 (instruction -> LEFT_PAREN instruction RIGHT_PAREN .)
  ! reduce/reduce conflict for END resolved using rule 28 (instruction -> LEFT_PAREN instruction RIGHT_PAREN .)
    APPLY           reduce using rule 28 (instruction -> LEFT_PAREN instruction RIGHT_PAREN .)
    USING           reduce using rule 28 (instruction -> LEFT_PAREN instruction RIGHT_PAREN .)
    BY              reduce using rule 28 (instruction -> LEFT_PAREN instruction RIGHT_PAREN .)
    DONE            reduce using rule 28 (instruction -> LEFT_PAREN instruction RIGHT_PAREN .)
    SORRY           reduce using rule 28 (instruction -> LEFT_PAREN instruction RIGHT_PAREN .)
    SUBGOAL         reduce using rule 28 (instruction -> LEFT_PAREN instruction RIGHT_PAREN .)
    AXIOMATIZATION  reduce using rule 28 (instruction -> LEFT_PAREN instruction RIGHT_PAREN .)
    FUN             reduce using rule 28 (instruction -> LEFT_PAREN instruction RIGHT_PAREN .)
    FUNCTION        reduce using rule 28 (instruction -> LEFT_PAREN instruction RIGHT_PAREN .)
    LEMMA           reduce using rule 28 (instruction -> LEFT_PAREN instruction RIGHT_PAREN .)
    LOCALE          reduce using rule 28 (instruction -> LEFT_PAREN instruction RIGHT_PAREN .)
    METHOD          reduce using rule 28 (instruction -> LEFT_PAREN instruction RIGHT_PAREN .)
    SECTION         reduce using rule 28 (instruction -> LEFT_PAREN instruction RIGHT_PAREN .)
    TEXT            reduce using rule 28 (instruction -> LEFT_PAREN instruction RIGHT_PAREN .)
    TYPE_SYNONYM    reduce using rule 28 (instruction -> LEFT_PAREN instruction RIGHT_PAREN .)
    TYPEDECL        reduce using rule 28 (instruction -> LEFT_PAREN instruction RIGHT_PAREN .)
    END             reduce using rule 28 (instruction -> LEFT_PAREN instruction RIGHT_PAREN .)
    PLUS            shift and go to state 250
    QUESTION_MARK   shift and go to state 251

  ! APPLY           [ reduce using rule 58 (single_apply -> APPLY LEFT_PAREN instruction RIGHT_PAREN .) ]
  ! USING           [ reduce using rule 58 (single_apply -> APPLY LEFT_PAREN instruction RIGHT_PAREN .) ]
  ! BY              [ reduce using rule 58 (single_apply -> APPLY LEFT_PAREN instruction RIGHT_PAREN .) ]
  ! DONE            [ reduce using rule 58 (single_apply -> APPLY LEFT_PAREN instruction RIGHT_PAREN .) ]
  ! SORRY           [ reduce using rule 58 (single_apply -> APPLY LEFT_PAREN instruction RIGHT_PAREN .) ]
  ! SUBGOAL         [ reduce using rule 58 (single_apply -> APPLY LEFT_PAREN instruction RIGHT_PAREN .) ]
  ! AXIOMATIZATION  [ reduce using rule 58 (single_apply -> APPLY LEFT_PAREN instruction RIGHT_PAREN .) ]
  ! FUN             [ reduce using rule 58 (single_apply -> APPLY LEFT_PAREN instruction RIGHT_PAREN .) ]
  ! FUNCTION        [ reduce using rule 58 (single_apply -> APPLY LEFT_PAREN instruction RIGHT_PAREN .) ]
  ! LEMMA           [ reduce using rule 58 (single_apply -> APPLY LEFT_PAREN instruction RIGHT_PAREN .) ]
  ! LOCALE          [ reduce using rule 58 (single_apply -> APPLY LEFT_PAREN instruction RIGHT_PAREN .) ]
  ! METHOD          [ reduce using rule 58 (single_apply -> APPLY LEFT_PAREN instruction RIGHT_PAREN .) ]
  ! SECTION         [ reduce using rule 58 (single_apply -> APPLY LEFT_PAREN instruction RIGHT_PAREN .) ]
  ! TEXT            [ reduce using rule 58 (single_apply -> APPLY LEFT_PAREN instruction RIGHT_PAREN .) ]
  ! TYPE_SYNONYM    [ reduce using rule 58 (single_apply -> APPLY LEFT_PAREN instruction RIGHT_PAREN .) ]
  ! TYPEDECL        [ reduce using rule 58 (single_apply -> APPLY LEFT_PAREN instruction RIGHT_PAREN .) ]
  ! END             [ reduce using rule 58 (single_apply -> APPLY LEFT_PAREN instruction RIGHT_PAREN .) ]

    instruction_modifier           shift and go to state 383

state 409

    (59) single_apply -> USING using_block APPLY DASH .

    APPLY           reduce using rule 59 (single_apply -> USING using_block APPLY DASH .)
    USING           reduce using rule 59 (single_apply -> USING using_block APPLY DASH .)
    BY              reduce using rule 59 (single_apply -> USING using_block APPLY DASH .)
    DONE            reduce using rule 59 (single_apply -> USING using_block APPLY DASH .)
    SORRY           reduce using rule 59 (single_apply -> USING using_block APPLY DASH .)
    SUBGOAL         reduce using rule 59 (single_apply -> USING using_block APPLY DASH .)
    AXIOMATIZATION  reduce using rule 59 (single_apply -> USING using_block APPLY DASH .)
    FUN             reduce using rule 59 (single_apply -> USING using_block APPLY DASH .)
    FUNCTION        reduce using rule 59 (single_apply -> USING using_block APPLY DASH .)
    LEMMA           reduce using rule 59 (single_apply -> USING using_block APPLY DASH .)
    LOCALE          reduce using rule 59 (single_apply -> USING using_block APPLY DASH .)
    METHOD          reduce using rule 59 (single_apply -> USING using_block APPLY DASH .)
    SECTION         reduce using rule 59 (single_apply -> USING using_block APPLY DASH .)
    TEXT            reduce using rule 59 (single_apply -> USING using_block APPLY DASH .)
    TYPE_SYNONYM    reduce using rule 59 (single_apply -> USING using_block APPLY DASH .)
    TYPEDECL        reduce using rule 59 (single_apply -> USING using_block APPLY DASH .)
    END             reduce using rule 59 (single_apply -> USING using_block APPLY DASH .)


state 410

    (60) single_apply -> USING using_block APPLY instruction .

    APPLY           reduce using rule 60 (single_apply -> USING using_block APPLY instruction .)
    USING           reduce using rule 60 (single_apply -> USING using_block APPLY instruction .)
    BY              reduce using rule 60 (single_apply -> USING using_block APPLY instruction .)
    DONE            reduce using rule 60 (single_apply -> USING using_block APPLY instruction .)
    SORRY           reduce using rule 60 (single_apply -> USING using_block APPLY instruction .)
    SUBGOAL         reduce using rule 60 (single_apply -> USING using_block APPLY instruction .)
    AXIOMATIZATION  reduce using rule 60 (single_apply -> USING using_block APPLY instruction .)
    FUN             reduce using rule 60 (single_apply -> USING using_block APPLY instruction .)
    FUNCTION        reduce using rule 60 (single_apply -> USING using_block APPLY instruction .)
    LEMMA           reduce using rule 60 (single_apply -> USING using_block APPLY instruction .)
    LOCALE          reduce using rule 60 (single_apply -> USING using_block APPLY instruction .)
    METHOD          reduce using rule 60 (single_apply -> USING using_block APPLY instruction .)
    SECTION         reduce using rule 60 (single_apply -> USING using_block APPLY instruction .)
    TEXT            reduce using rule 60 (single_apply -> USING using_block APPLY instruction .)
    TYPE_SYNONYM    reduce using rule 60 (single_apply -> USING using_block APPLY instruction .)
    TYPEDECL        reduce using rule 60 (single_apply -> USING using_block APPLY instruction .)
    END             reduce using rule 60 (single_apply -> USING using_block APPLY instruction .)


state 411

    (61) single_apply -> USING using_block APPLY LEFT_PAREN . instruction RIGHT_PAREN
    (28) instruction -> LEFT_PAREN . instruction RIGHT_PAREN
    (29) instruction -> LEFT_PAREN . instruction RIGHT_PAREN instruction_modifier
    (34) single_instruction -> LEFT_PAREN . ID method_args RIGHT_PAREN
    (35) single_instruction -> LEFT_PAREN . ID method_args RIGHT_PAREN instruction_modifier
    (23) instruction -> . single_instruction
    (24) instruction -> . single_instruction instruction_modifier
    (25) instruction -> . single_instruction instruction_modifier COMMA instruction
    (26) instruction -> . single_instruction SEMICOLON instruction
    (27) instruction -> . single_instruction COMMA instruction
    (28) instruction -> . LEFT_PAREN instruction RIGHT_PAREN
    (29) instruction -> . LEFT_PAREN instruction RIGHT_PAREN instruction_modifier
    (32) single_instruction -> . ID
    (33) single_instruction -> . ID method_args
    (34) single_instruction -> . LEFT_PAREN ID method_args RIGHT_PAREN
    (35) single_instruction -> . LEFT_PAREN ID method_args RIGHT_PAREN instruction_modifier

    ID              shift and go to state 253
    LEFT_PAREN      shift and go to state 160

    instruction                    shift and go to state 420
    single_instruction             shift and go to state 159

state 412

    (64) single_apply -> USING using_block BY instruction .

    APPLY           reduce using rule 64 (single_apply -> USING using_block BY instruction .)
    USING           reduce using rule 64 (single_apply -> USING using_block BY instruction .)
    BY              reduce using rule 64 (single_apply -> USING using_block BY instruction .)
    DONE            reduce using rule 64 (single_apply -> USING using_block BY instruction .)
    SORRY           reduce using rule 64 (single_apply -> USING using_block BY instruction .)
    SUBGOAL         reduce using rule 64 (single_apply -> USING using_block BY instruction .)
    AXIOMATIZATION  reduce using rule 64 (single_apply -> USING using_block BY instruction .)
    FUN             reduce using rule 64 (single_apply -> USING using_block BY instruction .)
    FUNCTION        reduce using rule 64 (single_apply -> USING using_block BY instruction .)
    LEMMA           reduce using rule 64 (single_apply -> USING using_block BY instruction .)
    LOCALE          reduce using rule 64 (single_apply -> USING using_block BY instruction .)
    METHOD          reduce using rule 64 (single_apply -> USING using_block BY instruction .)
    SECTION         reduce using rule 64 (single_apply -> USING using_block BY instruction .)
    TEXT            reduce using rule 64 (single_apply -> USING using_block BY instruction .)
    TYPE_SYNONYM    reduce using rule 64 (single_apply -> USING using_block BY instruction .)
    TYPEDECL        reduce using rule 64 (single_apply -> USING using_block BY instruction .)
    END             reduce using rule 64 (single_apply -> USING using_block BY instruction .)


state 413

    (65) single_apply -> USING using_block BY LEFT_PAREN . instruction RIGHT_PAREN
    (28) instruction -> LEFT_PAREN . instruction RIGHT_PAREN
    (29) instruction -> LEFT_PAREN . instruction RIGHT_PAREN instruction_modifier
    (34) single_instruction -> LEFT_PAREN . ID method_args RIGHT_PAREN
    (35) single_instruction -> LEFT_PAREN . ID method_args RIGHT_PAREN instruction_modifier
    (23) instruction -> . single_instruction
    (24) instruction -> . single_instruction instruction_modifier
    (25) instruction -> . single_instruction instruction_modifier COMMA instruction
    (26) instruction -> . single_instruction SEMICOLON instruction
    (27) instruction -> . single_instruction COMMA instruction
    (28) instruction -> . LEFT_PAREN instruction RIGHT_PAREN
    (29) instruction -> . LEFT_PAREN instruction RIGHT_PAREN instruction_modifier
    (32) single_instruction -> . ID
    (33) single_instruction -> . ID method_args
    (34) single_instruction -> . LEFT_PAREN ID method_args RIGHT_PAREN
    (35) single_instruction -> . LEFT_PAREN ID method_args RIGHT_PAREN instruction_modifier

    ID              shift and go to state 253
    LEFT_PAREN      shift and go to state 160

    instruction                    shift and go to state 421
    single_instruction             shift and go to state 159

state 414

    (69) using_block -> ASSMS LEFT_PAREN NAT . RIGHT_PAREN using_block
    (70) using_block -> ASSMS LEFT_PAREN NAT . COMMA NAT RIGHT_PAREN using_block
    (71) using_block -> ASSMS LEFT_PAREN NAT . DASH NAT RIGHT_PAREN using_block

    RIGHT_PAREN     shift and go to state 422
    COMMA           shift and go to state 423
    DASH            shift and go to state 424


state 415

    (63) single_apply -> BY LEFT_PAREN instruction RIGHT_PAREN .
    (28) instruction -> LEFT_PAREN instruction RIGHT_PAREN .
    (29) instruction -> LEFT_PAREN instruction RIGHT_PAREN . instruction_modifier
    (30) instruction_modifier -> . PLUS
    (31) instruction_modifier -> . QUESTION_MARK

  ! reduce/reduce conflict for APPLY resolved using rule 28 (instruction -> LEFT_PAREN instruction RIGHT_PAREN .)
  ! reduce/reduce conflict for USING resolved using rule 28 (instruction -> LEFT_PAREN instruction RIGHT_PAREN .)
  ! reduce/reduce conflict for BY resolved using rule 28 (instruction -> LEFT_PAREN instruction RIGHT_PAREN .)
  ! reduce/reduce conflict for DONE resolved using rule 28 (instruction -> LEFT_PAREN instruction RIGHT_PAREN .)
  ! reduce/reduce conflict for SORRY resolved using rule 28 (instruction -> LEFT_PAREN instruction RIGHT_PAREN .)
  ! reduce/reduce conflict for SUBGOAL resolved using rule 28 (instruction -> LEFT_PAREN instruction RIGHT_PAREN .)
  ! reduce/reduce conflict for AXIOMATIZATION resolved using rule 28 (instruction -> LEFT_PAREN instruction RIGHT_PAREN .)
  ! reduce/reduce conflict for FUN resolved using rule 28 (instruction -> LEFT_PAREN instruction RIGHT_PAREN .)
  ! reduce/reduce conflict for FUNCTION resolved using rule 28 (instruction -> LEFT_PAREN instruction RIGHT_PAREN .)
  ! reduce/reduce conflict for LEMMA resolved using rule 28 (instruction -> LEFT_PAREN instruction RIGHT_PAREN .)
  ! reduce/reduce conflict for LOCALE resolved using rule 28 (instruction -> LEFT_PAREN instruction RIGHT_PAREN .)
  ! reduce/reduce conflict for METHOD resolved using rule 28 (instruction -> LEFT_PAREN instruction RIGHT_PAREN .)
  ! reduce/reduce conflict for SECTION resolved using rule 28 (instruction -> LEFT_PAREN instruction RIGHT_PAREN .)
  ! reduce/reduce conflict for TEXT resolved using rule 28 (instruction -> LEFT_PAREN instruction RIGHT_PAREN .)
  ! reduce/reduce conflict for TYPE_SYNONYM resolved using rule 28 (instruction -> LEFT_PAREN instruction RIGHT_PAREN .)
  ! reduce/reduce conflict for TYPEDECL resolved using rule 28 (instruction -> LEFT_PAREN instruction RIGHT_PAREN .)
  ! reduce/reduce conflict for END resolved using rule 28 (instruction -> LEFT_PAREN instruction RIGHT_PAREN .)
    APPLY           reduce using rule 28 (instruction -> LEFT_PAREN instruction RIGHT_PAREN .)
    USING           reduce using rule 28 (instruction -> LEFT_PAREN instruction RIGHT_PAREN .)
    BY              reduce using rule 28 (instruction -> LEFT_PAREN instruction RIGHT_PAREN .)
    DONE            reduce using rule 28 (instruction -> LEFT_PAREN instruction RIGHT_PAREN .)
    SORRY           reduce using rule 28 (instruction -> LEFT_PAREN instruction RIGHT_PAREN .)
    SUBGOAL         reduce using rule 28 (instruction -> LEFT_PAREN instruction RIGHT_PAREN .)
    AXIOMATIZATION  reduce using rule 28 (instruction -> LEFT_PAREN instruction RIGHT_PAREN .)
    FUN             reduce using rule 28 (instruction -> LEFT_PAREN instruction RIGHT_PAREN .)
    FUNCTION        reduce using rule 28 (instruction -> LEFT_PAREN instruction RIGHT_PAREN .)
    LEMMA           reduce using rule 28 (instruction -> LEFT_PAREN instruction RIGHT_PAREN .)
    LOCALE          reduce using rule 28 (instruction -> LEFT_PAREN instruction RIGHT_PAREN .)
    METHOD          reduce using rule 28 (instruction -> LEFT_PAREN instruction RIGHT_PAREN .)
    SECTION         reduce using rule 28 (instruction -> LEFT_PAREN instruction RIGHT_PAREN .)
    TEXT            reduce using rule 28 (instruction -> LEFT_PAREN instruction RIGHT_PAREN .)
    TYPE_SYNONYM    reduce using rule 28 (instruction -> LEFT_PAREN instruction RIGHT_PAREN .)
    TYPEDECL        reduce using rule 28 (instruction -> LEFT_PAREN instruction RIGHT_PAREN .)
    END             reduce using rule 28 (instruction -> LEFT_PAREN instruction RIGHT_PAREN .)
    PLUS            shift and go to state 250
    QUESTION_MARK   shift and go to state 251

  ! APPLY           [ reduce using rule 63 (single_apply -> BY LEFT_PAREN instruction RIGHT_PAREN .) ]
  ! USING           [ reduce using rule 63 (single_apply -> BY LEFT_PAREN instruction RIGHT_PAREN .) ]
  ! BY              [ reduce using rule 63 (single_apply -> BY LEFT_PAREN instruction RIGHT_PAREN .) ]
  ! DONE            [ reduce using rule 63 (single_apply -> BY LEFT_PAREN instruction RIGHT_PAREN .) ]
  ! SORRY           [ reduce using rule 63 (single_apply -> BY LEFT_PAREN instruction RIGHT_PAREN .) ]
  ! SUBGOAL         [ reduce using rule 63 (single_apply -> BY LEFT_PAREN instruction RIGHT_PAREN .) ]
  ! AXIOMATIZATION  [ reduce using rule 63 (single_apply -> BY LEFT_PAREN instruction RIGHT_PAREN .) ]
  ! FUN             [ reduce using rule 63 (single_apply -> BY LEFT_PAREN instruction RIGHT_PAREN .) ]
  ! FUNCTION        [ reduce using rule 63 (single_apply -> BY LEFT_PAREN instruction RIGHT_PAREN .) ]
  ! LEMMA           [ reduce using rule 63 (single_apply -> BY LEFT_PAREN instruction RIGHT_PAREN .) ]
  ! LOCALE          [ reduce using rule 63 (single_apply -> BY LEFT_PAREN instruction RIGHT_PAREN .) ]
  ! METHOD          [ reduce using rule 63 (single_apply -> BY LEFT_PAREN instruction RIGHT_PAREN .) ]
  ! SECTION         [ reduce using rule 63 (single_apply -> BY LEFT_PAREN instruction RIGHT_PAREN .) ]
  ! TEXT            [ reduce using rule 63 (single_apply -> BY LEFT_PAREN instruction RIGHT_PAREN .) ]
  ! TYPE_SYNONYM    [ reduce using rule 63 (single_apply -> BY LEFT_PAREN instruction RIGHT_PAREN .) ]
  ! TYPEDECL        [ reduce using rule 63 (single_apply -> BY LEFT_PAREN instruction RIGHT_PAREN .) ]
  ! END             [ reduce using rule 63 (single_apply -> BY LEFT_PAREN instruction RIGHT_PAREN .) ]

    instruction_modifier           shift and go to state 383

state 416

    (172) name_insts_list -> ID EQUALS ID name_insts_list .

    PLUS            reduce using rule 172 (name_insts_list -> ID EQUALS ID name_insts_list .)
    FOR             reduce using rule 172 (name_insts_list -> ID EQUALS ID name_insts_list .)
    OPENING         reduce using rule 172 (name_insts_list -> ID EQUALS ID name_insts_list .)
    BEGIN           reduce using rule 172 (name_insts_list -> ID EQUALS ID name_insts_list .)
    AXIOMATIZATION  reduce using rule 172 (name_insts_list -> ID EQUALS ID name_insts_list .)
    FUN             reduce using rule 172 (name_insts_list -> ID EQUALS ID name_insts_list .)
    FUNCTION        reduce using rule 172 (name_insts_list -> ID EQUALS ID name_insts_list .)
    LEMMA           reduce using rule 172 (name_insts_list -> ID EQUALS ID name_insts_list .)
    LOCALE          reduce using rule 172 (name_insts_list -> ID EQUALS ID name_insts_list .)
    METHOD          reduce using rule 172 (name_insts_list -> ID EQUALS ID name_insts_list .)
    SECTION         reduce using rule 172 (name_insts_list -> ID EQUALS ID name_insts_list .)
    TEXT            reduce using rule 172 (name_insts_list -> ID EQUALS ID name_insts_list .)
    TYPE_SYNONYM    reduce using rule 172 (name_insts_list -> ID EQUALS ID name_insts_list .)
    TYPEDECL        reduce using rule 172 (name_insts_list -> ID EQUALS ID name_insts_list .)
    END             reduce using rule 172 (name_insts_list -> ID EQUALS ID name_insts_list .)


state 417

    (173) name_insts_list -> ID EQUALS QUOTED_STRING name_insts_list .

    PLUS            reduce using rule 173 (name_insts_list -> ID EQUALS QUOTED_STRING name_insts_list .)
    FOR             reduce using rule 173 (name_insts_list -> ID EQUALS QUOTED_STRING name_insts_list .)
    OPENING         reduce using rule 173 (name_insts_list -> ID EQUALS QUOTED_STRING name_insts_list .)
    BEGIN           reduce using rule 173 (name_insts_list -> ID EQUALS QUOTED_STRING name_insts_list .)
    AXIOMATIZATION  reduce using rule 173 (name_insts_list -> ID EQUALS QUOTED_STRING name_insts_list .)
    FUN             reduce using rule 173 (name_insts_list -> ID EQUALS QUOTED_STRING name_insts_list .)
    FUNCTION        reduce using rule 173 (name_insts_list -> ID EQUALS QUOTED_STRING name_insts_list .)
    LEMMA           reduce using rule 173 (name_insts_list -> ID EQUALS QUOTED_STRING name_insts_list .)
    LOCALE          reduce using rule 173 (name_insts_list -> ID EQUALS QUOTED_STRING name_insts_list .)
    METHOD          reduce using rule 173 (name_insts_list -> ID EQUALS QUOTED_STRING name_insts_list .)
    SECTION         reduce using rule 173 (name_insts_list -> ID EQUALS QUOTED_STRING name_insts_list .)
    TEXT            reduce using rule 173 (name_insts_list -> ID EQUALS QUOTED_STRING name_insts_list .)
    TYPE_SYNONYM    reduce using rule 173 (name_insts_list -> ID EQUALS QUOTED_STRING name_insts_list .)
    TYPEDECL        reduce using rule 173 (name_insts_list -> ID EQUALS QUOTED_STRING name_insts_list .)
    END             reduce using rule 173 (name_insts_list -> ID EQUALS QUOTED_STRING name_insts_list .)


state 418

    (194) name_type_list -> ID COLON COLON ID AND . name_type_list
    (193) name_type_list -> . ID COLON COLON ID
    (194) name_type_list -> . ID COLON COLON ID AND name_type_list

    ID              shift and go to state 229

    name_type_list                 shift and go to state 425

state 419

    (42) method_arg -> ID DOT ID LEFT_PAREN NAT . RIGHT_PAREN

    RIGHT_PAREN     shift and go to state 426


state 420

    (61) single_apply -> USING using_block APPLY LEFT_PAREN instruction . RIGHT_PAREN
    (28) instruction -> LEFT_PAREN instruction . RIGHT_PAREN
    (29) instruction -> LEFT_PAREN instruction . RIGHT_PAREN instruction_modifier

    RIGHT_PAREN     shift and go to state 427


state 421

    (65) single_apply -> USING using_block BY LEFT_PAREN instruction . RIGHT_PAREN
    (28) instruction -> LEFT_PAREN instruction . RIGHT_PAREN
    (29) instruction -> LEFT_PAREN instruction . RIGHT_PAREN instruction_modifier

    RIGHT_PAREN     shift and go to state 428


state 422

    (69) using_block -> ASSMS LEFT_PAREN NAT RIGHT_PAREN . using_block
    (68) using_block -> . ASSMS using_block
    (69) using_block -> . ASSMS LEFT_PAREN NAT RIGHT_PAREN using_block
    (70) using_block -> . ASSMS LEFT_PAREN NAT COMMA NAT RIGHT_PAREN using_block
    (71) using_block -> . ASSMS LEFT_PAREN NAT DASH NAT RIGHT_PAREN using_block
    (72) using_block -> . empty
    (253) empty -> .

    ASSMS           shift and go to state 360
    APPLY           reduce using rule 253 (empty -> .)
    BY              reduce using rule 253 (empty -> .)

    using_block                    shift and go to state 429
    empty                          shift and go to state 361

state 423

    (70) using_block -> ASSMS LEFT_PAREN NAT COMMA . NAT RIGHT_PAREN using_block

    NAT             shift and go to state 430


state 424

    (71) using_block -> ASSMS LEFT_PAREN NAT DASH . NAT RIGHT_PAREN using_block

    NAT             shift and go to state 431


state 425

    (194) name_type_list -> ID COLON COLON ID AND name_type_list .

    FIXES           reduce using rule 194 (name_type_list -> ID COLON COLON ID AND name_type_list .)
    CONSTRAINS      reduce using rule 194 (name_type_list -> ID COLON COLON ID AND name_type_list .)
    ASSUMES         reduce using rule 194 (name_type_list -> ID COLON COLON ID AND name_type_list .)
    DEFINES         reduce using rule 194 (name_type_list -> ID COLON COLON ID AND name_type_list .)
    NOTES           reduce using rule 194 (name_type_list -> ID COLON COLON ID AND name_type_list .)
    BEGIN           reduce using rule 194 (name_type_list -> ID COLON COLON ID AND name_type_list .)
    OPENING         reduce using rule 194 (name_type_list -> ID COLON COLON ID AND name_type_list .)
    AXIOMATIZATION  reduce using rule 194 (name_type_list -> ID COLON COLON ID AND name_type_list .)
    FUN             reduce using rule 194 (name_type_list -> ID COLON COLON ID AND name_type_list .)
    FUNCTION        reduce using rule 194 (name_type_list -> ID COLON COLON ID AND name_type_list .)
    LEMMA           reduce using rule 194 (name_type_list -> ID COLON COLON ID AND name_type_list .)
    LOCALE          reduce using rule 194 (name_type_list -> ID COLON COLON ID AND name_type_list .)
    METHOD          reduce using rule 194 (name_type_list -> ID COLON COLON ID AND name_type_list .)
    SECTION         reduce using rule 194 (name_type_list -> ID COLON COLON ID AND name_type_list .)
    TEXT            reduce using rule 194 (name_type_list -> ID COLON COLON ID AND name_type_list .)
    TYPE_SYNONYM    reduce using rule 194 (name_type_list -> ID COLON COLON ID AND name_type_list .)
    TYPEDECL        reduce using rule 194 (name_type_list -> ID COLON COLON ID AND name_type_list .)
    END             reduce using rule 194 (name_type_list -> ID COLON COLON ID AND name_type_list .)


state 426

    (42) method_arg -> ID DOT ID LEFT_PAREN NAT RIGHT_PAREN .

    ID              reduce using rule 42 (method_arg -> ID DOT ID LEFT_PAREN NAT RIGHT_PAREN .)
    QUOTED_STRING   reduce using rule 42 (method_arg -> ID DOT ID LEFT_PAREN NAT RIGHT_PAREN .)
    SEMICOLON       reduce using rule 42 (method_arg -> ID DOT ID LEFT_PAREN NAT RIGHT_PAREN .)
    COMMA           reduce using rule 42 (method_arg -> ID DOT ID LEFT_PAREN NAT RIGHT_PAREN .)
    PLUS            reduce using rule 42 (method_arg -> ID DOT ID LEFT_PAREN NAT RIGHT_PAREN .)
    QUESTION_MARK   reduce using rule 42 (method_arg -> ID DOT ID LEFT_PAREN NAT RIGHT_PAREN .)
    AXIOMATIZATION  reduce using rule 42 (method_arg -> ID DOT ID LEFT_PAREN NAT RIGHT_PAREN .)
    FUN             reduce using rule 42 (method_arg -> ID DOT ID LEFT_PAREN NAT RIGHT_PAREN .)
    FUNCTION        reduce using rule 42 (method_arg -> ID DOT ID LEFT_PAREN NAT RIGHT_PAREN .)
    LEMMA           reduce using rule 42 (method_arg -> ID DOT ID LEFT_PAREN NAT RIGHT_PAREN .)
    LOCALE          reduce using rule 42 (method_arg -> ID DOT ID LEFT_PAREN NAT RIGHT_PAREN .)
    METHOD          reduce using rule 42 (method_arg -> ID DOT ID LEFT_PAREN NAT RIGHT_PAREN .)
    SECTION         reduce using rule 42 (method_arg -> ID DOT ID LEFT_PAREN NAT RIGHT_PAREN .)
    TEXT            reduce using rule 42 (method_arg -> ID DOT ID LEFT_PAREN NAT RIGHT_PAREN .)
    TYPE_SYNONYM    reduce using rule 42 (method_arg -> ID DOT ID LEFT_PAREN NAT RIGHT_PAREN .)
    TYPEDECL        reduce using rule 42 (method_arg -> ID DOT ID LEFT_PAREN NAT RIGHT_PAREN .)
    END             reduce using rule 42 (method_arg -> ID DOT ID LEFT_PAREN NAT RIGHT_PAREN .)
    RIGHT_PAREN     reduce using rule 42 (method_arg -> ID DOT ID LEFT_PAREN NAT RIGHT_PAREN .)
    APPLY           reduce using rule 42 (method_arg -> ID DOT ID LEFT_PAREN NAT RIGHT_PAREN .)
    USING           reduce using rule 42 (method_arg -> ID DOT ID LEFT_PAREN NAT RIGHT_PAREN .)
    BY              reduce using rule 42 (method_arg -> ID DOT ID LEFT_PAREN NAT RIGHT_PAREN .)
    DONE            reduce using rule 42 (method_arg -> ID DOT ID LEFT_PAREN NAT RIGHT_PAREN .)
    SORRY           reduce using rule 42 (method_arg -> ID DOT ID LEFT_PAREN NAT RIGHT_PAREN .)
    SUBGOAL         reduce using rule 42 (method_arg -> ID DOT ID LEFT_PAREN NAT RIGHT_PAREN .)


state 427

    (61) single_apply -> USING using_block APPLY LEFT_PAREN instruction RIGHT_PAREN .
    (28) instruction -> LEFT_PAREN instruction RIGHT_PAREN .
    (29) instruction -> LEFT_PAREN instruction RIGHT_PAREN . instruction_modifier
    (30) instruction_modifier -> . PLUS
    (31) instruction_modifier -> . QUESTION_MARK

  ! reduce/reduce conflict for APPLY resolved using rule 28 (instruction -> LEFT_PAREN instruction RIGHT_PAREN .)
  ! reduce/reduce conflict for USING resolved using rule 28 (instruction -> LEFT_PAREN instruction RIGHT_PAREN .)
  ! reduce/reduce conflict for BY resolved using rule 28 (instruction -> LEFT_PAREN instruction RIGHT_PAREN .)
  ! reduce/reduce conflict for DONE resolved using rule 28 (instruction -> LEFT_PAREN instruction RIGHT_PAREN .)
  ! reduce/reduce conflict for SORRY resolved using rule 28 (instruction -> LEFT_PAREN instruction RIGHT_PAREN .)
  ! reduce/reduce conflict for SUBGOAL resolved using rule 28 (instruction -> LEFT_PAREN instruction RIGHT_PAREN .)
  ! reduce/reduce conflict for AXIOMATIZATION resolved using rule 28 (instruction -> LEFT_PAREN instruction RIGHT_PAREN .)
  ! reduce/reduce conflict for FUN resolved using rule 28 (instruction -> LEFT_PAREN instruction RIGHT_PAREN .)
  ! reduce/reduce conflict for FUNCTION resolved using rule 28 (instruction -> LEFT_PAREN instruction RIGHT_PAREN .)
  ! reduce/reduce conflict for LEMMA resolved using rule 28 (instruction -> LEFT_PAREN instruction RIGHT_PAREN .)
  ! reduce/reduce conflict for LOCALE resolved using rule 28 (instruction -> LEFT_PAREN instruction RIGHT_PAREN .)
  ! reduce/reduce conflict for METHOD resolved using rule 28 (instruction -> LEFT_PAREN instruction RIGHT_PAREN .)
  ! reduce/reduce conflict for SECTION resolved using rule 28 (instruction -> LEFT_PAREN instruction RIGHT_PAREN .)
  ! reduce/reduce conflict for TEXT resolved using rule 28 (instruction -> LEFT_PAREN instruction RIGHT_PAREN .)
  ! reduce/reduce conflict for TYPE_SYNONYM resolved using rule 28 (instruction -> LEFT_PAREN instruction RIGHT_PAREN .)
  ! reduce/reduce conflict for TYPEDECL resolved using rule 28 (instruction -> LEFT_PAREN instruction RIGHT_PAREN .)
  ! reduce/reduce conflict for END resolved using rule 28 (instruction -> LEFT_PAREN instruction RIGHT_PAREN .)
    APPLY           reduce using rule 28 (instruction -> LEFT_PAREN instruction RIGHT_PAREN .)
    USING           reduce using rule 28 (instruction -> LEFT_PAREN instruction RIGHT_PAREN .)
    BY              reduce using rule 28 (instruction -> LEFT_PAREN instruction RIGHT_PAREN .)
    DONE            reduce using rule 28 (instruction -> LEFT_PAREN instruction RIGHT_PAREN .)
    SORRY           reduce using rule 28 (instruction -> LEFT_PAREN instruction RIGHT_PAREN .)
    SUBGOAL         reduce using rule 28 (instruction -> LEFT_PAREN instruction RIGHT_PAREN .)
    AXIOMATIZATION  reduce using rule 28 (instruction -> LEFT_PAREN instruction RIGHT_PAREN .)
    FUN             reduce using rule 28 (instruction -> LEFT_PAREN instruction RIGHT_PAREN .)
    FUNCTION        reduce using rule 28 (instruction -> LEFT_PAREN instruction RIGHT_PAREN .)
    LEMMA           reduce using rule 28 (instruction -> LEFT_PAREN instruction RIGHT_PAREN .)
    LOCALE          reduce using rule 28 (instruction -> LEFT_PAREN instruction RIGHT_PAREN .)
    METHOD          reduce using rule 28 (instruction -> LEFT_PAREN instruction RIGHT_PAREN .)
    SECTION         reduce using rule 28 (instruction -> LEFT_PAREN instruction RIGHT_PAREN .)
    TEXT            reduce using rule 28 (instruction -> LEFT_PAREN instruction RIGHT_PAREN .)
    TYPE_SYNONYM    reduce using rule 28 (instruction -> LEFT_PAREN instruction RIGHT_PAREN .)
    TYPEDECL        reduce using rule 28 (instruction -> LEFT_PAREN instruction RIGHT_PAREN .)
    END             reduce using rule 28 (instruction -> LEFT_PAREN instruction RIGHT_PAREN .)
    PLUS            shift and go to state 250
    QUESTION_MARK   shift and go to state 251

  ! APPLY           [ reduce using rule 61 (single_apply -> USING using_block APPLY LEFT_PAREN instruction RIGHT_PAREN .) ]
  ! USING           [ reduce using rule 61 (single_apply -> USING using_block APPLY LEFT_PAREN instruction RIGHT_PAREN .) ]
  ! BY              [ reduce using rule 61 (single_apply -> USING using_block APPLY LEFT_PAREN instruction RIGHT_PAREN .) ]
  ! DONE            [ reduce using rule 61 (single_apply -> USING using_block APPLY LEFT_PAREN instruction RIGHT_PAREN .) ]
  ! SORRY           [ reduce using rule 61 (single_apply -> USING using_block APPLY LEFT_PAREN instruction RIGHT_PAREN .) ]
  ! SUBGOAL         [ reduce using rule 61 (single_apply -> USING using_block APPLY LEFT_PAREN instruction RIGHT_PAREN .) ]
  ! AXIOMATIZATION  [ reduce using rule 61 (single_apply -> USING using_block APPLY LEFT_PAREN instruction RIGHT_PAREN .) ]
  ! FUN             [ reduce using rule 61 (single_apply -> USING using_block APPLY LEFT_PAREN instruction RIGHT_PAREN .) ]
  ! FUNCTION        [ reduce using rule 61 (single_apply -> USING using_block APPLY LEFT_PAREN instruction RIGHT_PAREN .) ]
  ! LEMMA           [ reduce using rule 61 (single_apply -> USING using_block APPLY LEFT_PAREN instruction RIGHT_PAREN .) ]
  ! LOCALE          [ reduce using rule 61 (single_apply -> USING using_block APPLY LEFT_PAREN instruction RIGHT_PAREN .) ]
  ! METHOD          [ reduce using rule 61 (single_apply -> USING using_block APPLY LEFT_PAREN instruction RIGHT_PAREN .) ]
  ! SECTION         [ reduce using rule 61 (single_apply -> USING using_block APPLY LEFT_PAREN instruction RIGHT_PAREN .) ]
  ! TEXT            [ reduce using rule 61 (single_apply -> USING using_block APPLY LEFT_PAREN instruction RIGHT_PAREN .) ]
  ! TYPE_SYNONYM    [ reduce using rule 61 (single_apply -> USING using_block APPLY LEFT_PAREN instruction RIGHT_PAREN .) ]
  ! TYPEDECL        [ reduce using rule 61 (single_apply -> USING using_block APPLY LEFT_PAREN instruction RIGHT_PAREN .) ]
  ! END             [ reduce using rule 61 (single_apply -> USING using_block APPLY LEFT_PAREN instruction RIGHT_PAREN .) ]

    instruction_modifier           shift and go to state 383

state 428

    (65) single_apply -> USING using_block BY LEFT_PAREN instruction RIGHT_PAREN .
    (28) instruction -> LEFT_PAREN instruction RIGHT_PAREN .
    (29) instruction -> LEFT_PAREN instruction RIGHT_PAREN . instruction_modifier
    (30) instruction_modifier -> . PLUS
    (31) instruction_modifier -> . QUESTION_MARK

  ! reduce/reduce conflict for APPLY resolved using rule 28 (instruction -> LEFT_PAREN instruction RIGHT_PAREN .)
  ! reduce/reduce conflict for USING resolved using rule 28 (instruction -> LEFT_PAREN instruction RIGHT_PAREN .)
  ! reduce/reduce conflict for BY resolved using rule 28 (instruction -> LEFT_PAREN instruction RIGHT_PAREN .)
  ! reduce/reduce conflict for DONE resolved using rule 28 (instruction -> LEFT_PAREN instruction RIGHT_PAREN .)
  ! reduce/reduce conflict for SORRY resolved using rule 28 (instruction -> LEFT_PAREN instruction RIGHT_PAREN .)
  ! reduce/reduce conflict for SUBGOAL resolved using rule 28 (instruction -> LEFT_PAREN instruction RIGHT_PAREN .)
  ! reduce/reduce conflict for AXIOMATIZATION resolved using rule 28 (instruction -> LEFT_PAREN instruction RIGHT_PAREN .)
  ! reduce/reduce conflict for FUN resolved using rule 28 (instruction -> LEFT_PAREN instruction RIGHT_PAREN .)
  ! reduce/reduce conflict for FUNCTION resolved using rule 28 (instruction -> LEFT_PAREN instruction RIGHT_PAREN .)
  ! reduce/reduce conflict for LEMMA resolved using rule 28 (instruction -> LEFT_PAREN instruction RIGHT_PAREN .)
  ! reduce/reduce conflict for LOCALE resolved using rule 28 (instruction -> LEFT_PAREN instruction RIGHT_PAREN .)
  ! reduce/reduce conflict for METHOD resolved using rule 28 (instruction -> LEFT_PAREN instruction RIGHT_PAREN .)
  ! reduce/reduce conflict for SECTION resolved using rule 28 (instruction -> LEFT_PAREN instruction RIGHT_PAREN .)
  ! reduce/reduce conflict for TEXT resolved using rule 28 (instruction -> LEFT_PAREN instruction RIGHT_PAREN .)
  ! reduce/reduce conflict for TYPE_SYNONYM resolved using rule 28 (instruction -> LEFT_PAREN instruction RIGHT_PAREN .)
  ! reduce/reduce conflict for TYPEDECL resolved using rule 28 (instruction -> LEFT_PAREN instruction RIGHT_PAREN .)
  ! reduce/reduce conflict for END resolved using rule 28 (instruction -> LEFT_PAREN instruction RIGHT_PAREN .)
    APPLY           reduce using rule 28 (instruction -> LEFT_PAREN instruction RIGHT_PAREN .)
    USING           reduce using rule 28 (instruction -> LEFT_PAREN instruction RIGHT_PAREN .)
    BY              reduce using rule 28 (instruction -> LEFT_PAREN instruction RIGHT_PAREN .)
    DONE            reduce using rule 28 (instruction -> LEFT_PAREN instruction RIGHT_PAREN .)
    SORRY           reduce using rule 28 (instruction -> LEFT_PAREN instruction RIGHT_PAREN .)
    SUBGOAL         reduce using rule 28 (instruction -> LEFT_PAREN instruction RIGHT_PAREN .)
    AXIOMATIZATION  reduce using rule 28 (instruction -> LEFT_PAREN instruction RIGHT_PAREN .)
    FUN             reduce using rule 28 (instruction -> LEFT_PAREN instruction RIGHT_PAREN .)
    FUNCTION        reduce using rule 28 (instruction -> LEFT_PAREN instruction RIGHT_PAREN .)
    LEMMA           reduce using rule 28 (instruction -> LEFT_PAREN instruction RIGHT_PAREN .)
    LOCALE          reduce using rule 28 (instruction -> LEFT_PAREN instruction RIGHT_PAREN .)
    METHOD          reduce using rule 28 (instruction -> LEFT_PAREN instruction RIGHT_PAREN .)
    SECTION         reduce using rule 28 (instruction -> LEFT_PAREN instruction RIGHT_PAREN .)
    TEXT            reduce using rule 28 (instruction -> LEFT_PAREN instruction RIGHT_PAREN .)
    TYPE_SYNONYM    reduce using rule 28 (instruction -> LEFT_PAREN instruction RIGHT_PAREN .)
    TYPEDECL        reduce using rule 28 (instruction -> LEFT_PAREN instruction RIGHT_PAREN .)
    END             reduce using rule 28 (instruction -> LEFT_PAREN instruction RIGHT_PAREN .)
    PLUS            shift and go to state 250
    QUESTION_MARK   shift and go to state 251

  ! APPLY           [ reduce using rule 65 (single_apply -> USING using_block BY LEFT_PAREN instruction RIGHT_PAREN .) ]
  ! USING           [ reduce using rule 65 (single_apply -> USING using_block BY LEFT_PAREN instruction RIGHT_PAREN .) ]
  ! BY              [ reduce using rule 65 (single_apply -> USING using_block BY LEFT_PAREN instruction RIGHT_PAREN .) ]
  ! DONE            [ reduce using rule 65 (single_apply -> USING using_block BY LEFT_PAREN instruction RIGHT_PAREN .) ]
  ! SORRY           [ reduce using rule 65 (single_apply -> USING using_block BY LEFT_PAREN instruction RIGHT_PAREN .) ]
  ! SUBGOAL         [ reduce using rule 65 (single_apply -> USING using_block BY LEFT_PAREN instruction RIGHT_PAREN .) ]
  ! AXIOMATIZATION  [ reduce using rule 65 (single_apply -> USING using_block BY LEFT_PAREN instruction RIGHT_PAREN .) ]
  ! FUN             [ reduce using rule 65 (single_apply -> USING using_block BY LEFT_PAREN instruction RIGHT_PAREN .) ]
  ! FUNCTION        [ reduce using rule 65 (single_apply -> USING using_block BY LEFT_PAREN instruction RIGHT_PAREN .) ]
  ! LEMMA           [ reduce using rule 65 (single_apply -> USING using_block BY LEFT_PAREN instruction RIGHT_PAREN .) ]
  ! LOCALE          [ reduce using rule 65 (single_apply -> USING using_block BY LEFT_PAREN instruction RIGHT_PAREN .) ]
  ! METHOD          [ reduce using rule 65 (single_apply -> USING using_block BY LEFT_PAREN instruction RIGHT_PAREN .) ]
  ! SECTION         [ reduce using rule 65 (single_apply -> USING using_block BY LEFT_PAREN instruction RIGHT_PAREN .) ]
  ! TEXT            [ reduce using rule 65 (single_apply -> USING using_block BY LEFT_PAREN instruction RIGHT_PAREN .) ]
  ! TYPE_SYNONYM    [ reduce using rule 65 (single_apply -> USING using_block BY LEFT_PAREN instruction RIGHT_PAREN .) ]
  ! TYPEDECL        [ reduce using rule 65 (single_apply -> USING using_block BY LEFT_PAREN instruction RIGHT_PAREN .) ]
  ! END             [ reduce using rule 65 (single_apply -> USING using_block BY LEFT_PAREN instruction RIGHT_PAREN .) ]

    instruction_modifier           shift and go to state 383

state 429

    (69) using_block -> ASSMS LEFT_PAREN NAT RIGHT_PAREN using_block .

    APPLY           reduce using rule 69 (using_block -> ASSMS LEFT_PAREN NAT RIGHT_PAREN using_block .)
    BY              reduce using rule 69 (using_block -> ASSMS LEFT_PAREN NAT RIGHT_PAREN using_block .)


state 430

    (70) using_block -> ASSMS LEFT_PAREN NAT COMMA NAT . RIGHT_PAREN using_block

    RIGHT_PAREN     shift and go to state 432


state 431

    (71) using_block -> ASSMS LEFT_PAREN NAT DASH NAT . RIGHT_PAREN using_block

    RIGHT_PAREN     shift and go to state 433


state 432

    (70) using_block -> ASSMS LEFT_PAREN NAT COMMA NAT RIGHT_PAREN . using_block
    (68) using_block -> . ASSMS using_block
    (69) using_block -> . ASSMS LEFT_PAREN NAT RIGHT_PAREN using_block
    (70) using_block -> . ASSMS LEFT_PAREN NAT COMMA NAT RIGHT_PAREN using_block
    (71) using_block -> . ASSMS LEFT_PAREN NAT DASH NAT RIGHT_PAREN using_block
    (72) using_block -> . empty
    (253) empty -> .

    ASSMS           shift and go to state 360
    APPLY           reduce using rule 253 (empty -> .)
    BY              reduce using rule 253 (empty -> .)

    using_block                    shift and go to state 434
    empty                          shift and go to state 361

state 433

    (71) using_block -> ASSMS LEFT_PAREN NAT DASH NAT RIGHT_PAREN . using_block
    (68) using_block -> . ASSMS using_block
    (69) using_block -> . ASSMS LEFT_PAREN NAT RIGHT_PAREN using_block
    (70) using_block -> . ASSMS LEFT_PAREN NAT COMMA NAT RIGHT_PAREN using_block
    (71) using_block -> . ASSMS LEFT_PAREN NAT DASH NAT RIGHT_PAREN using_block
    (72) using_block -> . empty
    (253) empty -> .

    ASSMS           shift and go to state 360
    APPLY           reduce using rule 253 (empty -> .)
    BY              reduce using rule 253 (empty -> .)

    using_block                    shift and go to state 435
    empty                          shift and go to state 361

state 434

    (70) using_block -> ASSMS LEFT_PAREN NAT COMMA NAT RIGHT_PAREN using_block .

    APPLY           reduce using rule 70 (using_block -> ASSMS LEFT_PAREN NAT COMMA NAT RIGHT_PAREN using_block .)
    BY              reduce using rule 70 (using_block -> ASSMS LEFT_PAREN NAT COMMA NAT RIGHT_PAREN using_block .)


state 435

    (71) using_block -> ASSMS LEFT_PAREN NAT DASH NAT RIGHT_PAREN using_block .

    APPLY           reduce using rule 71 (using_block -> ASSMS LEFT_PAREN NAT DASH NAT RIGHT_PAREN using_block .)
    BY              reduce using rule 71 (using_block -> ASSMS LEFT_PAREN NAT DASH NAT RIGHT_PAREN using_block .)

WARNING: 
WARNING: Conflicts:
WARNING: 
WARNING: shift/reduce conflict for COLON in state 48 resolved as shift
WARNING: shift/reduce conflict for AND in state 48 resolved as shift
WARNING: shift/reduce conflict for AND in state 119 resolved as shift
WARNING: shift/reduce conflict for LEFT_BRACKET in state 131 resolved as shift
WARNING: shift/reduce conflict for OPENING in state 145 resolved as shift
WARNING: shift/reduce conflict for ID in state 170 resolved as shift
WARNING: shift/reduce conflict for LEFT_BRACKET in state 242 resolved as shift
WARNING: shift/reduce conflict for APPLY in state 293 resolved as shift
WARNING: shift/reduce conflict for USING in state 293 resolved as shift
WARNING: shift/reduce conflict for BY in state 293 resolved as shift
WARNING: shift/reduce conflict for DONE in state 293 resolved as shift
WARNING: shift/reduce conflict for SORRY in state 293 resolved as shift
WARNING: shift/reduce conflict for SUBGOAL in state 293 resolved as shift
WARNING: shift/reduce conflict for APPLY in state 294 resolved as shift
WARNING: shift/reduce conflict for USING in state 294 resolved as shift
WARNING: shift/reduce conflict for BY in state 294 resolved as shift
WARNING: shift/reduce conflict for DONE in state 294 resolved as shift
WARNING: shift/reduce conflict for SORRY in state 294 resolved as shift
WARNING: shift/reduce conflict for SUBGOAL in state 294 resolved as shift
WARNING: shift/reduce conflict for LEFT_BRACKET in state 324 resolved as shift
WARNING: shift/reduce conflict for RIGHT_PAREN in state 335 resolved as shift
WARNING: shift/reduce conflict for APPLY in state 364 resolved as shift
WARNING: shift/reduce conflict for USING in state 364 resolved as shift
WARNING: shift/reduce conflict for BY in state 364 resolved as shift
WARNING: shift/reduce conflict for DONE in state 364 resolved as shift
WARNING: shift/reduce conflict for SORRY in state 364 resolved as shift
WARNING: shift/reduce conflict for SUBGOAL in state 364 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 384 resolved as shift
WARNING: shift/reduce conflict for QUESTION_MARK in state 384 resolved as shift
WARNING: reduce/reduce conflict in state 88 resolved using rule (sequential -> ID)
WARNING: rejected rule (domintros -> ID) in state 88
WARNING: reduce/reduce conflict in state 89 resolved using rule (sequential -> QUOTED_STRING)
WARNING: rejected rule (domintros -> QUOTED_STRING) in state 89
WARNING: reduce/reduce conflict in state 161 resolved using rule (single_instruction -> ID)
WARNING: rejected rule (empty -> <empty>) in state 161
WARNING: reduce/reduce conflict in state 178 resolved using rule (args -> arg)
WARNING: rejected rule (empty -> <empty>) in state 178
WARNING: reduce/reduce conflict in state 253 resolved using rule (single_instruction -> ID)
WARNING: rejected rule (empty -> <empty>) in state 253
WARNING: reduce/reduce conflict in state 292 resolved using rule (lemma_proof_block -> empty)
WARNING: rejected rule (apply_block -> empty) in state 292
WARNING: reduce/reduce conflict in state 408 resolved using rule (instruction -> LEFT_PAREN instruction RIGHT_PAREN)
WARNING: rejected rule (single_apply -> APPLY LEFT_PAREN instruction RIGHT_PAREN) in state 408
WARNING: reduce/reduce conflict in state 415 resolved using rule (instruction -> LEFT_PAREN instruction RIGHT_PAREN)
WARNING: rejected rule (single_apply -> BY LEFT_PAREN instruction RIGHT_PAREN) in state 415
WARNING: reduce/reduce conflict in state 427 resolved using rule (instruction -> LEFT_PAREN instruction RIGHT_PAREN)
WARNING: rejected rule (single_apply -> USING using_block APPLY LEFT_PAREN instruction RIGHT_PAREN) in state 427
WARNING: reduce/reduce conflict in state 428 resolved using rule (instruction -> LEFT_PAREN instruction RIGHT_PAREN)
WARNING: rejected rule (single_apply -> USING using_block BY LEFT_PAREN instruction RIGHT_PAREN) in state 428
WARNING: Rule (domintros -> ID) is never reduced
WARNING: Rule (domintros -> QUOTED_STRING) is never reduced
WARNING: Rule (single_apply -> APPLY LEFT_PAREN instruction RIGHT_PAREN) is never reduced
WARNING: Rule (single_apply -> BY LEFT_PAREN instruction RIGHT_PAREN) is never reduced
WARNING: Rule (single_apply -> USING using_block APPLY LEFT_PAREN instruction RIGHT_PAREN) is never reduced
WARNING: Rule (single_apply -> USING using_block BY LEFT_PAREN instruction RIGHT_PAREN) is never reduced
