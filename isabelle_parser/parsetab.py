
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'ALTSTRING AND APPLY ASSMS ASSUME ASSUMES AXIOMATIZATION BACKSLASH BANG BEGIN BINDER BY CARTOUCHE COLON COMMA COMMENT_CARTOUCHE CONSTRAINS DASH DEFINES DONE DOT END EQ EQUALS FIXES FOR FUN FUNCTION GLOBAL_INTERPRETATION GREEK GT HAT HAVE ID IF IMPORTS INFIX INFIXL INFIXR INTERPRET INTERPRETATION IS LATIN LEFT_BRACKET LEFT_PAREN LEMMA LETTER LOCALE LONG_IDENT LT METHOD NAT NOTES OPENING OUTER_COMMENT PIPE PLUS PRIMREC PROOF QUESTION_MARK QUOTED_STRING RIGHT_BRACKET RIGHT_PAREN SECTION SEMICOLON SHORT_IDENT SHOW SHOWS SORRY STAR STRING STRUCTURE SUBGOAL SUBLOCALE SUBSCRIPT SYM_FLOAT SYM_IDENT TERM_VAR TEXT THEN THEORY TYPEDECL TYPE_IDENT TYPE_SYNONYM TYPE_VAR UNDERSCORE USING VERBATIM WHEREtheory_file : theory\n                   | section_block theory_file\n                   | text_block theory_filetheory : THEORY ID imports_opt BEGIN content ENDimports_opt : IMPORTS import_list\n                   | emptyimport_list : ID import_list\n                   | QUOTED_STRING import_list\n                   | IDcontent : statement content\n               | emptystatement : axiomatization_block\n                 | fun_block\n                 | interpretation_block\n                 | lemma_block\n                 | locale_block\n                 | method_block\n                 | section_block\n                 | text_block\n                 | type_synonym\n                 | typedeclmethod_block : METHOD method_name EQUALS instructionmethod_name : IDinstruction : single_instruction\n                   | single_instruction instruction_modifier\n                   | single_instruction instruction_modifier COMMA instruction\n                   | single_instruction SEMICOLON instruction\n                   | single_instruction COMMA instruction\n                   | LEFT_PAREN instruction RIGHT_PAREN\n                   | LEFT_PAREN instruction RIGHT_PAREN instruction_modifierinstruction_modifier : PLUS\n                            | QUESTION_MARKsingle_instruction : ID\n                          | ID method_args\n                          | LEFT_PAREN ID method_args RIGHT_PAREN\n                          | LEFT_PAREN ID method_args RIGHT_PAREN instruction_modifiermethod_args : ID COLON method_arg method_args\n                   | method_arg method_args\n                   | emptymethod_arg : ID\n                  | ID LEFT_PAREN NAT RIGHT_PAREN\n                  | ID DOT ID\n                  | ID DOT ID LEFT_PAREN NAT RIGHT_PAREN\n                  | QUOTED_STRINGlemma_block : LEMMA ID COLON assumes_block shows_clause lemma_proof_blocklemma_proof_block : PROOF apply_block\n                         | apply_block\n                         | emptyassumes_block : ASSUMES assumptions_listassumptions_list : assumption AND assumptions_list\n                        | assumptionassumption : QUOTED_STRING\n                  | NAT COLON QUOTED_STRINGshows_clause : SHOWS QUOTED_STRINGapply_block : single_apply apply_block\n                   | subgoal apply_block\n                   | emptysingle_apply : APPLY instruction\n                    | APPLY LEFT_PAREN instruction RIGHT_PAREN\n                    | USING using_block APPLY DASH\n                    | USING using_block APPLY instruction\n                    | USING using_block APPLY LEFT_PAREN instruction RIGHT_PAREN\n                    | BY instruction\n                    | BY LEFT_PAREN instruction RIGHT_PAREN\n                    | USING using_block BY instruction\n                    | USING using_block BY LEFT_PAREN instruction RIGHT_PAREN\n                    | DONE\n                    | SORRY\n                    using_block : ASSMS using_block\n                   | ASSMS LEFT_PAREN NAT RIGHT_PAREN using_block\n                   | ASSMS LEFT_PAREN NAT COMMA NAT RIGHT_PAREN using_block\n                   | ASSMS LEFT_PAREN NAT DASH NAT RIGHT_PAREN using_block\n                   | emptysubgoals : subgoal subgoals\n                | subgoalsubgoal : SUBGOAL QUOTED_STRING apply_blocktypespec : ID\n                | typeargs IDtypearg : ID\n                | ID COLON COLON IDtypeargs : typearg\n                | typearg COMMA typeargs\n                | LEFT_PAREN typeargs RIGHT_PARENvars : var\n            | var AND varsvar : names\n           | ID COLON COLON ID\n           | GREEK COLON COLON ID\n           | ID COLON COLON QUOTED_STRING\n           | GREEK COLON COLON QUOTED_STRING\n           | names COLON COLON ID\n           | names COLON COLON QUOTED_STRING\n           | ID mixfix\n           | ID COLON COLON ID mixfix\n           | GREEK COLON COLON ID mixfix\n           | ID COLON COLON QUOTED_STRING mixfix\n           | GREEK COLON COLON QUOTED_STRING mixfixnames : ID\n             | ID AND namesnames_list : ID\n             | ID namesprop_pat : LEFT_PAREN prop_pat_terms RIGHT_PARENprop_pat_terms : prop_pat_term\n                      | prop_pat_term prop_pat_termsprop_pat_term : IS ID\n                     | IS QUOTED_STRINGthmdecl : thmbind COLONthmdef : thmbind EQthm : ID attributes\n           | ID\n           | attributesthms : thm\n            | thm thmsthmbind : ID\n               | ID attributes\n               | attributesattributes : LEFT_BRACKET attributes_list RIGHT_BRACKETattributes_list : empty\n                       | attribute\n                       | attribute COMMA attributes_listattribute : ID argsargs : empty\n            | arg\n            | arg argsarg : ID\n           | LEFT_PAREN args RIGHT_PAREN\n           | LEFT_BRACKET args RIGHT_BRACKETfor_fixes : FOR varsmulti_specs : structured_spec\n                   | structured_spec PIPE multi_specsstructured_spec : ID spec_prems\n                       | ID spec_prems for_fixes\n                       | QUOTED_STRING spec_prems\n                       | QUOTED_STRING spec_prems for_fixes\n                       | thmdecl ID spec_prems for_fixes\n                       | thmdecl QUOTED_STRING spec_prems for_fixesspec_prems : empty\n                  | IF prop_listprop_list : ID\n                 | ID prop_list\n                 | ID AND prop_listspecification : vars WHERE multi_specsopening : OPENING names_listaxiomatization_block : AXIOMATIZATION\n                            | AXIOMATIZATION vars\n                            | AXIOMATIZATION WHERE axiomatization\n                            | AXIOMATIZATION vars WHERE axiomatizationaxiomatization : axiomatization_header spec_prems for_fixesaxiomatization_header : thmdecl ID\n                             | thmdecl QUOTED_STRING\n                             | thmdecl ID AND axiomatization_header\n                             | thmdecl QUOTED_STRING AND axiomatization_headerlocale_expr : instance_list\n                   | instance_list for_fixesinstance_list : instance\n                     | instance PLUS instance_listinstance : ID\n                | ID pos_insts\n                | ID name_insts\n                | qualifier COLON ID pos_insts\n                | qualifier COLON ID name_instsqualifier : ID\n                 | QUOTED_STRING\n                 | ID QUESTION_MARK\n                 | QUOTED_STRING QUESTION_MARKpos_insts : UNDERSCORE\n                 | DOT\n                 | ID\n                 | QUOTED_STRING\n                 | GREEK\n                 | UNDERSCORE pos_insts\n                 | DOT pos_insts\n                 | ID pos_insts\n                 | QUOTED_STRING pos_insts\n                 | GREEK pos_instsname_insts : WHERE name_insts_listname_insts_list : ID EQUALS ID\n                       | ID EQUALS QUOTED_STRING\n                       | ID EQUALS ID name_insts_list\n                       | ID EQUALS QUOTED_STRING name_insts_listlocale_block : LOCALE ID\n                    | LOCALE ID BEGIN content END\n                    | LOCALE ID comment_block BEGIN content END\n                    | LOCALE ID EQ locale\n                    | LOCALE ID EQ locale BEGIN content ENDlocale : context_elem_list\n              | opening\n              | opening PLUS context_elem_list\n              | locale_expr\n              | locale opening\n              | locale opening PLUS context_elem_list\n              | locale_expr opening PLUS context_elem_listcontext_elem_list : context_elem\n                         | context_elem context_elem_listcontext_elem : FIXES vars\n                    | CONSTRAINS name_type_list\n                    | ASSUMES prop_list\n                    | DEFINES defines_list\n                    | NOTES notes_listname_type_list : ID COLON COLON ID\n                      | ID COLON COLON ID AND name_type_listdefines_list : defines_list_element\n                    | defines_list_element AND defines_listdefines_list_element : ID\n                            | QUOTED_STRING\n                            | thmdecl ID\n                            | thmdecl QUOTED_STRING\n                            | ID prop_pat\n                            | QUOTED_STRING prop_pat\n                            | thmdecl ID prop_pat\n                            | thmdecl QUOTED_STRING prop_patnotes_list : notes_list_element\n                  | notes_list_element AND notes_listnotes_list_element : thmdef thms\n                          | thmsinterpretation_block : INTERPRETATION locale_exprtypedecl : TYPEDECL typespec\n                | TYPEDECL typespec mixfixtype_synonym : TYPE_SYNONYM typespec EQUALS ID\n                    | TYPE_SYNONYM typespec EQUALS ID mixfixmixfix : LEFT_PAREN template RIGHT_PAREN\n              | LEFT_PAREN template prios RIGHT_PAREN\n              | LEFT_PAREN template NAT RIGHT_PAREN\n              | LEFT_PAREN template prios NAT RIGHT_PAREN\n              | LEFT_PAREN INFIX template NAT RIGHT_PAREN\n              | LEFT_PAREN INFIXL template NAT RIGHT_PAREN\n              | LEFT_PAREN INFIXR template NAT RIGHT_PAREN\n              | BINDER template NAT RIGHT_PAREN\n              | BINDER template prio NAT RIGHT_PAREN\n              | STRUCTUREtemplate : QUOTED_STRING\n                | CARTOUCHEprios : LEFT_BRACKET nat_list RIGHT_BRACKETprio : LEFT_BRACKET NAT RIGHT_BRACKETnat_list : NAT\n                | NAT COMMA nat_listprimrec_block : PRIMREC specificationfun_block : FUN specification\n                 | FUNCTION specification\n                 | FUN opts specification\n                 | FUNCTION opts specificationopts : LEFT_PAREN opt_list RIGHT_PARENopt_list : sequential\n                | domintros\n                | sequential COMMA opt_list\n                | domintros COMMA opt_listsequential : ID\n                  | QUOTED_STRINGdomintros : ID\n                 | QUOTED_STRINGsection_block : SECTION CARTOUCHEtext_block : TEXT CARTOUCHEcomment_block : COMMENT_CARTOUCHE CARTOUCHEsymbol : BANG\n              | STAR\n              | BACKSLASH\n              | LT\n              | HAT\n              | GT\n              | PLUSempty :'
    
_lr_action_items = {'THEORY':([0,3,4,11,12,],[5,5,5,-251,-252,]),'SECTION':([0,3,4,11,12,16,21,23,24,25,26,27,28,29,30,31,32,33,46,48,49,50,52,56,58,59,60,61,65,69,73,75,85,89,91,98,99,102,103,104,106,107,108,109,114,121,125,126,128,138,141,142,151,152,153,154,159,160,161,162,163,164,165,166,172,173,174,175,176,177,185,186,188,189,193,194,195,198,206,207,208,209,210,220,221,223,224,230,231,232,238,240,241,244,245,246,247,248,250,251,252,253,254,256,257,259,261,262,263,264,267,268,271,272,273,274,275,276,278,286,287,288,290,296,299,300,301,302,303,306,307,308,309,310,311,312,313,317,318,320,323,326,328,331,333,334,335,337,338,339,341,342,344,345,346,351,352,355,358,359,360,361,363,364,365,366,367,368,369,370,371,376,378,381,382,383,385,389,390,391,392,393,394,395,396,397,399,407,408,409,413,414,415,417,418,419,421,424,432,433,434,435,],[6,6,6,-251,-252,6,6,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,-144,-145,-84,-86,-98,-238,-239,-216,-153,-155,-157,-181,-77,-217,-146,-93,-230,-240,-241,-154,-168,-158,-159,-166,-167,-169,-170,6,-78,-218,-147,-137,-85,-98,-99,-142,-129,-261,-261,-128,-156,-173,-171,-172,-174,-175,-176,6,-184,-186,-187,-189,-193,-22,-24,-33,-219,-148,-138,-139,-117,-91,-92,-87,-89,-221,-88,-90,-131,-133,-160,-161,-261,-182,6,-190,-194,-143,-100,-195,-196,-197,-198,-202,-204,-205,-199,-212,-215,-112,-110,-111,-25,-31,-32,-40,-34,-261,-39,-44,-220,-140,-94,-96,-222,-223,-228,-95,-97,-130,-132,-134,-177,-178,-45,-261,-47,-48,-261,-261,-67,-68,-54,-183,-188,-101,-208,-209,-206,-207,-214,-110,-111,-113,-109,-28,-27,-29,-38,-141,-224,-225,-226,-227,-229,-135,-136,-179,-180,-46,-57,-55,-56,-58,-63,-261,-185,-191,-192,-203,-210,-211,-213,-109,-26,-30,-35,-40,-261,-42,-76,-200,-102,-36,-37,-41,-29,-60,-61,-65,-29,-201,-43,-29,-29,]),'TEXT':([0,3,4,11,12,16,21,23,24,25,26,27,28,29,30,31,32,33,46,48,49,50,52,56,58,59,60,61,65,69,73,75,85,89,91,98,99,102,103,104,106,107,108,109,114,121,125,126,128,138,141,142,151,152,153,154,159,160,161,162,163,164,165,166,172,173,174,175,176,177,185,186,188,189,193,194,195,198,206,207,208,209,210,220,221,223,224,230,231,232,238,240,241,244,245,246,247,248,250,251,252,253,254,256,257,259,261,262,263,264,267,268,271,272,273,274,275,276,278,286,287,288,290,296,299,300,301,302,303,306,307,308,309,310,311,312,313,317,318,320,323,326,328,331,333,334,335,337,338,339,341,342,344,345,346,351,352,355,358,359,360,361,363,364,365,366,367,368,369,370,371,376,378,381,382,383,385,389,390,391,392,393,394,395,396,397,399,407,408,409,413,414,415,417,418,419,421,424,432,433,434,435,],[7,7,7,-251,-252,7,7,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,-144,-145,-84,-86,-98,-238,-239,-216,-153,-155,-157,-181,-77,-217,-146,-93,-230,-240,-241,-154,-168,-158,-159,-166,-167,-169,-170,7,-78,-218,-147,-137,-85,-98,-99,-142,-129,-261,-261,-128,-156,-173,-171,-172,-174,-175,-176,7,-184,-186,-187,-189,-193,-22,-24,-33,-219,-148,-138,-139,-117,-91,-92,-87,-89,-221,-88,-90,-131,-133,-160,-161,-261,-182,7,-190,-194,-143,-100,-195,-196,-197,-198,-202,-204,-205,-199,-212,-215,-112,-110,-111,-25,-31,-32,-40,-34,-261,-39,-44,-220,-140,-94,-96,-222,-223,-228,-95,-97,-130,-132,-134,-177,-178,-45,-261,-47,-48,-261,-261,-67,-68,-54,-183,-188,-101,-208,-209,-206,-207,-214,-110,-111,-113,-109,-28,-27,-29,-38,-141,-224,-225,-226,-227,-229,-135,-136,-179,-180,-46,-57,-55,-56,-58,-63,-261,-185,-191,-192,-203,-210,-211,-213,-109,-26,-30,-35,-40,-261,-42,-76,-200,-102,-36,-37,-41,-29,-60,-61,-65,-29,-201,-43,-29,-29,]),'$end}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'theory_file':([0,3,4,],[1,8,9,]),'theory':([0,3,4,],[2,2,2,]),'section_block':([0,3,4,16,21,114,172,240,],[3,3,3,29,29,29,29,29,]),'text_block':([0,3,4,16,21,114,172,240,],[4,4,4,30,30,30,30,30,]),'imports_opt':([10,],[13,]),'empty':([10,16,21,76,81,114,137,153,154,172,188,199,203,204,205,225,226,232,240,270,273,309,312,313,315,374,378,397,429,439,440,],[15,22,22,128,135,22,202,128,128,22,274,135,202,202,202,128,128,311,22,274,274,368,368,368,375,375,368,274,375,375,375,]),'import_list':([14,18,19,],[17,42,43,]),'content':([16,21,114,172,240,],[20,45,171,239,324,]),'statement':([16,21,114,172,240,],[21,21,21,21,21,]),'axiomatization_block':([16,21,114,172,240,],[23,23,23,23,23,]),'fun_block':([16,21,114,172,240,],[24,24,24,24,24,]),'interpretation_block':([16,21,114,172,240,],[25,25,25,25,25,]),'lemma_block':([16,21,114,172,240,],[26,26,26,26,26,]),'locale_block':([16,21,114,172,240,],[27,27,27,27,27,]),'method_block':([16,21,114,172,240,],[28,28,28,28,28,]),'type_synonym':([16,21,114,172,240,],[31,31,31,31,31,]),'typedecl':([16,21,114,172,240,],[32,32,32,32,32,]),'vars':([33,34,35,53,57,82,100,179,],[46,54,54,54,54,138,159,247,]),'var':([33,34,35,53,57,82,100,179,],[48,48,48,48,48,48,48,48,]),'names':([33,34,35,53,57,82,86,100,179,246,],[49,49,49,49,49,49,142,49,49,328,]),'specification':([34,35,53,57,],[52,56,91,98,]),'opts':([34,35,],[53,57,]),'locale_expr':([36,116,],[58,176,]),'instance_list':([36,101,116,],[59,160,59,]),'instance':([36,101,116,],[60,60,60,]),'qualifier':([36,101,116,],[62,62,62,]),'method_name':([39,],[66,]),'typespec':([40,41,],[68,73,]),'typeargs':([40,41,72,122,],[70,70,123,191,]),'typearg':([40,41,72,122,],[71,71,71,71,]),'axiomatization':([47,74,],[75,126,]),'axiomatization_header':([47,74,196,197,],[76,76,280,281,]),'thmdecl':([47,74,92,182,196,197,222,330,],[77,77,155,255,77,77,155,255,]),'thmbind':([47,74,92,182,183,196,197,222,330,336,],[79,79,79,79,260,79,79,79,79,260,]),'attributes':([47,74,78,92,153,182,183,196,197,222,253,258,261,262,330,336,338,],[80,80,132,80,132,80,263,80,80,80,132,339,339,342,80,263,392,]),'mixfix':([50,73,189,208,209,220,221,],[85,125,276,286,287,299,300,]),'opt_list':([55,157,158,],[93,227,228,]),'sequential':([55,157,158,],[94,94,94,]),'domintros':([55,157,158,],[95,95,95,]),'for_fixes':([59,127,223,224,304,305,],[99,193,302,303,363,364,]),'pos_insts':([61,102,106,107,108,109,168,],[103,161,162,163,164,165,230,]),'name_insts':([61,168,],[104,231,]),'comment_block':([65,],[115,]),'spec_prems':([76,153,154,225,226,],[127,223,224,304,305,]),'attributes_list':([81,199,],[134,282,]),'attribute':([81,199,],[136,136,]),'template':([87,88,144,145,146,],[143,149,214,215,216,]),'multi_specs':([92,222,],[151,301,]),'structured_spec':([92,222,],[152,152,]),'name_insts_list':([110,306,307,],[166,365,366,]),'assumes_block':([113,],[169,]),'locale':([116,],[173,]),'context_elem_list':([116,177,242,325,327,],[174,244,326,382,383,]),'opening':([116,173,176,],[175,241,243,]),'context_elem':([116,177,242,325,327,],[177,177,177,177,177,]),'instruction':([118,187,265,266,314,316,343,372,377,402,403,420,422,],[185,269,344,345,371,376,393,401,406,419,421,427,428,]),'single_instruction':([118,187,265,266,314,316,343,372,377,402,403,420,422,],[186,186,186,186,186,186,186,186,186,186,186,186,186,]),'prop_list':([129,181,195,279,],[194,250,278,352,]),'args':([137,203,204,205,],[201,283,284,285,]),'arg':([137,203,204,205,],[203,203,203,203,]),'prios':([143,],[211,]),'prio':([149,],[218,]),'shows_clause':([169,],[232,]),'assumptions_list':([170,321,],[234,379,]),'assumption':([170,321,],[235,235,]),'names_list':([178,],[245,]),'name_type_list':([180,425,],[248,432,]),'defines_list':([182,330,],[251,385,]),'defines_list_element':([182,330,],[252,252,]),'notes_list':([183,336,],[256,391,]),'notes_list_element':([183,336,],[257,257,]),'thmdef':([183,336,],[258,258,]),'thms':([183,258,261,336,],[259,337,341,259,]),'thm':([183,258,261,336,],[261,261,261,261,]),'instruction_modifier':([186,346,395,417,424,434,435,],[264,394,413,394,394,394,394,]),'method_args':([188,270,273,397,],[272,347,351,414,]),'method_arg':([188,270,273,348,397,],[273,273,273,397,273,]),'nat_list':([213,357,],[291,400,]),'lemma_proof_block':([232,],[308,]),'apply_block':([232,309,312,313,378,],[310,367,369,370,407,]),'single_apply':([232,309,312,313,378,],[312,312,312,312,312,]),'subgoal':([232,309,312,313,378,],[313,313,313,313,313,]),'prop_pat':([253,254,334,335,],[331,333,389,390,]),'using_block':([315,374,429,439,440,],[373,404,436,441,442,]),'prop_pat_terms':([332,387,],[386,410,]),'prop_pat_term':([332,387,],[387,387,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> theory_file","S'",1,None,None,None),
  ('theory_file -> theory','theory_file',1,'p_theory_file','thy_parser.py',14),
  ('theory_file -> section_block theory_file','theory_file',2,'p_theory_file','thy_parser.py',15),
  ('theory_file -> text_block theory_file','theory_file',2,'p_theory_file','thy_parser.py',16),
  ('theory -> THEORY ID imports_opt BEGIN content END','theory',6,'p_theory','thy_parser.py',24),
  ('imports_opt -> IMPORTS import_list','imports_opt',2,'p_imports_opt','thy_parser.py',40),
  ('imports_opt -> empty','imports_opt',1,'p_imports_opt','thy_parser.py',41),
  ('import_list -> ID import_list','import_list',2,'p_import_list','thy_parser.py',46),
  ('import_list -> QUOTED_STRING import_list','import_list',2,'p_import_list','thy_parser.py',47),
  ('import_list -> ID','import_list',1,'p_import_list','thy_parser.py',48),
  ('content -> statement content','content',2,'p_content','thy_parser.py',56),
  ('content -> empty','content',1,'p_content','thy_parser.py',57),
  ('statement -> axiomatization_block','statement',1,'p_statement','thy_parser.py',65),
  ('statement -> fun_block','statement',1,'p_statement','thy_parser.py',66),
  ('statement -> interpretation_block','statement',1,'p_statement','thy_parser.py',67),
  ('statement -> lemma_block','statement',1,'p_statement','thy_parser.py',68),
  ('statement -> locale_block','statement',1,'p_statement','thy_parser.py',69),
  ('statement -> method_block','statement',1,'p_statement','thy_parser.py',70),
  ('statement -> section_block','statement',1,'p_statement','thy_parser.py',71),
  ('statement -> text_block','statement',1,'p_statement','thy_parser.py',72),
  ('statement -> type_synonym','statement',1,'p_statement','thy_parser.py',73),
  ('statement -> typedecl','statement',1,'p_statement','thy_parser.py',74),
  ('method_block -> METHOD method_name EQUALS instruction','method_block',4,'p_method_block','thy_parser.py',79),
  ('method_name -> ID','method_name',1,'p_method_name','thy_parser.py',88),
  ('instruction -> single_instruction','instruction',1,'p_instruction','thy_parser.py',93),
  ('instruction -> single_instruction instruction_modifier','instruction',2,'p_instruction','thy_parser.py',94),
  ('instruction -> single_instruction instruction_modifier COMMA instruction','instruction',4,'p_instruction','thy_parser.py',95),
  ('instruction -> single_instruction SEMICOLON instruction','instruction',3,'p_instruction','thy_parser.py',96),
  ('instruction -> single_instruction COMMA instruction','instruction',3,'p_instruction','thy_parser.py',97),
  ('instruction -> LEFT_PAREN instruction RIGHT_PAREN','instruction',3,'p_instruction','thy_parser.py',98),
  ('instruction -> LEFT_PAREN instruction RIGHT_PAREN instruction_modifier','instruction',4,'p_instruction','thy_parser.py',99),
  ('instruction_modifier -> PLUS','instruction_modifier',1,'p_instruction_modifier','thy_parser.py',104),
  ('instruction_modifier -> QUESTION_MARK','instruction_modifier',1,'p_instruction_modifier','thy_parser.py',105),
  ('single_instruction -> ID','single_instruction',1,'p_single_instruction','thy_parser.py',110),
  ('single_instruction -> ID method_args','single_instruction',2,'p_single_instruction','thy_parser.py',111),
  ('single_instruction -> LEFT_PAREN ID method_args RIGHT_PAREN','single_instruction',4,'p_single_instruction','thy_parser.py',112),
  ('single_instruction -> LEFT_PAREN ID method_args RIGHT_PAREN instruction_modifier','single_instruction',5,'p_single_instruction','thy_parser.py',113),
  ('method_args -> ID COLON method_arg method_args','method_args',4,'p_method_args','thy_parser.py',151),
  ('method_args -> method_arg method_args','method_args',2,'p_method_args','thy_parser.py',152),
  ('method_args -> empty','method_args',1,'p_method_args','thy_parser.py',153),
  ('method_arg -> ID','method_arg',1,'p_method_arg','thy_parser.py',163),
  ('method_arg -> ID LEFT_PAREN NAT RIGHT_PAREN','method_arg',4,'p_method_arg','thy_parser.py',164),
  ('method_arg -> ID DOT ID','method_arg',3,'p_method_arg','thy_parser.py',165),
  ('method_arg -> ID DOT ID LEFT_PAREN NAT RIGHT_PAREN','method_arg',6,'p_method_arg','thy_parser.py',166),
  ('method_arg -> QUOTED_STRING','method_arg',1,'p_method_arg','thy_parser.py',167),
  ('lemma_block -> LEMMA ID COLON assumes_block shows_clause lemma_proof_block','lemma_block',6,'p_lemma_block','thy_parser.py',172),
  ('lemma_proof_block -> PROOF apply_block','lemma_proof_block',2,'p_lemma_proof_block','thy_parser.py',184),
  ('lemma_proof_block -> apply_block','lemma_proof_block',1,'p_lemma_proof_block','thy_parser.py',185),
  ('lemma_proof_block -> empty','lemma_proof_block',1,'p_lemma_proof_block','thy_parser.py',186),
  ('assumes_block -> ASSUMES assumptions_list','assumes_block',2,'p_assumes_block','thy_parser.py',196),
  ('assumptions_list -> assumption AND assumptions_list','assumptions_list',3,'p_assumptions_list','thy_parser.py',201),
  ('assumptions_list -> assumption','assumptions_list',1,'p_assumptions_list','thy_parser.py',202),
  ('assumption -> QUOTED_STRING','assumption',1,'p_assumption','thy_parser.py',210),
  ('assumption -> NAT COLON QUOTED_STRING','assumption',3,'p_assumption','thy_parser.py',211),
  ('shows_clause -> SHOWS QUOTED_STRING','shows_clause',2,'p_shows_clause','thy_parser.py',222),
  ('apply_block -> single_apply apply_block','apply_block',2,'p_apply_block','thy_parser.py',227),
  ('apply_block -> subgoal apply_block','apply_block',2,'p_apply_block','thy_parser.py',228),
  ('apply_block -> empty','apply_block',1,'p_apply_block','thy_parser.py',229),
  ('single_apply -> APPLY instruction','single_apply',2,'p_single_apply','thy_parser.py',237),
  ('single_apply -> APPLY LEFT_PAREN instruction RIGHT_PAREN','single_apply',4,'p_single_apply','thy_parser.py',238),
  ('single_apply -> USING using_block APPLY DASH','single_apply',4,'p_single_apply','thy_parser.py',239),
  ('single_apply -> USING using_block APPLY instruction','single_apply',4,'p_single_apply','thy_parser.py',240),
  ('single_apply -> USING using_block APPLY LEFT_PAREN instruction RIGHT_PAREN','single_apply',6,'p_single_apply','thy_parser.py',241),
  ('single_apply -> BY instruction','single_apply',2,'p_single_apply','thy_parser.py',242),
  ('single_apply -> BY LEFT_PAREN instruction RIGHT_PAREN','single_apply',4,'p_single_apply','thy_parser.py',243),
  ('single_apply -> USING using_block BY instruction','single_apply',4,'p_single_apply','thy_parser.py',244),
  ('single_apply -> USING using_block BY LEFT_PAREN instruction RIGHT_PAREN','single_apply',6,'p_single_apply','thy_parser.py',245),
  ('single_apply -> DONE','single_apply',1,'p_single_apply','thy_parser.py',246),
  ('single_apply -> SORRY','single_apply',1,'p_single_apply','thy_parser.py',247),
  ('using_block -> ASSMS using_block','using_block',2,'p_using_block','thy_parser.py',300),
  ('using_block -> ASSMS LEFT_PAREN NAT RIGHT_PAREN using_block','using_block',5,'p_using_block','thy_parser.py',301),
  ('using_block -> ASSMS LEFT_PAREN NAT COMMA NAT RIGHT_PAREN using_block','using_block',7,'p_using_block','thy_parser.py',302),
  ('using_block -> ASSMS LEFT_PAREN NAT DASH NAT RIGHT_PAREN using_block','using_block',7,'p_using_block','thy_parser.py',303),
  ('using_block -> empty','using_block',1,'p_using_block','thy_parser.py',304),
  ('subgoals -> subgoal subgoals','subgoals',2,'p_subgoals','thy_parser.py',313),
  ('subgoals -> subgoal','subgoals',1,'p_subgoals','thy_parser.py',314),
  ('subgoal -> SUBGOAL QUOTED_STRING apply_block','subgoal',3,'p_subgoal','thy_parser.py',322),
  ('typespec -> ID','typespec',1,'p_typespec','thy_parser.py',336),
  ('typespec -> typeargs ID','typespec',2,'p_typespec','thy_parser.py',337),
  ('typearg -> ID','typearg',1,'p_typearg','thy_parser.py',347),
  ('typearg -> ID COLON COLON ID','typearg',4,'p_typearg','thy_parser.py',348),
  ('typeargs -> typearg','typeargs',1,'p_typeargs','thy_parser.py',359),
  ('typeargs -> typearg COMMA typeargs','typeargs',3,'p_typeargs','thy_parser.py',360),
  ('typeargs -> LEFT_PAREN typeargs RIGHT_PAREN','typeargs',3,'p_typeargs','thy_parser.py',361),
  ('vars -> var','vars',1,'p_vars','thy_parser.py',375),
  ('vars -> var AND vars','vars',3,'p_vars','thy_parser.py',376),
  ('var -> names','var',1,'p_var','thy_parser.py',381),
  ('var -> ID COLON COLON ID','var',4,'p_var','thy_parser.py',382),
  ('var -> GREEK COLON COLON ID','var',4,'p_var','thy_parser.py',383),
  ('var -> ID COLON COLON QUOTED_STRING','var',4,'p_var','thy_parser.py',384),
  ('var -> GREEK COLON COLON QUOTED_STRING','var',4,'p_var','thy_parser.py',385),
  ('var -> names COLON COLON ID','var',4,'p_var','thy_parser.py',386),
  ('var -> names COLON COLON QUOTED_STRING','var',4,'p_var','thy_parser.py',387),
  ('var -> ID mixfix','var',2,'p_var','thy_parser.py',388),
  ('var -> ID COLON COLON ID mixfix','var',5,'p_var','thy_parser.py',389),
  ('var -> GREEK COLON COLON ID mixfix','var',5,'p_var','thy_parser.py',390),
  ('var -> ID COLON COLON QUOTED_STRING mixfix','var',5,'p_var','thy_parser.py',391),
  ('var -> GREEK COLON COLON QUOTED_STRING mixfix','var',5,'p_var','thy_parser.py',392),
  ('names -> ID','names',1,'p_names','thy_parser.py',427),
  ('names -> ID AND names','names',3,'p_names','thy_parser.py',428),
  ('names_list -> ID','names_list',1,'p_names_list','thy_parser.py',433),
  ('names_list -> ID names','names_list',2,'p_names_list','thy_parser.py',434),
  ('prop_pat -> LEFT_PAREN prop_pat_terms RIGHT_PAREN','prop_pat',3,'p_prop_pat','thy_parser.py',439),
  ('prop_pat_terms -> prop_pat_term','prop_pat_terms',1,'p_prop_pat_terms','thy_parser.py',444),
  ('prop_pat_terms -> prop_pat_term prop_pat_terms','prop_pat_terms',2,'p_prop_pat_terms','thy_parser.py',445),
  ('prop_pat_term -> IS ID','prop_pat_term',2,'p_prop_pat_term','thy_parser.py',450),
  ('prop_pat_term -> IS QUOTED_STRING','prop_pat_term',2,'p_prop_pat_term','thy_parser.py',451),
  ('thmdecl -> thmbind COLON','thmdecl',2,'p_thmdecl','thy_parser.py',462),
  ('thmdef -> thmbind EQ','thmdef',2,'p_thmdef','thy_parser.py',467),
  ('thm -> ID attributes','thm',2,'p_thm','thy_parser.py',472),
  ('thm -> ID','thm',1,'p_thm','thy_parser.py',473),
  ('thm -> attributes','thm',1,'p_thm','thy_parser.py',474),
  ('thms -> thm','thms',1,'p_thms','thy_parser.py',492),
  ('thms -> thm thms','thms',2,'p_thms','thy_parser.py',493),
  ('thmbind -> ID','thmbind',1,'p_thmbind','thy_parser.py',498),
  ('thmbind -> ID attributes','thmbind',2,'p_thmbind','thy_parser.py',499),
  ('thmbind -> attributes','thmbind',1,'p_thmbind','thy_parser.py',500),
  ('attributes -> LEFT_BRACKET attributes_list RIGHT_BRACKET','attributes',3,'p_attributes','thy_parser.py',519),
  ('attributes_list -> empty','attributes_list',1,'p_attributes_list','thy_parser.py',524),
  ('attributes_list -> attribute','attributes_list',1,'p_attributes_list','thy_parser.py',525),
  ('attributes_list -> attribute COMMA attributes_list','attributes_list',3,'p_attributes_list','thy_parser.py',526),
  ('attribute -> ID args','attribute',2,'p_attribute','thy_parser.py',537),
  ('args -> empty','args',1,'p_args','thy_parser.py',542),
  ('args -> arg','args',1,'p_args','thy_parser.py',543),
  ('args -> arg args','args',2,'p_args','thy_parser.py',544),
  ('arg -> ID','arg',1,'p_arg','thy_parser.py',555),
  ('arg -> LEFT_PAREN args RIGHT_PAREN','arg',3,'p_arg','thy_parser.py',556),
  ('arg -> LEFT_BRACKET args RIGHT_BRACKET','arg',3,'p_arg','thy_parser.py',557),
  ('for_fixes -> FOR vars','for_fixes',2,'p_for_fixes','thy_parser.py',577),
  ('multi_specs -> structured_spec','multi_specs',1,'p_multi_specs','thy_parser.py',582),
  ('multi_specs -> structured_spec PIPE multi_specs','multi_specs',3,'p_multi_specs','thy_parser.py',583),
  ('structured_spec -> ID spec_prems','structured_spec',2,'p_structured_spec','thy_parser.py',591),
  ('structured_spec -> ID spec_prems for_fixes','structured_spec',3,'p_structured_spec','thy_parser.py',592),
  ('structured_spec -> QUOTED_STRING spec_prems','structured_spec',2,'p_structured_spec','thy_parser.py',593),
  ('structured_spec -> QUOTED_STRING spec_prems for_fixes','structured_spec',3,'p_structured_spec','thy_parser.py',594),
  ('structured_spec -> thmdecl ID spec_prems for_fixes','structured_spec',4,'p_structured_spec','thy_parser.py',595),
  ('structured_spec -> thmdecl QUOTED_STRING spec_prems for_fixes','structured_spec',4,'p_structured_spec','thy_parser.py',596),
  ('spec_prems -> empty','spec_prems',1,'p_spec_prems','thy_parser.py',627),
  ('spec_prems -> IF prop_list','spec_prems',2,'p_spec_prems','thy_parser.py',628),
  ('prop_list -> ID','prop_list',1,'p_prop_list','thy_parser.py',636),
  ('prop_list -> ID prop_list','prop_list',2,'p_prop_list','thy_parser.py',637),
  ('prop_list -> ID AND prop_list','prop_list',3,'p_prop_list','thy_parser.py',638),
  ('specification -> vars WHERE multi_specs','specification',3,'p_specification','thy_parser.py',648),
  ('opening -> OPENING names_list','opening',2,'p_opening','thy_parser.py',661),
  ('axiomatization_block -> AXIOMATIZATION','axiomatization_block',1,'p_axiomatization_block','thy_parser.py',671),
  ('axiomatization_block -> AXIOMATIZATION vars','axiomatization_block',2,'p_axiomatization_block','thy_parser.py',672),
  ('axiomatization_block -> AXIOMATIZATION WHERE axiomatization','axiomatization_block',3,'p_axiomatization_block','thy_parser.py',673),
  ('axiomatization_block -> AXIOMATIZATION vars WHERE axiomatization','axiomatization_block',4,'p_axiomatization_block','thy_parser.py',674),
  ('axiomatization -> axiomatization_header spec_prems for_fixes','axiomatization',3,'p_axiomatization','thy_parser.py',690),
  ('axiomatization_header -> thmdecl ID','axiomatization_header',2,'p_axiomatization_header','thy_parser.py',701),
  ('axiomatization_header -> thmdecl QUOTED_STRING','axiomatization_header',2,'p_axiomatization_header','thy_parser.py',702),
  ('axiomatization_header -> thmdecl ID AND axiomatization_header','axiomatization_header',4,'p_axiomatization_header','thy_parser.py',703),
  ('axiomatization_header -> thmdecl QUOTED_STRING AND axiomatization_header','axiomatization_header',4,'p_axiomatization_header','thy_parser.py',704),
  ('locale_expr -> instance_list','locale_expr',1,'p_locale_expr','thy_parser.py',718),
  ('locale_expr -> instance_list for_fixes','locale_expr',2,'p_locale_expr','thy_parser.py',719),
  ('instance_list -> instance','instance_list',1,'p_instance_list','thy_parser.py',729),
  ('instance_list -> instance PLUS instance_list','instance_list',3,'p_instance_list','thy_parser.py',730),
  ('instance -> ID','instance',1,'p_instance','thy_parser.py',738),
  ('instance -> ID pos_insts','instance',2,'p_instance','thy_parser.py',739),
  ('instance -> ID name_insts','instance',2,'p_instance','thy_parser.py',740),
  ('instance -> qualifier COLON ID pos_insts','instance',4,'p_instance','thy_parser.py',741),
  ('instance -> qualifier COLON ID name_insts','instance',4,'p_instance','thy_parser.py',742),
  ('qualifier -> ID','qualifier',1,'p_qualifier','thy_parser.py',768),
  ('qualifier -> QUOTED_STRING','qualifier',1,'p_qualifier','thy_parser.py',769),
  ('qualifier -> ID QUESTION_MARK','qualifier',2,'p_qualifier','thy_parser.py',770),
  ('qualifier -> QUOTED_STRING QUESTION_MARK','qualifier',2,'p_qualifier','thy_parser.py',771),
  ('pos_insts -> UNDERSCORE','pos_insts',1,'p_pos_insts','thy_parser.py',776),
  ('pos_insts -> DOT','pos_insts',1,'p_pos_insts','thy_parser.py',777),
  ('pos_insts -> ID','pos_insts',1,'p_pos_insts','thy_parser.py',778),
  ('pos_insts -> QUOTED_STRING','pos_insts',1,'p_pos_insts','thy_parser.py',779),
  ('pos_insts -> GREEK','pos_insts',1,'p_pos_insts','thy_parser.py',780),
  ('pos_insts -> UNDERSCORE pos_insts','pos_insts',2,'p_pos_insts','thy_parser.py',781),
  ('pos_insts -> DOT pos_insts','pos_insts',2,'p_pos_insts','thy_parser.py',782),
  ('pos_insts -> ID pos_insts','pos_insts',2,'p_pos_insts','thy_parser.py',783),
  ('pos_insts -> QUOTED_STRING pos_insts','pos_insts',2,'p_pos_insts','thy_parser.py',784),
  ('pos_insts -> GREEK pos_insts','pos_insts',2,'p_pos_insts','thy_parser.py',785),
  ('name_insts -> WHERE name_insts_list','name_insts',2,'p_name_insts','thy_parser.py',793),
  ('name_insts_list -> ID EQUALS ID','name_insts_list',3,'p_name_insts_list','thy_parser.py',798),
  ('name_insts_list -> ID EQUALS QUOTED_STRING','name_insts_list',3,'p_name_insts_list','thy_parser.py',799),
  ('name_insts_list -> ID EQUALS ID name_insts_list','name_insts_list',4,'p_name_insts_list','thy_parser.py',800),
  ('name_insts_list -> ID EQUALS QUOTED_STRING name_insts_list','name_insts_list',4,'p_name_insts_list','thy_parser.py',801),
  ('locale_block -> LOCALE ID','locale_block',2,'p_locale_block','thy_parser.py',814),
  ('locale_block -> LOCALE ID BEGIN content END','locale_block',5,'p_locale_block','thy_parser.py',815),
  ('locale_block -> LOCALE ID comment_block BEGIN content END','locale_block',6,'p_locale_block','thy_parser.py',816),
  ('locale_block -> LOCALE ID EQ locale','locale_block',4,'p_locale_block','thy_parser.py',817),
  ('locale_block -> LOCALE ID EQ locale BEGIN content END','locale_block',7,'p_locale_block','thy_parser.py',818),
  ('locale -> context_elem_list','locale',1,'p_locale','thy_parser.py',859),
  ('locale -> opening','locale',1,'p_locale','thy_parser.py',860),
  ('locale -> opening PLUS context_elem_list','locale',3,'p_locale','thy_parser.py',861),
  ('locale -> locale_expr','locale',1,'p_locale','thy_parser.py',862),
  ('locale -> locale opening','locale',2,'p_locale','thy_parser.py',863),
  ('locale -> locale opening PLUS context_elem_list','locale',4,'p_locale','thy_parser.py',864),
  ('locale -> locale_expr opening PLUS context_elem_list','locale',4,'p_locale','thy_parser.py',865),
  ('context_elem_list -> context_elem','context_elem_list',1,'p_context_elem_list','thy_parser.py',870),
  ('context_elem_list -> context_elem context_elem_list','context_elem_list',2,'p_context_elem_list','thy_parser.py',871),
  ('context_elem -> FIXES vars','context_elem',2,'p_context_elem','thy_parser.py',879),
  ('context_elem -> CONSTRAINS name_type_list','context_elem',2,'p_context_elem','thy_parser.py',880),
  ('context_elem -> ASSUMES prop_list','context_elem',2,'p_context_elem','thy_parser.py',881),
  ('context_elem -> DEFINES defines_list','context_elem',2,'p_context_elem','thy_parser.py',882),
  ('context_elem -> NOTES notes_list','context_elem',2,'p_context_elem','thy_parser.py',883),
  ('name_type_list -> ID COLON COLON ID','name_type_list',4,'p_name_type_list','thy_parser.py',893),
  ('name_type_list -> ID COLON COLON ID AND name_type_list','name_type_list',6,'p_name_type_list','thy_parser.py',894),
  ('defines_list -> defines_list_element','defines_list',1,'p_defines_list','thy_parser.py',902),
  ('defines_list -> defines_list_element AND defines_list','defines_list',3,'p_defines_list','thy_parser.py',903),
  ('defines_list_element -> ID','defines_list_element',1,'p_defines_list_element','thy_parser.py',911),
  ('defines_list_element -> QUOTED_STRING','defines_list_element',1,'p_defines_list_element','thy_parser.py',912),
  ('defines_list_element -> thmdecl ID','defines_list_element',2,'p_defines_list_element','thy_parser.py',913),
  ('defines_list_element -> thmdecl QUOTED_STRING','defines_list_element',2,'p_defines_list_element','thy_parser.py',914),
  ('defines_list_element -> ID prop_pat','defines_list_element',2,'p_defines_list_element','thy_parser.py',915),
  ('defines_list_element -> QUOTED_STRING prop_pat','defines_list_element',2,'p_defines_list_element','thy_parser.py',916),
  ('defines_list_element -> thmdecl ID prop_pat','defines_list_element',3,'p_defines_list_element','thy_parser.py',917),
  ('defines_list_element -> thmdecl QUOTED_STRING prop_pat','defines_list_element',3,'p_defines_list_element','thy_parser.py',918),
  ('notes_list -> notes_list_element','notes_list',1,'p_notes_list','thy_parser.py',944),
  ('notes_list -> notes_list_element AND notes_list','notes_list',3,'p_notes_list','thy_parser.py',945),
  ('notes_list_element -> thmdef thms','notes_list_element',2,'p_notes_list_element','thy_parser.py',953),
  ('notes_list_element -> thms','notes_list_element',1,'p_notes_list_element','thy_parser.py',954),
  ('interpretation_block -> INTERPRETATION locale_expr','interpretation_block',2,'p_interpretation_block','thy_parser.py',977),
  ('typedecl -> TYPEDECL typespec','typedecl',2,'p_typedecl','thy_parser.py',986),
  ('typedecl -> TYPEDECL typespec mixfix','typedecl',3,'p_typedecl','thy_parser.py',987),
  ('type_synonym -> TYPE_SYNONYM typespec EQUALS ID','type_synonym',4,'p_type_synonym','thy_parser.py',997),
  ('type_synonym -> TYPE_SYNONYM typespec EQUALS ID mixfix','type_synonym',5,'p_type_synonym','thy_parser.py',998),
  ('mixfix -> LEFT_PAREN template RIGHT_PAREN','mixfix',3,'p_mixfix','thy_parser.py',1013),
  ('mixfix -> LEFT_PAREN template prios RIGHT_PAREN','mixfix',4,'p_mixfix','thy_parser.py',1014),
  ('mixfix -> LEFT_PAREN template NAT RIGHT_PAREN','mixfix',4,'p_mixfix','thy_parser.py',1015),
  ('mixfix -> LEFT_PAREN template prios NAT RIGHT_PAREN','mixfix',5,'p_mixfix','thy_parser.py',1016),
  ('mixfix -> LEFT_PAREN INFIX template NAT RIGHT_PAREN','mixfix',5,'p_mixfix','thy_parser.py',1017),
  ('mixfix -> LEFT_PAREN INFIXL template NAT RIGHT_PAREN','mixfix',5,'p_mixfix','thy_parser.py',1018),
  ('mixfix -> LEFT_PAREN INFIXR template NAT RIGHT_PAREN','mixfix',5,'p_mixfix','thy_parser.py',1019),
  ('mixfix -> BINDER template NAT RIGHT_PAREN','mixfix',4,'p_mixfix','thy_parser.py',1020),
  ('mixfix -> BINDER template prio NAT RIGHT_PAREN','mixfix',5,'p_mixfix','thy_parser.py',1021),
  ('mixfix -> STRUCTURE','mixfix',1,'p_mixfix','thy_parser.py',1022),
  ('template -> QUOTED_STRING','template',1,'p_template','thy_parser.py',1070),
  ('template -> CARTOUCHE','template',1,'p_template','thy_parser.py',1071),
  ('prios -> LEFT_BRACKET nat_list RIGHT_BRACKET','prios',3,'p_prios','thy_parser.py',1076),
  ('prio -> LEFT_BRACKET NAT RIGHT_BRACKET','prio',3,'p_prio','thy_parser.py',1081),
  ('nat_list -> NAT','nat_list',1,'p_nat_list','thy_parser.py',1086),
  ('nat_list -> NAT COMMA nat_list','nat_list',3,'p_nat_list','thy_parser.py',1087),
  ('primrec_block -> PRIMREC specification','primrec_block',2,'p_primrec_block','thy_parser.py',1099),
  ('fun_block -> FUN specification','fun_block',2,'p_fun_block','thy_parser.py',1104),
  ('fun_block -> FUNCTION specification','fun_block',2,'p_fun_block','thy_parser.py',1105),
  ('fun_block -> FUN opts specification','fun_block',3,'p_fun_block','thy_parser.py',1106),
  ('fun_block -> FUNCTION opts specification','fun_block',3,'p_fun_block','thy_parser.py',1107),
  ('opts -> LEFT_PAREN opt_list RIGHT_PAREN','opts',3,'p_opts','thy_parser.py',1115),
  ('opt_list -> sequential','opt_list',1,'p_opt_list','thy_parser.py',1120),
  ('opt_list -> domintros','opt_list',1,'p_opt_list','thy_parser.py',1121),
  ('opt_list -> sequential COMMA opt_list','opt_list',3,'p_opt_list','thy_parser.py',1122),
  ('opt_list -> domintros COMMA opt_list','opt_list',3,'p_opt_list','thy_parser.py',1123),
  ('sequential -> ID','sequential',1,'p_sequential','thy_parser.py',1133),
  ('sequential -> QUOTED_STRING','sequential',1,'p_sequential','thy_parser.py',1134),
  ('domintros -> ID','domintros',1,'p_domintros','thy_parser.py',1140),
  ('domintros -> QUOTED_STRING','domintros',1,'p_domintros','thy_parser.py',1141),
  ('section_block -> SECTION CARTOUCHE','section_block',2,'p_section_block','thy_parser.py',1150),
  ('text_block -> TEXT CARTOUCHE','text_block',2,'p_text_block','thy_parser.py',1155),
  ('comment_block -> COMMENT_CARTOUCHE CARTOUCHE','comment_block',2,'p_comment_block','thy_parser.py',1160),
  ('symbol -> BANG','symbol',1,'p_symbol','thy_parser.py',1169),
  ('symbol -> STAR','symbol',1,'p_symbol','thy_parser.py',1170),
  ('symbol -> BACKSLASH','symbol',1,'p_symbol','thy_parser.py',1171),
  ('symbol -> LT','symbol',1,'p_symbol','thy_parser.py',1172),
  ('symbol -> HAT','symbol',1,'p_symbol','thy_parser.py',1173),
  ('symbol -> GT','symbol',1,'p_symbol','thy_parser.py',1174),
  ('symbol -> PLUS','symbol',1,'p_symbol','thy_parser.py',1175),
  ('empty -> <empty>','empty',0,'p_empty','thy_parser.py',1184),
]
