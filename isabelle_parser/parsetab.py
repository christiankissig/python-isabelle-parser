
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'ALTSTRING AND APPLY ASSMS ASSUME ASSUMES AXIOMATIZATION BACKSLASH BANG BEGIN BINDER BY CARTOUCHE COLON COMMA COMMENT_CARTOUCHE CONSTRAINS DASH DEFINES DONE DOT END EQ EQUALS FIXES FOR FUN FUNCTION GREEK GT HAT HAVE ID IF IMPORTS INFIX INFIXL INFIXR IS LATIN LEFT_BRACKET LEFT_PAREN LEMMA LETTER LOCALE LONG_IDENT LT METHOD NAT NOTES OPENING OUTER_COMMENT PLUS PRIMREC PROOF QUESTION_MARK QUOTED_STRING RIGHT_BRACKET RIGHT_PAREN SECTION SEMICOLON SHORT_IDENT SHOW SHOWS SORRY STAR STRING STRUCTURE SUBGOAL SUBSCRIPT SYM_FLOAT SYM_IDENT TERM_VAR TEXT THEN THEORY TYPEDECL TYPE_IDENT TYPE_SYNONYM TYPE_VAR UNDERSCORE USING VERBATIM WHEREtheory_file : theory\n                   | section_block theory_file\n                   | text_block theory_filetheory : THEORY ID imports_opt BEGIN content ENDimports_opt : IMPORTS import_list\n                   | emptyimport_list : ID import_list\n                   | QUOTED_STRING import_list\n                   | IDcontent : statement content\n               | emptystatement : axiomatization_block\n                 | fun_block\n                 | lemma_block\n                 | locale_block\n                 | method_block\n                 | section_block\n                 | text_block\n                 | type_synonym\n                 | typedeclmethod_block : METHOD method_name EQUALS instructionmethod_name : IDinstruction : single_instruction\n                   | single_instruction instruction_modifier\n                   | single_instruction instruction_modifier COMMA instruction\n                   | single_instruction SEMICOLON instruction\n                   | single_instruction COMMA instruction\n                   | LEFT_PAREN instruction RIGHT_PAREN\n                   | LEFT_PAREN instruction RIGHT_PAREN instruction_modifierinstruction_modifier : PLUS\n                            | QUESTION_MARKsingle_instruction : ID\n                          | ID method_args\n                          | LEFT_PAREN ID method_args RIGHT_PAREN\n                          | LEFT_PAREN ID method_args RIGHT_PAREN instruction_modifiermethod_args : ID COLON method_arg method_args\n                   | method_arg method_args\n                   | emptymethod_arg : ID\n                  | ID LEFT_PAREN NAT RIGHT_PAREN\n                  | ID DOT ID\n                  | ID DOT ID LEFT_PAREN NAT RIGHT_PAREN\n                  | QUOTED_STRINGlemma_block : LEMMA ID COLON assumes_block shows_clause lemma_proof_blocklemma_proof_block : PROOF apply_block\n                         | apply_block\n                         | emptyassumes_block : ASSUMES assumptions_listassumptions_list : assumption AND assumptions_list\n                        | assumptionassumption : QUOTED_STRING\n                  | NAT COLON QUOTED_STRINGshows_clause : SHOWS QUOTED_STRINGapply_block : single_apply apply_block\n                   | subgoal apply_block\n                   | emptysingle_apply : APPLY instruction\n                    | APPLY LEFT_PAREN instruction RIGHT_PAREN\n                    | USING using_block APPLY DASH\n                    | USING using_block APPLY instruction\n                    | USING using_block APPLY LEFT_PAREN instruction RIGHT_PAREN\n                    | BY instruction\n                    | BY LEFT_PAREN instruction RIGHT_PAREN\n                    | USING using_block BY instruction\n                    | USING using_block BY LEFT_PAREN instruction RIGHT_PAREN\n                    | DONE\n                    | SORRY\n                    using_block : ASSMS using_block\n                   | ASSMS LEFT_PAREN NAT RIGHT_PAREN using_block\n                   | ASSMS LEFT_PAREN NAT COMMA NAT RIGHT_PAREN using_block\n                   | ASSMS LEFT_PAREN NAT DASH NAT RIGHT_PAREN using_block\n                   | emptysubgoals : subgoal subgoals\n                | subgoalsubgoal : SUBGOAL QUOTED_STRING apply_blocktypespec : ID\n                | typeargs IDtypearg : ID\n                | ID COLON COLON IDtypeargs : typearg\n                | typearg COMMA typeargs\n                | LEFT_PAREN typeargs RIGHT_PARENvars : var\n            | var AND varsvar : names\n           | ID COLON COLON ID\n           | GREEK COLON COLON ID\n           | ID COLON COLON QUOTED_STRING\n           | GREEK COLON COLON QUOTED_STRING\n           | names COLON COLON ID\n           | names COLON COLON QUOTED_STRING\n           | ID mixfix\n           | ID COLON COLON ID mixfix\n           | GREEK COLON COLON ID mixfix\n           | ID COLON COLON QUOTED_STRING mixfix\n           | GREEK COLON COLON QUOTED_STRING mixfixnames : ID\n             | ID AND namesnames_list : ID\n             | ID namesprop_pat : LEFT_PAREN prop_pat_terms RIGHT_PARENprop_pat_terms : prop_pat_term\n                      | prop_pat_term prop_pat_termsprop_pat_term : IS ID\n                     | IS QUOTED_STRINGthmdecl : thmbind COLONthmdef : thmbind EQthm : ID attributes\n           | ID\n           | attributesthms : thm\n            | thm thmsthmbind : ID\n               | ID attributes\n               | attributesattributes : LEFT_BRACKET attributes_list RIGHT_BRACKETattributes_list : empty\n                       | attribute\n                       | attribute COMMA attributes_listattribute : ID argsargs : empty\n            | arg\n            | arg argsarg : ID\n           | LEFT_PAREN args RIGHT_PAREN\n           | LEFT_BRACKET args RIGHT_BRACKETfor_fixes : empty\n                 | FOR varsmulti_specs : structured_spec\n                   | structured_spec multi_specsstructured_spec : ID spec_prems for_fixes\n                       | QUOTED_STRING spec_prems for_fixes\n                       | thmdecl ID spec_prems for_fixes\n                       | thmdecl QUOTED_STRING spec_prems for_fixesspec_prems : empty\n                  | IF prop_listprop_list : ID\n                 | ID prop_list\n                 | ID AND prop_listspecification : vars WHERE multi_specsopening : OPENING names_listaxiomatization_block : AXIOMATIZATION\n                            | AXIOMATIZATION vars\n                            | AXIOMATIZATION WHERE axiomatization\n                            | AXIOMATIZATION vars WHERE axiomatizationaxiomatization : axiomatization_header spec_prems for_fixesaxiomatization_header : thmdecl ID\n                             | thmdecl QUOTED_STRING\n                             | thmdecl ID AND axiomatization_header\n                             | thmdecl QUOTED_STRING AND axiomatization_headerlocale_expr : instance_list for_fixesinstance_list : instance\n                     | instance PLUS instance_listinstance : ID\n                | ID pos_insts\n                | ID name_insts\n                | qualifier COLON ID pos_insts\n                | qualifier COLON ID name_instsqualifier : ID\n                 | QUOTED_STRING\n                 | ID QUESTION_MARK\n                 | QUOTED_STRING QUESTION_MARKpos_insts : UNDERSCORE\n                 | ID\n                 | QUOTED_STRING\n                 | UNDERSCORE pos_insts\n                 | ID pos_insts\n                 | QUOTED_STRING pos_instsname_insts : WHERE name_insts_listname_insts_list : ID EQUALS ID\n                       | ID EQUALS QUOTED_STRING\n                       | ID EQUALS ID name_insts_list\n                       | ID EQUALS QUOTED_STRING name_insts_listlocale_block : LOCALE ID\n                    | LOCALE ID BEGIN content END\n                    | LOCALE ID comment_block BEGIN content END\n                    | LOCALE ID EQ locale\n                    | LOCALE ID EQ locale BEGIN content ENDlocale : context_elem_list\n              | opening\n              | opening PLUS context_elem_list\n              | locale_expr\n              | locale opening\n              | locale opening PLUS context_elem_list\n              | locale_expr opening PLUS context_elem_listcontext_elem_list : context_elem\n                         | context_elem context_elem_listcontext_elem : FIXES vars\n                    | CONSTRAINS name_type_list\n                    | ASSUMES prop_list\n                    | DEFINES defines_list\n                    | NOTES notes_listname_type_list : ID COLON COLON ID\n                      | ID COLON COLON ID AND name_type_listdefines_list : defines_list_element\n                    | defines_list_element AND defines_listdefines_list_element : ID\n                            | QUOTED_STRING\n                            | thmdecl ID\n                            | thmdecl QUOTED_STRING\n                            | ID prop_pat\n                            | QUOTED_STRING prop_pat\n                            | thmdecl ID prop_pat\n                            | thmdecl QUOTED_STRING prop_patnotes_list : notes_list_element\n                  | notes_list_element AND notes_listnotes_list_element : thmdef thms\n                          | thmstypedecl : TYPEDECL typespec\n                | TYPEDECL typespec mixfixtype_synonym : TYPE_SYNONYM typespec EQUALS ID\n                    | TYPE_SYNONYM typespec EQUALS ID mixfixmixfix : LEFT_PAREN template RIGHT_PAREN\n              | LEFT_PAREN template prios RIGHT_PAREN\n              | LEFT_PAREN template NAT RIGHT_PAREN\n              | LEFT_PAREN template prios NAT RIGHT_PAREN\n              | LEFT_PAREN INFIX template NAT RIGHT_PAREN\n              | LEFT_PAREN INFIXL template NAT RIGHT_PAREN\n              | LEFT_PAREN INFIXR template NAT RIGHT_PAREN\n              | BINDER template NAT RIGHT_PAREN\n              | BINDER template prio NAT RIGHT_PAREN\n              | STRUCTUREtemplate : QUOTED_STRING\n                | CARTOUCHEprios : LEFT_BRACKET nat_list RIGHT_BRACKETprio : LEFT_BRACKET NAT RIGHT_BRACKETnat_list : NAT\n                | NAT COMMA nat_listprimrec_block : PRIMREC specificationfun_block : FUN specification\n                 | FUNCTION specification\n                 | FUN opts specification\n                 | FUNCTION opts specificationopts : LEFT_PAREN opt_list RIGHT_PARENopt_list : sequential\n                | domintros\n                | sequential COMMA opt_list\n                | domintros COMMA opt_listsequential : ID\n                  | QUOTED_STRINGdomintros : ID\n                 | QUOTED_STRINGsection_block : SECTION CARTOUCHEtext_block : TEXT CARTOUCHEcomment_block : COMMENT_CARTOUCHE CARTOUCHEsymbol : BANG\n              | STAR\n              | BACKSLASH\n              | LT\n              | HAT\n              | GT\n              | PLUSempty :'
    
_lr_action_items = {'THEORY':([0,3,4,11,12,],[5,5,5,-243,-244,]),'SECTION':([0,3,4,11,12,16,21,23,24,25,26,27,28,29,30,31,32,44,46,47,48,50,54,57,61,65,67,68,77,81,83,90,92,99,103,104,105,106,108,109,116,119,120,129,130,131,132,140,141,142,143,144,145,146,148,154,158,159,161,162,166,167,169,170,173,181,182,183,184,185,195,196,197,198,199,200,201,204,210,212,213,214,216,217,219,220,223,224,225,226,227,228,230,231,232,233,234,236,237,239,241,242,243,247,250,251,254,255,256,257,258,259,261,262,264,265,270,271,272,274,280,283,284,285,286,287,288,289,290,291,292,293,294,298,299,301,304,305,306,307,308,312,314,317,319,320,321,323,324,325,327,328,329,332,333,334,339,340,343,346,347,348,349,351,352,353,354,355,356,357,362,364,368,369,370,372,376,377,378,379,380,381,382,383,384,385,386,388,396,397,398,399,400,404,405,406,408,409,410,412,415,416,417,425,426,427,428,],[6,6,6,-243,-244,6,6,-12,-13,-14,-15,-16,-17,-18,-19,-20,-142,-143,-83,-85,-97,-230,-231,-174,-76,-209,-144,-253,-92,-222,-232,-233,6,-77,-210,-145,-253,-135,-147,-148,-84,-97,-98,-140,-129,-253,-253,6,-154,-177,-179,-180,-182,-186,-253,-152,-21,-23,-32,-211,-146,-127,-136,-137,-116,-90,-91,-86,-88,-213,-87,-89,-130,-253,-253,-253,-253,-253,-175,-164,-155,-156,-163,-165,6,-183,-187,-141,-99,-151,-188,-189,-190,-191,-195,-197,-198,-192,-205,-208,-111,-109,-110,-24,-30,-31,-39,-33,-253,-38,-43,-212,-128,-138,-149,-150,-93,-95,-214,-215,-220,-94,-96,-131,-132,-253,-253,-44,-253,-46,-47,-253,-253,-66,-67,-53,-176,-167,-166,-168,-169,-181,-100,-201,-202,-199,-200,-207,-109,-110,-112,-108,-153,-27,-26,-28,-37,-139,-216,-217,-218,-219,-221,-133,-134,-45,-56,-54,-55,-57,-62,-253,-178,-184,-185,-196,-203,-204,-206,-108,-157,-158,-25,-29,-34,-39,-253,-41,-75,-170,-171,-193,-101,-35,-36,-40,-28,-59,-60,-64,-28,-172,-173,-194,-42,-28,-28,]),'TEXT':([0,3,4,11,12,16,21,23,24,25,26,27,28,29,30,31,32,44,46,47,48,50,54,57,61,65,67,68,77,81,83,90,92,99,103,104,105,106,108,109,116,119,120,129,130,131,132,140,141,142,143,144,145,146,148,154,158,159,161,162,166,167,169,170,173,181,182,183,184,185,195,196,197,198,199,200,201,204,210,212,213,214,216,217,219,220,223,224,225,226,227,228,230,231,232,233,234,236,237,239,241,242,243,247,250,251,254,255,256,257,258,259,261,262,264,265,270,271,272,274,280,283,284,285,286,287,288,289,290,291,292,293,294,298,299,301,304,305,306,307,308,312,314,317,319,320,321,323,324,325,327,328,329,332,333,334,339,340,343,346,347,348,349,351,352,353,354,355,356,357,362,364,368,369,370,372,376,377,378,379,380,381,382,383,384,385,386,388,396,397,398,399,400,404,405,406,408,409,410,412,415,416,417,425,426,427,428,],[7,7,7,-243,-244,7,7,-12,-13,-14,-15,-16,-17,-18,-19,-20,-142,-143,-83,-85,-97,-230,-231,-174,-76,-209,-144,-253,-92,-222,-232,-233,7,-77,-210,-145,-253,-135,-147,-148,-84,-97,-98,-140,-129,-253,-253,7,-154,-177,-179,-180,-182,-186,-253,-152,-21,-23,-32,-211,-146,-127,-136,-137,-116,-90,-91,-86,-88,-213,-87,-89,-130,-253,-253,-253,-253,-253,-175,-164,-155,-156,-163,-165,7,-183,-187,-141,-99,-151,-188,-189,-190,-191,-195,-197,-198,-192,-205,-208,-111,-109,-110,-24,-30,-31,-39,-33,-253,-38,-43,-212,-128,-138,-149,-150,-93,-95,-214,-215,-220,-94,-96,-131,-132,-253,-253,-44,-253,-46,-47,-253,-253,-66,-67,-53,-176,-167,-166,-168,-169,-181,-100,-201,-202,-199,-200,-207,-109,-110,-112,-108,-153,-27,-26,-28,-37,-139,-216,-217,-218,-219,-221,-133,-134,-45,-56,-54,-55,-57,-62,-253,-178,-184,-185,-196,-203,-204,-206,-108,-157,-158,-25,-29,-34,-39,-253,-41,-75,-170,-171,-193,-101,-35,-36,-40,-28,-59,-60,-64,-28,-172,-173,-194,-42,-28,-28,]),'$end}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'theory_file':([0,3,4,],[1,8,9,]),'theory':([0,3,4,],[2,2,2,]),'section_block':([0,3,4,16,21,92,140,219,],[3,3,3,28,28,28,28,28,]),'text_block':([0,3,4,16,21,92,140,219,],[4,4,4,29,29,29,29,29,]),'imports_opt':([10,],[13,]),'empty':([10,16,21,68,73,92,105,115,131,132,140,148,161,174,178,179,180,198,199,200,201,204,219,253,256,287,288,290,293,294,296,360,364,386,422,432,433,],[15,22,22,106,113,22,167,177,106,106,22,167,257,113,177,177,177,167,167,106,106,292,22,257,257,167,167,354,354,354,361,361,354,257,361,361,361,]),'import_list':([14,18,19,],[17,40,41,]),'content':([16,21,92,140,219,],[20,43,139,211,310,]),'statement':([16,21,92,140,219,],[21,21,21,21,21,]),'axiomatization_block':([16,21,92,140,219,],[23,23,23,23,23,]),'fun_block':([16,21,92,140,219,],[24,24,24,24,24,]),'lemma_block':([16,21,92,140,219,],[25,25,25,25,25,]),'locale_block':([16,21,92,140,219,],[26,26,26,26,26,]),'method_block':([16,21,92,140,219,],[27,27,27,27,27,]),'type_synonym':([16,21,92,140,219,],[30,30,30,30,30,]),'typedecl':([16,21,92,140,219,],[31,31,31,31,31,]),'vars':([32,33,34,51,55,74,149,168,],[44,52,52,52,52,116,227,261,]),'var':([32,33,34,51,55,74,149,168,],[46,46,46,46,46,46,46,46,]),'names':([32,33,34,51,55,74,78,149,168,225,],[47,47,47,47,47,47,120,47,47,314,]),'specification':([33,34,51,55,],[50,54,83,90,]),'opts':([33,34,],[51,55,]),'method_name':([37,],[58,]),'typespec':([38,39,],[60,65,]),'typeargs':([38,39,64,100,],[62,62,101,164,]),'typearg':([38,39,64,100,],[63,63,63,63,]),'axiomatization':([45,66,],[67,104,]),'axiomatization_header':([45,66,171,172,],[68,68,264,265,]),'thmdecl':([45,66,84,130,152,171,172,316,],[69,69,133,133,235,69,69,235,]),'thmbind':([45,66,84,130,152,153,171,172,316,322,],[71,71,71,71,71,240,71,71,71,240,]),'attributes':([45,66,70,84,130,131,152,153,171,172,233,238,241,242,316,322,324,],[72,72,110,72,72,110,72,243,72,72,110,325,325,328,72,243,379,]),'mixfix':([48,65,162,183,184,195,196,],[77,103,259,270,271,283,284,]),'opt_list':([53,135,136,],[85,202,203,]),'sequential':([53,135,136,],[86,86,86,]),'domintros':([53,135,136,],[87,87,87,]),'comment_block':([57,],[93,]),'spec_prems':([68,131,132,200,201,],[105,198,199,287,288,]),'attributes_list':([73,174,],[112,266,]),'attribute':([73,174,],[114,114,]),'template':([79,80,122,123,124,],[121,127,189,190,191,]),'multi_specs':([84,130,],[129,197,]),'structured_spec':([84,130,],[130,130,]),'assumes_block':([91,],[137,]),'locale':([94,],[142,]),'context_elem_list':([94,146,221,311,313,],[143,223,312,369,370,]),'opening':([94,142,145,],[144,220,222,]),'locale_expr':([94,],[145,]),'context_elem':([94,146,221,311,313,],[146,146,146,146,146,]),'instance_list':([94,244,],[148,329,]),'instance':([94,244,],[154,154,]),'qualifier':([94,244,],[155,155,]),'instruction':([96,160,248,249,295,297,331,358,363,391,392,411,413,],[158,252,332,333,357,362,382,390,395,410,412,420,421,]),'single_instruction':([96,160,248,249,295,297,331,358,363,391,392,411,413,],[159,159,159,159,159,159,159,159,159,159,159,159,159,]),'for_fixes':([105,148,198,199,287,288,],[166,226,285,286,351,352,]),'prop_list':([107,151,170,263,],[169,230,262,340,]),'args':([115,178,179,180,],[176,267,268,269,]),'arg':([115,178,179,180,],[178,178,178,178,]),'prios':([121,],[186,]),'prio':([127,],[193,]),'shows_clause':([137,],[204,]),'assumptions_list':([138,302,],[206,365,]),'assumption':([138,302,],[207,207,]),'pos_insts':([141,212,216,217,330,],[213,305,306,307,380,]),'name_insts':([141,330,],[214,381,]),'names_list':([147,],[224,]),'name_type_list':([150,418,],[228,425,]),'defines_list':([152,316,],[231,372,]),'defines_list_element':([152,316,],[232,232,]),'notes_list':([153,322,],[236,378,]),'notes_list_element':([153,322,],[237,237,]),'thmdef':([153,322,],[238,238,]),'thms':([153,238,241,322,],[239,323,327,239,]),'thm':([153,238,241,322,],[241,241,241,241,]),'instruction_modifier':([159,334,384,408,415,427,428,],[247,383,404,383,383,383,383,]),'method_args':([161,253,256,386,],[255,335,339,405,]),'method_arg':([161,253,256,336,386,],[256,256,256,386,256,]),'nat_list':([188,345,],[275,389,]),'lemma_proof_block':([204,],[289,]),'apply_block':([204,290,293,294,364,],[291,353,355,356,396,]),'single_apply':([204,290,293,294,364,],[293,293,293,293,293,]),'subgoal':([204,290,293,294,364,],[294,294,294,294,294,]),'name_insts_list':([218,397,398,],[308,416,417,]),'prop_pat':([233,234,320,321,],[317,319,376,377,]),'using_block':([296,360,422,432,433,],[359,393,429,434,435,]),'prop_pat_terms':([318,374,],[373,401,]),'prop_pat_term':([318,374,],[374,374,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> theory_file","S'",1,None,None,None),
  ('theory_file -> theory','theory_file',1,'p_theory_file','thy_parser.py',14),
  ('theory_file -> section_block theory_file','theory_file',2,'p_theory_file','thy_parser.py',15),
  ('theory_file -> text_block theory_file','theory_file',2,'p_theory_file','thy_parser.py',16),
  ('theory -> THEORY ID imports_opt BEGIN content END','theory',6,'p_theory','thy_parser.py',24),
  ('imports_opt -> IMPORTS import_list','imports_opt',2,'p_imports_opt','thy_parser.py',40),
  ('imports_opt -> empty','imports_opt',1,'p_imports_opt','thy_parser.py',41),
  ('import_list -> ID import_list','import_list',2,'p_import_list','thy_parser.py',46),
  ('import_list -> QUOTED_STRING import_list','import_list',2,'p_import_list','thy_parser.py',47),
  ('import_list -> ID','import_list',1,'p_import_list','thy_parser.py',48),
  ('content -> statement content','content',2,'p_content','thy_parser.py',56),
  ('content -> empty','content',1,'p_content','thy_parser.py',57),
  ('statement -> axiomatization_block','statement',1,'p_statement','thy_parser.py',65),
  ('statement -> fun_block','statement',1,'p_statement','thy_parser.py',66),
  ('statement -> lemma_block','statement',1,'p_statement','thy_parser.py',67),
  ('statement -> locale_block','statement',1,'p_statement','thy_parser.py',68),
  ('statement -> method_block','statement',1,'p_statement','thy_parser.py',69),
  ('statement -> section_block','statement',1,'p_statement','thy_parser.py',70),
  ('statement -> text_block','statement',1,'p_statement','thy_parser.py',71),
  ('statement -> type_synonym','statement',1,'p_statement','thy_parser.py',72),
  ('statement -> typedecl','statement',1,'p_statement','thy_parser.py',73),
  ('method_block -> METHOD method_name EQUALS instruction','method_block',4,'p_method_block','thy_parser.py',78),
  ('method_name -> ID','method_name',1,'p_method_name','thy_parser.py',87),
  ('instruction -> single_instruction','instruction',1,'p_instruction','thy_parser.py',92),
  ('instruction -> single_instruction instruction_modifier','instruction',2,'p_instruction','thy_parser.py',93),
  ('instruction -> single_instruction instruction_modifier COMMA instruction','instruction',4,'p_instruction','thy_parser.py',94),
  ('instruction -> single_instruction SEMICOLON instruction','instruction',3,'p_instruction','thy_parser.py',95),
  ('instruction -> single_instruction COMMA instruction','instruction',3,'p_instruction','thy_parser.py',96),
  ('instruction -> LEFT_PAREN instruction RIGHT_PAREN','instruction',3,'p_instruction','thy_parser.py',97),
  ('instruction -> LEFT_PAREN instruction RIGHT_PAREN instruction_modifier','instruction',4,'p_instruction','thy_parser.py',98),
  ('instruction_modifier -> PLUS','instruction_modifier',1,'p_instruction_modifier','thy_parser.py',103),
  ('instruction_modifier -> QUESTION_MARK','instruction_modifier',1,'p_instruction_modifier','thy_parser.py',104),
  ('single_instruction -> ID','single_instruction',1,'p_single_instruction','thy_parser.py',109),
  ('single_instruction -> ID method_args','single_instruction',2,'p_single_instruction','thy_parser.py',110),
  ('single_instruction -> LEFT_PAREN ID method_args RIGHT_PAREN','single_instruction',4,'p_single_instruction','thy_parser.py',111),
  ('single_instruction -> LEFT_PAREN ID method_args RIGHT_PAREN instruction_modifier','single_instruction',5,'p_single_instruction','thy_parser.py',112),
  ('method_args -> ID COLON method_arg method_args','method_args',4,'p_method_args','thy_parser.py',150),
  ('method_args -> method_arg method_args','method_args',2,'p_method_args','thy_parser.py',151),
  ('method_args -> empty','method_args',1,'p_method_args','thy_parser.py',152),
  ('method_arg -> ID','method_arg',1,'p_method_arg','thy_parser.py',162),
  ('method_arg -> ID LEFT_PAREN NAT RIGHT_PAREN','method_arg',4,'p_method_arg','thy_parser.py',163),
  ('method_arg -> ID DOT ID','method_arg',3,'p_method_arg','thy_parser.py',164),
  ('method_arg -> ID DOT ID LEFT_PAREN NAT RIGHT_PAREN','method_arg',6,'p_method_arg','thy_parser.py',165),
  ('method_arg -> QUOTED_STRING','method_arg',1,'p_method_arg','thy_parser.py',166),
  ('lemma_block -> LEMMA ID COLON assumes_block shows_clause lemma_proof_block','lemma_block',6,'p_lemma_block','thy_parser.py',171),
  ('lemma_proof_block -> PROOF apply_block','lemma_proof_block',2,'p_lemma_proof_block','thy_parser.py',183),
  ('lemma_proof_block -> apply_block','lemma_proof_block',1,'p_lemma_proof_block','thy_parser.py',184),
  ('lemma_proof_block -> empty','lemma_proof_block',1,'p_lemma_proof_block','thy_parser.py',185),
  ('assumes_block -> ASSUMES assumptions_list','assumes_block',2,'p_assumes_block','thy_parser.py',195),
  ('assumptions_list -> assumption AND assumptions_list','assumptions_list',3,'p_assumptions_list','thy_parser.py',200),
  ('assumptions_list -> assumption','assumptions_list',1,'p_assumptions_list','thy_parser.py',201),
  ('assumption -> QUOTED_STRING','assumption',1,'p_assumption','thy_parser.py',209),
  ('assumption -> NAT COLON QUOTED_STRING','assumption',3,'p_assumption','thy_parser.py',210),
  ('shows_clause -> SHOWS QUOTED_STRING','shows_clause',2,'p_shows_clause','thy_parser.py',221),
  ('apply_block -> single_apply apply_block','apply_block',2,'p_apply_block','thy_parser.py',226),
  ('apply_block -> subgoal apply_block','apply_block',2,'p_apply_block','thy_parser.py',227),
  ('apply_block -> empty','apply_block',1,'p_apply_block','thy_parser.py',228),
  ('single_apply -> APPLY instruction','single_apply',2,'p_single_apply','thy_parser.py',236),
  ('single_apply -> APPLY LEFT_PAREN instruction RIGHT_PAREN','single_apply',4,'p_single_apply','thy_parser.py',237),
  ('single_apply -> USING using_block APPLY DASH','single_apply',4,'p_single_apply','thy_parser.py',238),
  ('single_apply -> USING using_block APPLY instruction','single_apply',4,'p_single_apply','thy_parser.py',239),
  ('single_apply -> USING using_block APPLY LEFT_PAREN instruction RIGHT_PAREN','single_apply',6,'p_single_apply','thy_parser.py',240),
  ('single_apply -> BY instruction','single_apply',2,'p_single_apply','thy_parser.py',241),
  ('single_apply -> BY LEFT_PAREN instruction RIGHT_PAREN','single_apply',4,'p_single_apply','thy_parser.py',242),
  ('single_apply -> USING using_block BY instruction','single_apply',4,'p_single_apply','thy_parser.py',243),
  ('single_apply -> USING using_block BY LEFT_PAREN instruction RIGHT_PAREN','single_apply',6,'p_single_apply','thy_parser.py',244),
  ('single_apply -> DONE','single_apply',1,'p_single_apply','thy_parser.py',245),
  ('single_apply -> SORRY','single_apply',1,'p_single_apply','thy_parser.py',246),
  ('using_block -> ASSMS using_block','using_block',2,'p_using_block','thy_parser.py',299),
  ('using_block -> ASSMS LEFT_PAREN NAT RIGHT_PAREN using_block','using_block',5,'p_using_block','thy_parser.py',300),
  ('using_block -> ASSMS LEFT_PAREN NAT COMMA NAT RIGHT_PAREN using_block','using_block',7,'p_using_block','thy_parser.py',301),
  ('using_block -> ASSMS LEFT_PAREN NAT DASH NAT RIGHT_PAREN using_block','using_block',7,'p_using_block','thy_parser.py',302),
  ('using_block -> empty','using_block',1,'p_using_block','thy_parser.py',303),
  ('subgoals -> subgoal subgoals','subgoals',2,'p_subgoals','thy_parser.py',312),
  ('subgoals -> subgoal','subgoals',1,'p_subgoals','thy_parser.py',313),
  ('subgoal -> SUBGOAL QUOTED_STRING apply_block','subgoal',3,'p_subgoal','thy_parser.py',321),
  ('typespec -> ID','typespec',1,'p_typespec','thy_parser.py',335),
  ('typespec -> typeargs ID','typespec',2,'p_typespec','thy_parser.py',336),
  ('typearg -> ID','typearg',1,'p_typearg','thy_parser.py',346),
  ('typearg -> ID COLON COLON ID','typearg',4,'p_typearg','thy_parser.py',347),
  ('typeargs -> typearg','typeargs',1,'p_typeargs','thy_parser.py',358),
  ('typeargs -> typearg COMMA typeargs','typeargs',3,'p_typeargs','thy_parser.py',359),
  ('typeargs -> LEFT_PAREN typeargs RIGHT_PAREN','typeargs',3,'p_typeargs','thy_parser.py',360),
  ('vars -> var','vars',1,'p_vars','thy_parser.py',374),
  ('vars -> var AND vars','vars',3,'p_vars','thy_parser.py',375),
  ('var -> names','var',1,'p_var','thy_parser.py',380),
  ('var -> ID COLON COLON ID','var',4,'p_var','thy_parser.py',381),
  ('var -> GREEK COLON COLON ID','var',4,'p_var','thy_parser.py',382),
  ('var -> ID COLON COLON QUOTED_STRING','var',4,'p_var','thy_parser.py',383),
  ('var -> GREEK COLON COLON QUOTED_STRING','var',4,'p_var','thy_parser.py',384),
  ('var -> names COLON COLON ID','var',4,'p_var','thy_parser.py',385),
  ('var -> names COLON COLON QUOTED_STRING','var',4,'p_var','thy_parser.py',386),
  ('var -> ID mixfix','var',2,'p_var','thy_parser.py',387),
  ('var -> ID COLON COLON ID mixfix','var',5,'p_var','thy_parser.py',388),
  ('var -> GREEK COLON COLON ID mixfix','var',5,'p_var','thy_parser.py',389),
  ('var -> ID COLON COLON QUOTED_STRING mixfix','var',5,'p_var','thy_parser.py',390),
  ('var -> GREEK COLON COLON QUOTED_STRING mixfix','var',5,'p_var','thy_parser.py',391),
  ('names -> ID','names',1,'p_names','thy_parser.py',426),
  ('names -> ID AND names','names',3,'p_names','thy_parser.py',427),
  ('names_list -> ID','names_list',1,'p_names_list','thy_parser.py',432),
  ('names_list -> ID names','names_list',2,'p_names_list','thy_parser.py',433),
  ('prop_pat -> LEFT_PAREN prop_pat_terms RIGHT_PAREN','prop_pat',3,'p_prop_pat','thy_parser.py',438),
  ('prop_pat_terms -> prop_pat_term','prop_pat_terms',1,'p_prop_pat_terms','thy_parser.py',443),
  ('prop_pat_terms -> prop_pat_term prop_pat_terms','prop_pat_terms',2,'p_prop_pat_terms','thy_parser.py',444),
  ('prop_pat_term -> IS ID','prop_pat_term',2,'p_prop_pat_term','thy_parser.py',449),
  ('prop_pat_term -> IS QUOTED_STRING','prop_pat_term',2,'p_prop_pat_term','thy_parser.py',450),
  ('thmdecl -> thmbind COLON','thmdecl',2,'p_thmdecl','thy_parser.py',461),
  ('thmdef -> thmbind EQ','thmdef',2,'p_thmdef','thy_parser.py',466),
  ('thm -> ID attributes','thm',2,'p_thm','thy_parser.py',471),
  ('thm -> ID','thm',1,'p_thm','thy_parser.py',472),
  ('thm -> attributes','thm',1,'p_thm','thy_parser.py',473),
  ('thms -> thm','thms',1,'p_thms','thy_parser.py',491),
  ('thms -> thm thms','thms',2,'p_thms','thy_parser.py',492),
  ('thmbind -> ID','thmbind',1,'p_thmbind','thy_parser.py',497),
  ('thmbind -> ID attributes','thmbind',2,'p_thmbind','thy_parser.py',498),
  ('thmbind -> attributes','thmbind',1,'p_thmbind','thy_parser.py',499),
  ('attributes -> LEFT_BRACKET attributes_list RIGHT_BRACKET','attributes',3,'p_attributes','thy_parser.py',518),
  ('attributes_list -> empty','attributes_list',1,'p_attributes_list','thy_parser.py',523),
  ('attributes_list -> attribute','attributes_list',1,'p_attributes_list','thy_parser.py',524),
  ('attributes_list -> attribute COMMA attributes_list','attributes_list',3,'p_attributes_list','thy_parser.py',525),
  ('attribute -> ID args','attribute',2,'p_attribute','thy_parser.py',536),
  ('args -> empty','args',1,'p_args','thy_parser.py',541),
  ('args -> arg','args',1,'p_args','thy_parser.py',542),
  ('args -> arg args','args',2,'p_args','thy_parser.py',543),
  ('arg -> ID','arg',1,'p_arg','thy_parser.py',554),
  ('arg -> LEFT_PAREN args RIGHT_PAREN','arg',3,'p_arg','thy_parser.py',555),
  ('arg -> LEFT_BRACKET args RIGHT_BRACKET','arg',3,'p_arg','thy_parser.py',556),
  ('for_fixes -> empty','for_fixes',1,'p_for_fixes','thy_parser.py',576),
  ('for_fixes -> FOR vars','for_fixes',2,'p_for_fixes','thy_parser.py',577),
  ('multi_specs -> structured_spec','multi_specs',1,'p_multi_specs','thy_parser.py',585),
  ('multi_specs -> structured_spec multi_specs','multi_specs',2,'p_multi_specs','thy_parser.py',586),
  ('structured_spec -> ID spec_prems for_fixes','structured_spec',3,'p_structured_spec','thy_parser.py',594),
  ('structured_spec -> QUOTED_STRING spec_prems for_fixes','structured_spec',3,'p_structured_spec','thy_parser.py',595),
  ('structured_spec -> thmdecl ID spec_prems for_fixes','structured_spec',4,'p_structured_spec','thy_parser.py',596),
  ('structured_spec -> thmdecl QUOTED_STRING spec_prems for_fixes','structured_spec',4,'p_structured_spec','thy_parser.py',597),
  ('spec_prems -> empty','spec_prems',1,'p_spec_prems','thy_parser.py',619),
  ('spec_prems -> IF prop_list','spec_prems',2,'p_spec_prems','thy_parser.py',620),
  ('prop_list -> ID','prop_list',1,'p_prop_list','thy_parser.py',628),
  ('prop_list -> ID prop_list','prop_list',2,'p_prop_list','thy_parser.py',629),
  ('prop_list -> ID AND prop_list','prop_list',3,'p_prop_list','thy_parser.py',630),
  ('specification -> vars WHERE multi_specs','specification',3,'p_specification','thy_parser.py',640),
  ('opening -> OPENING names_list','opening',2,'p_opening','thy_parser.py',653),
  ('axiomatization_block -> AXIOMATIZATION','axiomatization_block',1,'p_axiomatization_block','thy_parser.py',663),
  ('axiomatization_block -> AXIOMATIZATION vars','axiomatization_block',2,'p_axiomatization_block','thy_parser.py',664),
  ('axiomatization_block -> AXIOMATIZATION WHERE axiomatization','axiomatization_block',3,'p_axiomatization_block','thy_parser.py',665),
  ('axiomatization_block -> AXIOMATIZATION vars WHERE axiomatization','axiomatization_block',4,'p_axiomatization_block','thy_parser.py',666),
  ('axiomatization -> axiomatization_header spec_prems for_fixes','axiomatization',3,'p_axiomatization','thy_parser.py',682),
  ('axiomatization_header -> thmdecl ID','axiomatization_header',2,'p_axiomatization_header','thy_parser.py',693),
  ('axiomatization_header -> thmdecl QUOTED_STRING','axiomatization_header',2,'p_axiomatization_header','thy_parser.py',694),
  ('axiomatization_header -> thmdecl ID AND axiomatization_header','axiomatization_header',4,'p_axiomatization_header','thy_parser.py',695),
  ('axiomatization_header -> thmdecl QUOTED_STRING AND axiomatization_header','axiomatization_header',4,'p_axiomatization_header','thy_parser.py',696),
  ('locale_expr -> instance_list for_fixes','locale_expr',2,'p_locale_expr','thy_parser.py',709),
  ('instance_list -> instance','instance_list',1,'p_instance_list','thy_parser.py',719),
  ('instance_list -> instance PLUS instance_list','instance_list',3,'p_instance_list','thy_parser.py',720),
  ('instance -> ID','instance',1,'p_instance','thy_parser.py',728),
  ('instance -> ID pos_insts','instance',2,'p_instance','thy_parser.py',729),
  ('instance -> ID name_insts','instance',2,'p_instance','thy_parser.py',730),
  ('instance -> qualifier COLON ID pos_insts','instance',4,'p_instance','thy_parser.py',731),
  ('instance -> qualifier COLON ID name_insts','instance',4,'p_instance','thy_parser.py',732),
  ('qualifier -> ID','qualifier',1,'p_qualifier','thy_parser.py',758),
  ('qualifier -> QUOTED_STRING','qualifier',1,'p_qualifier','thy_parser.py',759),
  ('qualifier -> ID QUESTION_MARK','qualifier',2,'p_qualifier','thy_parser.py',760),
  ('qualifier -> QUOTED_STRING QUESTION_MARK','qualifier',2,'p_qualifier','thy_parser.py',761),
  ('pos_insts -> UNDERSCORE','pos_insts',1,'p_pos_insts','thy_parser.py',766),
  ('pos_insts -> ID','pos_insts',1,'p_pos_insts','thy_parser.py',767),
  ('pos_insts -> QUOTED_STRING','pos_insts',1,'p_pos_insts','thy_parser.py',768),
  ('pos_insts -> UNDERSCORE pos_insts','pos_insts',2,'p_pos_insts','thy_parser.py',769),
  ('pos_insts -> ID pos_insts','pos_insts',2,'p_pos_insts','thy_parser.py',770),
  ('pos_insts -> QUOTED_STRING pos_insts','pos_insts',2,'p_pos_insts','thy_parser.py',771),
  ('name_insts -> WHERE name_insts_list','name_insts',2,'p_name_insts','thy_parser.py',779),
  ('name_insts_list -> ID EQUALS ID','name_insts_list',3,'p_name_insts_list','thy_parser.py',783),
  ('name_insts_list -> ID EQUALS QUOTED_STRING','name_insts_list',3,'p_name_insts_list','thy_parser.py',784),
  ('name_insts_list -> ID EQUALS ID name_insts_list','name_insts_list',4,'p_name_insts_list','thy_parser.py',785),
  ('name_insts_list -> ID EQUALS QUOTED_STRING name_insts_list','name_insts_list',4,'p_name_insts_list','thy_parser.py',786),
  ('locale_block -> LOCALE ID','locale_block',2,'p_locale_block','thy_parser.py',799),
  ('locale_block -> LOCALE ID BEGIN content END','locale_block',5,'p_locale_block','thy_parser.py',800),
  ('locale_block -> LOCALE ID comment_block BEGIN content END','locale_block',6,'p_locale_block','thy_parser.py',801),
  ('locale_block -> LOCALE ID EQ locale','locale_block',4,'p_locale_block','thy_parser.py',802),
  ('locale_block -> LOCALE ID EQ locale BEGIN content END','locale_block',7,'p_locale_block','thy_parser.py',803),
  ('locale -> context_elem_list','locale',1,'p_locale','thy_parser.py',844),
  ('locale -> opening','locale',1,'p_locale','thy_parser.py',845),
  ('locale -> opening PLUS context_elem_list','locale',3,'p_locale','thy_parser.py',846),
  ('locale -> locale_expr','locale',1,'p_locale','thy_parser.py',847),
  ('locale -> locale opening','locale',2,'p_locale','thy_parser.py',848),
  ('locale -> locale opening PLUS context_elem_list','locale',4,'p_locale','thy_parser.py',849),
  ('locale -> locale_expr opening PLUS context_elem_list','locale',4,'p_locale','thy_parser.py',850),
  ('context_elem_list -> context_elem','context_elem_list',1,'p_context_elem_list','thy_parser.py',855),
  ('context_elem_list -> context_elem context_elem_list','context_elem_list',2,'p_context_elem_list','thy_parser.py',856),
  ('context_elem -> FIXES vars','context_elem',2,'p_context_elem','thy_parser.py',864),
  ('context_elem -> CONSTRAINS name_type_list','context_elem',2,'p_context_elem','thy_parser.py',865),
  ('context_elem -> ASSUMES prop_list','context_elem',2,'p_context_elem','thy_parser.py',866),
  ('context_elem -> DEFINES defines_list','context_elem',2,'p_context_elem','thy_parser.py',867),
  ('context_elem -> NOTES notes_list','context_elem',2,'p_context_elem','thy_parser.py',868),
  ('name_type_list -> ID COLON COLON ID','name_type_list',4,'p_name_type_list','thy_parser.py',878),
  ('name_type_list -> ID COLON COLON ID AND name_type_list','name_type_list',6,'p_name_type_list','thy_parser.py',879),
  ('defines_list -> defines_list_element','defines_list',1,'p_defines_list','thy_parser.py',887),
  ('defines_list -> defines_list_element AND defines_list','defines_list',3,'p_defines_list','thy_parser.py',888),
  ('defines_list_element -> ID','defines_list_element',1,'p_defines_list_element','thy_parser.py',896),
  ('defines_list_element -> QUOTED_STRING','defines_list_element',1,'p_defines_list_element','thy_parser.py',897),
  ('defines_list_element -> thmdecl ID','defines_list_element',2,'p_defines_list_element','thy_parser.py',898),
  ('defines_list_element -> thmdecl QUOTED_STRING','defines_list_element',2,'p_defines_list_element','thy_parser.py',899),
  ('defines_list_element -> ID prop_pat','defines_list_element',2,'p_defines_list_element','thy_parser.py',900),
  ('defines_list_element -> QUOTED_STRING prop_pat','defines_list_element',2,'p_defines_list_element','thy_parser.py',901),
  ('defines_list_element -> thmdecl ID prop_pat','defines_list_element',3,'p_defines_list_element','thy_parser.py',902),
  ('defines_list_element -> thmdecl QUOTED_STRING prop_pat','defines_list_element',3,'p_defines_list_element','thy_parser.py',903),
  ('notes_list -> notes_list_element','notes_list',1,'p_notes_list','thy_parser.py',929),
  ('notes_list -> notes_list_element AND notes_list','notes_list',3,'p_notes_list','thy_parser.py',930),
  ('notes_list_element -> thmdef thms','notes_list_element',2,'p_notes_list_element','thy_parser.py',938),
  ('notes_list_element -> thms','notes_list_element',1,'p_notes_list_element','thy_parser.py',939),
  ('typedecl -> TYPEDECL typespec','typedecl',2,'p_typedecl','thy_parser.py',963),
  ('typedecl -> TYPEDECL typespec mixfix','typedecl',3,'p_typedecl','thy_parser.py',964),
  ('type_synonym -> TYPE_SYNONYM typespec EQUALS ID','type_synonym',4,'p_type_synonym','thy_parser.py',974),
  ('type_synonym -> TYPE_SYNONYM typespec EQUALS ID mixfix','type_synonym',5,'p_type_synonym','thy_parser.py',975),
  ('mixfix -> LEFT_PAREN template RIGHT_PAREN','mixfix',3,'p_mixfix','thy_parser.py',990),
  ('mixfix -> LEFT_PAREN template prios RIGHT_PAREN','mixfix',4,'p_mixfix','thy_parser.py',991),
  ('mixfix -> LEFT_PAREN template NAT RIGHT_PAREN','mixfix',4,'p_mixfix','thy_parser.py',992),
  ('mixfix -> LEFT_PAREN template prios NAT RIGHT_PAREN','mixfix',5,'p_mixfix','thy_parser.py',993),
  ('mixfix -> LEFT_PAREN INFIX template NAT RIGHT_PAREN','mixfix',5,'p_mixfix','thy_parser.py',994),
  ('mixfix -> LEFT_PAREN INFIXL template NAT RIGHT_PAREN','mixfix',5,'p_mixfix','thy_parser.py',995),
  ('mixfix -> LEFT_PAREN INFIXR template NAT RIGHT_PAREN','mixfix',5,'p_mixfix','thy_parser.py',996),
  ('mixfix -> BINDER template NAT RIGHT_PAREN','mixfix',4,'p_mixfix','thy_parser.py',997),
  ('mixfix -> BINDER template prio NAT RIGHT_PAREN','mixfix',5,'p_mixfix','thy_parser.py',998),
  ('mixfix -> STRUCTURE','mixfix',1,'p_mixfix','thy_parser.py',999),
  ('template -> QUOTED_STRING','template',1,'p_template','thy_parser.py',1047),
  ('template -> CARTOUCHE','template',1,'p_template','thy_parser.py',1048),
  ('prios -> LEFT_BRACKET nat_list RIGHT_BRACKET','prios',3,'p_prios','thy_parser.py',1053),
  ('prio -> LEFT_BRACKET NAT RIGHT_BRACKET','prio',3,'p_prio','thy_parser.py',1058),
  ('nat_list -> NAT','nat_list',1,'p_nat_list','thy_parser.py',1063),
  ('nat_list -> NAT COMMA nat_list','nat_list',3,'p_nat_list','thy_parser.py',1064),
  ('primrec_block -> PRIMREC specification','primrec_block',2,'p_primrec_block','thy_parser.py',1076),
  ('fun_block -> FUN specification','fun_block',2,'p_fun_block','thy_parser.py',1081),
  ('fun_block -> FUNCTION specification','fun_block',2,'p_fun_block','thy_parser.py',1082),
  ('fun_block -> FUN opts specification','fun_block',3,'p_fun_block','thy_parser.py',1083),
  ('fun_block -> FUNCTION opts specification','fun_block',3,'p_fun_block','thy_parser.py',1084),
  ('opts -> LEFT_PAREN opt_list RIGHT_PAREN','opts',3,'p_opts','thy_parser.py',1092),
  ('opt_list -> sequential','opt_list',1,'p_opt_list','thy_parser.py',1097),
  ('opt_list -> domintros','opt_list',1,'p_opt_list','thy_parser.py',1098),
  ('opt_list -> sequential COMMA opt_list','opt_list',3,'p_opt_list','thy_parser.py',1099),
  ('opt_list -> domintros COMMA opt_list','opt_list',3,'p_opt_list','thy_parser.py',1100),
  ('sequential -> ID','sequential',1,'p_sequential','thy_parser.py',1110),
  ('sequential -> QUOTED_STRING','sequential',1,'p_sequential','thy_parser.py',1111),
  ('domintros -> ID','domintros',1,'p_domintros','thy_parser.py',1117),
  ('domintros -> QUOTED_STRING','domintros',1,'p_domintros','thy_parser.py',1118),
  ('section_block -> SECTION CARTOUCHE','section_block',2,'p_section_block','thy_parser.py',1127),
  ('text_block -> TEXT CARTOUCHE','text_block',2,'p_text_block','thy_parser.py',1132),
  ('comment_block -> COMMENT_CARTOUCHE CARTOUCHE','comment_block',2,'p_comment_block','thy_parser.py',1137),
  ('symbol -> BANG','symbol',1,'p_symbol','thy_parser.py',1146),
  ('symbol -> STAR','symbol',1,'p_symbol','thy_parser.py',1147),
  ('symbol -> BACKSLASH','symbol',1,'p_symbol','thy_parser.py',1148),
  ('symbol -> LT','symbol',1,'p_symbol','thy_parser.py',1149),
  ('symbol -> HAT','symbol',1,'p_symbol','thy_parser.py',1150),
  ('symbol -> GT','symbol',1,'p_symbol','thy_parser.py',1151),
  ('symbol -> PLUS','symbol',1,'p_symbol','thy_parser.py',1152),
  ('empty -> <empty>','empty',0,'p_empty','thy_parser.py',1161),
]
